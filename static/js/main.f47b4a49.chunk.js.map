{"version":3,"sources":["Logic/PDA.js","Logic/Computer.js","Logic/TM.js","Logic/IGraphTypes.js","Logic/Stack.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Logic/DFA.ts","Logic/NFA.ts","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/getSaves.ts","Api/save.ts","Api/getSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Components/Pages/LoginPage/GoogleOAuthButton/GoogleOAuthButton.tsx","Components/Pages/LoginPage/LoginPage.tsx","Components/Pages/PingPage/PingPage.tsx","Api/pingApi.ts","Components/Pages/FailedLoginPage/FailedLoginPage.tsx","Components/AppHeader/AppHeader.tsx","Api/obtainAuth.ts","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","App.tsx","index.tsx","Logic/EpsilonNFA.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","exports","__esModule","Computer_1","require","Stack_1","lodash_1","PDA","_super","graph","startStatements","input","byEmpty","_this","matrix","stack","Stack","historiStep","historiRun","setInput","forEach","value","push","idLogic","alphabet","get","restart","byEmptyStackAdmt","isAdmt","admitByEmptyStack","step","_a","ret","_step","counterSteps","counter","history","console","log","nodes","value1","isAdmit","run","counterStepsForResult","tmp","tr","histori","newPosSet","updCurPos","curPosition","epsStep","pPos","epsilonStep","stmt","peek","rmRepeations","htable","Map","positions","undefined","JSON","stringify","set","epsId","letterStep","toNodes","by","haveAdmitting","BOTTOM","statements","id","nfaToDfa","dfaStmts","ImSet","dfaMatrix","add","size","getNth","edges","mp","myForEach","index","key","from","to","transitions","Set","title","_edges","acc","value2","minimizeDfa","groups","gTable","map","group","q","Queue","enqueue","_loop_1","dequeue","grp","h","rs","newGrp","has","mkGrp","arr","el","upd","filter","gtvalue","gtvalue1","gt","g","admt","lt","EPS","createMatrix","cycleEps","isDeterministic","j","statementFrom","statementTo","localValue","letterId","stDwn","stackDown","stPsh","stackPush","mv","move","cellMatrix","copyPushList","cpy","pushReverse","pushVals","reverse","pushTopToNewStack0","newStack","pop","permute0","permutation","r","cloneDeep","sort","a","_tmp","dwn","_detour","lvl","cur","permute","k","result","slice","c","fill","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","cell","idx","newCycleStack","cpyTo","matchPushEpsVal","matchDownEpsVal","endsOfEpsWay","dfs","elements","top","Error","transformedInput","haveEpsilon","tmp_1","retNodes","temp","getStorage","Computer","capacity","Infinity","storage","item","shift","table","normalize","v","_v","getItter","it","callback","getIter","iter","eof","setStartStatements","this_1","getAlphabetFromEdges","getStatementsFromNodes","currentNode","alphabetSet","i_1","IGraphTypes_1","PDA_1","TMMemory","pointer","getPointer","reset","lookUp","initialize","init","mvRight","curr","mvLeft","TM","startStatement","mem","__step","Move","R","L","assignCurMt","memory","checkMemFormat","isMtMem","_b","curMt","newPos","list","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","_excluded","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","node","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","transitionsToLabel","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","str","join","getTransitionsTitles","decorateGraph","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","edge","getNodeNamePrefix","prefix","substring","computersInfo","dfa","name","description","preview","defaultGraph","x","y","nfa","nfa-eps","pda","tm","getCookie","_parts$pop","parts","document","cookie","split","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","transition","activeTransition","changeTransitions","transitionsText","fth","fst","snd","trd","bebra","_value$trd","changeEdgeTransitions","changeStackDown","deleteEdge","changeEditMode","editMode","updateTransitions","_value$trd2","deleteTransition","delete","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","helperText","onBlur","Edit_default","DFA","_EpsilonNFA","inherits","createSuper","_thisSuper","assertThisInitialized","getPrototypeOf","createClass","EpsilonNFA","NFA","RunControl","historyEndRef","createRef","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","find","computer","ComputerShouldBeUpdated","prev","current","some","isEqual","onInputChanged","_this$state$computer","wasRuned","currentInputIndex","stepResult","changeStateIsCurrent","updMem","_nodes","nodeCore","_this$historyEndRef","_this$historyEndRef$c","scrollIntoView","behavior","error","_this$state$computer2","_this$state$computer3","snapshot","_this2","char","Done_default","Close_default","curStbyEmp","Tooltip","ref","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","save_index","findIndex","user_id","saves_json","setItem","parse","getItem","BASE_URL","URL","process","AUTH_PORT","PING_PORT","SAVES_PORT","getAuthHeaders","headers","Headers","getParams","method","onAuthFailed","reject","url","port","pathname","params","fetch","href","then","response","status","ok","statusText","json","catch","request","body","postParams","getSave","CloudSavesManager","_callee","regenerator_default","wrap","_context","next","sent","t0","abrupt","stop","_callee2","_context2","_callee3","serialized_save","_context3","apiSave","WelcomePopout","_ref","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","asyncToGenerator","mark","_x","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","_ref4","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","_callee4","_context4","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","_","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","GoogleOAuthButton","characters","charactersLength","charAt","floor","random","getRandomString","auth_url","objectSpread2","action","src","alt","aria-hidden","LoginPage","objectDestructuringEmpty","LoginPage_GoogleOAuthButton_GoogleOAuthButton","PingPage","pong","setPong","ping","text","FailedLoginPage","react_router_dom","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","useHistory","AppBar","position","Toolbar","obtainAuth","SuccessLoginPage","onAuthSuccess","updateAuth","createContext","App","memRef","network","lastNodeId","subscribeToShortcuts","addEventListener","inEdgeMode","enterEdgeMode","ctrlKey","preventDefault","openSavePopout","leaveEdgeMode","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","login","logout","changePopout","popout","getNodeById","getEdgeById","updateGraph","setData","ids","includes","changeNodePosition","createNode","args","canvas","selectNode","selectedNode","deselectNode","splice","addEdge","addEdgeMode","disableEditMode","onEdgeDragEnd","controlEdge","selectEdge","selectedEdge","deselectEdge","changeEdgeLabel","changeEdgeTransition","onDragEnd","_args$pointer$canvas","ptr","memPos","_this$memRef","_this$memRef$current","events","doubleClick","controlNodeDragEnd","dragEnd","options","smooth","enabled","roundness","shape","font","labelHighlightBold","widthConstraint","heightConstraint","physics","initiallyStabilized","_this$state$mem","react_router","path","Pages_LoginPage_LoginPage","Pages_PingPage_PingPage","Pages_FailedLoginPage_FailedLoginPage","Pages_SuccessLoginPage_SuccessLoginPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","_this2$memRef","_this2$memRef$current","abs","Components_AppHeader_AppHeader","lib_default","getNetwork","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.f47b4a49.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar lodash_1 = require(\"lodash\");\nvar PDA = /** @class */ (function (_super) {\n    __extends(PDA, _super);\n    function PDA(graph, startStatements, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.matrix = [];\n        _this.stack = new Stack_1.Stack();\n        _this.historiStep = [];\n        _this.historiRun = [];\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.byEmptyStackAdmt = function (isAdmt) {\n            _this.admitByEmptyStack = isAdmt;\n        };\n        _this.step = function () {\n            var _a;\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            console.log(\"STEP stck: \");\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return console.log(value1.stack); }); });\n            console.log(\"STEP admit: \");\n            console.log(ret.isAdmit);\n            return ret;\n        };\n        _this.run = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n            }\n            return _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun);\n        };\n        _this._step = function (counter, tr, histori) {\n            var newPosSet = [];\n            var updCurPos = function () {\n                _this.curPosition = [];\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\n                newPosSet = [];\n            };\n            var epsStep = function () {\n                _this.curPosition.forEach(function (value) {\n                    var _a;\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack);\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var letterSter = function () {\n                _this.curPosition.forEach(function (value) {\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack);\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var rmRepeations = function () {\n                var htable = new Map();\n                var positions = [];\n                _this.curPosition.forEach(function (value) {\n                    if (htable.get(JSON.stringify(value)) === undefined) {\n                        positions.push(value);\n                        htable.set(JSON.stringify(value), value);\n                    }\n                });\n                _this.curPosition = [];\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\n            };\n            if (_this.epsId !== undefined) {\n                epsStep();\n                updCurPos();\n            }\n            if (counter < _this.input.length) {\n                letterSter();\n                updCurPos();\n                if (_this.epsId !== undefined) {\n                    epsStep();\n                    updCurPos();\n                }\n            }\n            else {\n                rmRepeations();\n                // console.log(\":::::::::::::::::::\")\n                // this.curPosition.forEach(value => {\n                //     console.log(value.stmt)\n                //     console.log(value.stack)\n                // })\n                // console.log(\":::::::::::::::::::\")\n                return {\n                    nodes: _this.toNodes(_this.curPosition),\n                    counter: counter,\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\n                    history: histori\n                };\n            }\n            rmRepeations();\n            // console.log(\":::::::::::::::::::\")\n            // this.curPosition.forEach(value => {\n            //     console.log(value.stmt)\n            //     console.log(value.stack)\n            // })\n            // console.log(\":::::::::::::::::::\")\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\n            counter++;\n            return {\n                nodes: _this.toNodes(_this.curPosition),\n                counter: counter,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                history: histori\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                var stack = new Stack_1.Stack();\n                stack.push(Computer_1.BOTTOM);\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id),\n                    stack: stack\n                });\n            });\n        };\n        // move to Nfa\n        _this.nfaToDfa = function () {\n            _this.restart();\n            var start = _this.curPosition;\n            var dfaStmts = new ImSet();\n            var tmp = [];\n            var i = 0;\n            var dfaMatrix = [];\n            dfaStmts.add(_this.curPosition);\n            while (i < dfaStmts.size()) {\n                _this.curPosition = dfaStmts.getNth(i);\n                _this.alphabet.forEach(function (value) {\n                    _this._step(0, value, []);\n                    if (_this.curPosition.length > 0) {\n                        dfaStmts.add(_this.curPosition);\n                    }\n                    tmp.push(_this.curPosition);\n                    _this.curPosition = dfaStmts.getNth(i);\n                });\n                dfaMatrix.push(tmp);\n                tmp = [];\n                i++;\n            }\n            var nodes = [];\n            var edges = [];\n            var mp = new Map();\n            dfaStmts.myForEach(function (value, index) {\n                mp.set(JSON.stringify(value), index);\n                var isAdmt = _this.haveAdmitting(value);\n                nodes.push({ id: index, isAdmit: isAdmt });\n            });\n            dfaStmts.myForEach(function (value, index) {\n                _this.alphabet.forEach(function (value1, key) {\n                    var from = mp.get(JSON.stringify(value));\n                    var to = mp.get(JSON.stringify(dfaMatrix[from][value1]));\n                    if (to !== undefined) {\n                        edges.push({ from: from, to: to, transitions: new Set([[{ title: key }]]) });\n                    }\n                });\n            });\n            var _edges = [];\n            nodes.forEach(function (value) { return nodes.forEach(function (value1) {\n                var acc = [];\n                edges.forEach(function (value2) {\n                    if (value.id === value2.from && value1.id === value2.to) {\n                        acc.push(Array.from(value2.transitions)[0][0]);\n                        // console.log(\"->>\", acc)\n                    }\n                });\n                if (acc.length > 0) {\n                    _edges.push({ from: value.id, to: value1.id, transitions: new Set([acc]) });\n                    // console.log(\"->>\", value.id, value1.id, acc)\n                }\n            }); });\n            return { nodes: nodes, edges: _edges };\n        };\n        //https://www.usna.edu/Users/cs/wcbrown/courses/F17SI340/lec/l22/lec.html\n        // move to Dfa\n        _this.minimizeDfa = function () {\n            _this.restart();\n            var groups = [];\n            groups.push(new ImSet());\n            groups.push(new ImSet());\n            var gTable = _this.matrix.map(function (value) { return value.map(function (value1) { return ({ group: -1, value: value1[0] }); }); });\n            _this.statements.forEach(function (value) {\n                if (value.isAdmit) {\n                    groups[0].add([value.idLogic]);\n                }\n                else {\n                    groups[1].add([value.idLogic]);\n                }\n            });\n            gTable.forEach(function (value) { return value.forEach(function (value1) {\n                if (value1.value.isAdmit) {\n                    value1.group = 0;\n                    groups[0].add([value1.value.idLogic]);\n                }\n                else {\n                    value1.group = 1;\n                    groups[1].add([value1.value.idLogic]);\n                }\n            }); });\n            var mkGrp = function (i, gTable) {\n                var h = groups[i].getNth(0)[0];\n                var rs = JSON.stringify(gTable[h].map(function (value) { return value.group; }));\n                var newGrp = new ImSet();\n                gTable.forEach(function (value, index) {\n                    if (rs === JSON.stringify(value.map(function (value1) { return value1.group; })) && groups[i].has([index])) {\n                        newGrp.add([index]);\n                    }\n                });\n                return newGrp;\n            };\n            var filter = function (arr, el) {\n                var upd = new ImSet();\n                arr.myForEach(function (value) {\n                    if (value[0] !== el[0]) {\n                        upd.add(value);\n                    }\n                });\n                return upd;\n            };\n            var q = new Queue();\n            groups.forEach(function (value, index) { return q.enqueue(index); });\n            var _loop_1 = function () {\n                var id = q.dequeue();\n                if (id !== undefined) {\n                    var grp = mkGrp(id, gTable);\n                    if (groups[id].size() > grp.size()) {\n                        q.enqueue(groups.length);\n                        q.enqueue(id);\n                        groups.push(grp);\n                        groups[groups.length - 1].myForEach(function (value, index) {\n                            if (id !== undefined) {\n                                groups[id] = filter(groups[id], groups[groups.length - 1].getNth(index));\n                            }\n                        });\n                        groups = groups.filter(function (value) { return value.size() > 0; });\n                        gTable.forEach(function (gtvalue, index) { return gtvalue.forEach(function (gtvalue1) {\n                            if (groups[groups.length - 1].has([gtvalue1.value.idLogic])) {\n                                gtvalue1.group = groups.length - 1;\n                            }\n                        }); });\n                    }\n                }\n            };\n            while (q.size() > 0) {\n                _loop_1();\n            }\n            var gt = groups.map(function (value) { return gTable[value.getNth(0)[0]].map(function (value1) { return ({ g: value1.group, admt: value1.value.isAdmit }); }); });\n            var nodes = groups.map(function (value, index) { return ({ id: index, isAdmit: index === 0 }); });\n            var edges = [];\n            gt.forEach(function (value, index) {\n                _this.alphabet.forEach(function (n, lt) {\n                    edges.push({\n                        from: index,\n                        to: value[n].g,\n                        transitions: new Set([[{ title: lt }]])\n                    });\n                });\n            });\n            var _edges = [];\n            nodes.forEach(function (value) { return nodes.forEach(function (value1) {\n                var acc = [];\n                edges.forEach(function (value2) {\n                    if (value.id === value2.from && value1.id === value2.to) {\n                        acc.push(Array.from(value2.transitions)[0][0]);\n                        // console.log(\"->>\", acc)\n                    }\n                });\n                if (acc.length > 0) {\n                    _edges.push({ from: value.id, to: value1.id, transitions: new Set([acc]) });\n                    // console.log(\"->>\", value.id, value1.id, acc)\n                }\n            }); });\n            return { nodes: nodes, edges: _edges };\n        };\n        _this.admitByEmptyStack = byEmpty;\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\n        _this.createMatrix();\n        // this.matrix.forEach(value => {\n        //     value.forEach(value1 => value1.forEach(value2 => {\n        //         console.log(value2.idLogic)\n        //         console.log(value2.stackDown)\n        //         console.log(value2.stackPush)\n        //         console.log(value2.stack)\n        //\n        //     }))\n        // })\n        _this.stack.push(Computer_1.BOTTOM);\n        _this.curPosition = []; //{stack: new Stack<string>(), stmt: startStatements}\n        startStatements.forEach(function (value) {\n            var stack = new Stack_1.Stack();\n            stack.push(Computer_1.BOTTOM);\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id),\n                stack: stack\n            });\n        });\n        _this.setInput(input);\n        if (_this.epsId) { //\n            _this.curPosition.forEach(function (value) {\n                _this.cycleEps(value.stmt.idLogic, value.stack);\n            });\n            // this.cycleEps(this.curPosition[0].stmt.idLogic, this.curPosition[0].stack!)\n        } //\n        console.log('-------------------------');\n        console.log(_this.isDeterministic());\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(\"MTX\");\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        console.log('-------------------------');\n        return _this;\n    }\n    PDA.prototype.createMatrix = function () {\n        for (var i = 0; i < this.statements.size; i++) {\n            this.matrix[i] = [];\n            for (var j = 0; j < this.alphabet.size; j++) {\n                this.matrix[i][j] = []; //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\n            }\n        }\n        for (var i = 0; i < this.edges.length; i++) {\n            var statementFrom = this.statements.get(this.edges[i].from);\n            var statementTo = this.statements.get(this.edges[i].to);\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\n                // console.log(letterId)\n                var stDwn = this.edges[i].localValue[j].stackDown;\n                var stPsh = this.edges[i].localValue[j].stackPush;\n                var mv = this.edges[i].localValue[j].move;\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\n                    stDwn = Computer_1.EPS;\n                    stPsh = [Computer_1.EPS];\n                }\n                // console.log(statementTo.move)\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv }));\n            }\n        }\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\n        this.statements.forEach(function (value) { return console.log(value); });\n        this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n    };\n    PDA.prototype.cellMatrix = function (i, j) {\n        return this.matrix[i][j];\n    };\n    PDA.prototype.copyPushList = function (value) {\n        var _a;\n        var cpy = [];\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\n        return cpy;\n    };\n    PDA.prototype.pushReverse = function (pushVals, stack) {\n        pushVals.reverse().forEach(function (value) {\n            stack.push(value);\n        });\n    };\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\n        newStack.pop();\n        var pushVals = this.copyPushList(value);\n        this.pushReverse(pushVals, newStack);\n    };\n    PDA.permute0 = function (permutation) {\n        var r = lodash_1.cloneDeep(permutation);\n        function cmp(a, b) {\n            if (a.stackDown && b.stackDown) {\n                if (a.stackDown < b.stackDown) {\n                    return -1;\n                }\n                if (a.stackDown > b.stackDown) {\n                    return 1;\n                }\n                return 0;\n            }\n            return 0;\n        }\n        r = r.sort(cmp);\n        var tmp = [];\n        var _tmp = [];\n        var dwn = r[0].stackDown;\n        for (var i = 0; i < r.length; i++) {\n            if (r[i].stackDown === dwn) {\n                _tmp.push(r[i]);\n            }\n            else {\n                tmp.push(_tmp);\n                dwn = r[i].stackDown;\n                _tmp = [];\n                _tmp.push(r[i]);\n            }\n        }\n        tmp.push(_tmp);\n        var ret = [];\n        var _detour = function (lvl, cur, acc) {\n            if (lvl < tmp.length) {\n                for (var i = 0; i < tmp[lvl].length; i++) {\n                    var a = lodash_1.cloneDeep(acc);\n                    a.push(tmp[lvl][i]);\n                    _detour(lvl + 1, i, a);\n                }\n            }\n            else {\n                ret.push(acc);\n            }\n        };\n        _detour(0, 0, []);\n        return ret;\n    };\n    PDA.permute = function (permutation) {\n        var length = permutation.length;\n        var result = [permutation.slice()];\n        var c = new Array(length).fill(0);\n        var i = 1;\n        var k;\n        var p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = permutation[i];\n                permutation[i] = permutation[k];\n                permutation[k] = p;\n                c[i]++;\n                i = 1;\n                result.push(permutation.slice());\n            }\n            else {\n                c[i] = 0;\n                i++;\n            }\n        }\n        return result;\n    };\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\n        var wasCreated = function (hash) {\n            return htable.get(hash) !== undefined;\n        };\n        if (!wasCreated(JSON.stringify(value))) {\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\n        }\n    };\n    PDA.prototype.cycleEps = function (curLId, stack0) {\n        var _this = this;\n        var htable = new Map();\n        var positions = [];\n        var visited = [];\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined ? PDA.permute0(this.cellMatrix(curLId, this.epsId)) : [(this.cellMatrix(curLId, this.epsId))];\n        // permutes.push(this.cellMatrix(curLId, this.epsId))\n        // let permutes: statementCell[][] = PDA.permute(this.cellMatrix(curLId, this.epsId))\n        var cycle = function (cell, idx, idLogic, stack) {\n            visited[idx] = true;\n            cell.forEach(function (value, index) {\n                if (value.idLogic === idLogic) {\n                    if (value.stackDown === stack.peek()) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchPushEpsVal(value, newCycleStack); //\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                    else if (value.stackDown === Computer_1.EPS) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchDownEpsVal(value, newCycleStack);\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                }\n            });\n        };\n        permutes.forEach(function (value) {\n            for (var i = 0; i < visited.length; i++) {\n                visited[i] = false;\n            }\n            cycle(value, 0, curLId, stack0);\n        });\n        return positions;\n    };\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack) {\n        var _this = this;\n        if (this.epsId === undefined) {\n            return;\n        }\n        var visited = [];\n        for (var i = 0; i < this.statements.size; i++) {\n            visited.push(false);\n        }\n        var dfs = function (id, stack, stDwn, elements) {\n            _this.cycleEps(id, stack).forEach(function (value) {\n                elements.push({\n                    idLogic: id,\n                    top: value.stack\n                });\n            });\n            elements.push({\n                idLogic: id,\n                top: stack\n            });\n            visited[id] = true;\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\n                        case stDwn: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                        case Computer_1.EPS: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                    }\n                }\n            }\n            return elements;\n        };\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\n        var positions = [];\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\n            positions.push({ stmt: stmt, stack: endsOfEpsWay[i].top });\n        }\n        return positions;\n    };\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS) {\n            if (value.stackPush.length !== 1) {\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n            }\n            else {\n                newStack.pop();\n            }\n        }\n        else {\n            this.pushTopToNewStack0(newStack, value);\n        }\n    };\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n        }\n        else if (value.stackPush[0] !== Computer_1.EPS) { //??\n            var pushVals = this.copyPushList(value);\n            this.pushReverse(pushVals, newStack);\n        }\n    };\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack) {\n        var _this = this;\n        var positions = [];\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\n            switch (value.stackDown) {\n                case stackDown: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchPushEpsVal(value, newStack);\n                    positions.push({ stmt: _this.statements.get(value.id), stack: newStack });\n                    break;\n                }\n                case Computer_1.EPS: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchDownEpsVal(value, newStack);\n                    positions.push({ stmt: _this.statements.get(value.id), stack: newStack });\n                    break;\n                }\n            }\n        });\n        return positions;\n    };\n    PDA.prototype.haveEpsilon = function () {\n        return this.epsId !== undefined;\n    };\n    PDA.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (value) {\n            value.forEach(function (value1) {\n                if (value1.length > 1) {\n                    var tmp_1 = value1[0];\n                    value1.forEach(function (value2, index) {\n                        if (index !== 0 && tmp_1.stackDown === undefined && value2.stackDown || index !== 0 && tmp_1.stackDown === value2.stackDown) {\n                            ret = false;\n                        }\n                    });\n                }\n            });\n        });\n        return ret && (!this.haveEpsilon());\n    };\n    PDA.prototype.haveAdmitting = function (positions) {\n        var ret = false;\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\n            positions.forEach(function (value) {\n                if (value.stmt.isAdmit) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n        else {\n            positions.forEach(function (value) {\n                if (value.stack.size() === 0) {\n                    ret = true;\n                }\n            });\n            // console.log(\"ADMT\")\n            // console.log(ret)\n            return ret;\n        }\n    };\n    PDA.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage() });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    return PDA;\n}(Computer_1.Computer));\nexports.PDA = PDA;\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    Queue.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\n// let nfa = new PDA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false}\n//\n//         ],\n//         edges: [\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0', stackDown: 'Z0', stackPush: [EPS] } ]])},\n//         ]\n//     }, [{id: 0, isAdmit: false}], [\"0\"],\n// )\n// nfa.byEmptyStackAdmt(true)\n// nfa.step()\n// let nfa = new PDA(\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: true},\n//             {id: 5, isAdmit: true},\n//             {id: 6, isAdmit: false},\n//\n//         ],\n//         edges: [\n//\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 0, to: 2, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 1, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 1, to: 4, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 2, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 2, to: 5, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 3, to: 3, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 3, to: 3, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 4, to: 4, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 4, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 5, to: 5, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 5, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 6, to: 6, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 6, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//\n//         ]\n//     }, [{id: 0, isAdmit: false}], [\"0\", \"1\", \"0\"], )\n//\n// nfa.nfaToDfa()\n// console.log(nfa.run())\n","\"use strict\";\nexports.__esModule = true;\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\nexports.EPS = 'Epsilon';\nexports.BOTTOM = \"Z0\";\nvar Computer = /** @class */ (function () {\n    function Computer(graph, startStatements) {\n        var _this = this;\n        this.input = [];\n        this.alphabet = new Map();\n        this.statements = new Map();\n        this.startStatements = [];\n        this.edges = [];\n        this.counterSteps = 0;\n        this.counterStepsForResult = 0;\n        this.setStartStatements(graph, startStatements);\n        graph.edges\n            .sort(function (a, b) { return a.from - b.from; })\n            .forEach(function (value) { return _this.edges.push({\n            transitions: value.transitions,\n            from: value.from,\n            to: value.to,\n            localValue: []\n        }); });\n        var _loop_1 = function (i) {\n            this_1.edges[i].localValue = [];\n            this_1.edges[i].transitions.forEach(function (value) {\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\n            }\n            //    this.edges[i].localValue!.push(value)\n            );\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.edges.length; i++) {\n            _loop_1(i);\n        }\n        this.getAlphabetFromEdges();\n        this.getStatementsFromNodes(graph.nodes);\n        this.startStatements = startStatements;\n        this.currentNode = startStatements[0];\n        this.nodes = graph.nodes;\n    }\n    Computer.prototype.getAlphabetFromEdges = function () {\n        var _this = this;\n        var alphabetSet = new Set();\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\n            this.edges[i_1].localValue.forEach(function (value) {\n                alphabetSet.add(value.title);\n            });\n        }\n        var i = 0;\n        alphabetSet.forEach(function (value) {\n            _this.alphabet.set(value, i);\n            i++;\n        });\n    };\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.statements.set(nodes[i].id, { id: nodes[i].id, isAdmit: nodes[i].isAdmit, idLogic: i });\n        }\n    };\n    Computer.prototype.setStartStatements = function (graph, startStatements) {\n        if (startStatements.length > 1 && this.alphabet.get(exports.EPS) === undefined) {\n            this.alphabet.set(exports.EPS, this.alphabet.size);\n            startStatements.forEach(function (value) { return startStatements.forEach(function (value1) {\n                graph.edges.push({ from: value.id, to: value1.id, transitions: new Set([[{ title: exports.EPS }]]) });\n                // graph.edges.push({from: value.id, to: value1.id, transitions: new Set<string>([EPS])})\n            }); });\n        }\n    };\n    return Computer;\n}());\nexports.Computer = Computer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\nvar PDA_1 = require(\"./PDA\");\nvar TMMemory = /** @class */ (function () {\n    function TMMemory() {\n        this.storage = ['_'];\n        this.pointer = 0;\n    }\n    TMMemory.prototype.getPointer = function () {\n        return this.pointer;\n    };\n    TMMemory.prototype.reset = function () {\n        this.storage = ['_'];\n        this.pointer = 0;\n    };\n    TMMemory.prototype.lookUp = function () {\n        return this.storage[this.pointer];\n    };\n    TMMemory.prototype.initialize = function (init) {\n        var _this = this;\n        init.forEach(function (value) { return _this.mvRight('_', value); });\n        this.pointer = 0;\n    };\n    TMMemory.prototype.mvRight = function (curr, upd) {\n        if (this.storage[this.pointer] === curr) {\n            this.storage[this.pointer] = upd;\n            this.pointer++;\n        }\n        if (this.pointer === this.storage.length) {\n            this.storage.push('_');\n        }\n    };\n    TMMemory.prototype.mvLeft = function (curr, upd) {\n        if (this.pointer === 0) {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer = 0;\n            }\n            var tmp_1 = ['_'];\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\n            this.storage = tmp_1;\n        }\n        else {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer--;\n            }\n        }\n    };\n    TMMemory.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return TMMemory;\n}());\nexports.TMMemory = TMMemory;\nvar TM = /** @class */ (function (_super) {\n    __extends(TM, _super);\n    function TM(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.mem = new TMMemory();\n        _this.__step = function (counter, tr, histori) {\n            var by = \"\";\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\n                if (value.stackDown === _this.mem.lookUp()) {\n                    if (value.move === IGraphTypes_1.Move.R) {\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\n                        by = value.stackDown;\n                    }\n                    if (value.move === IGraphTypes_1.Move.L) {\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\n                        by = value.stackDown;\n                    }\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\n                }\n            });\n            histori.push({\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                by: by\n                // this.input[counter].value\n            });\n            console.log(\"this.mem.getStorage()\");\n            console.log(_this.mem.getStorage());\n            counter++;\n            return {\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                counter: counter,\n                history: histori,\n                memory: _this.mem.getStorage(),\n                pointer: _this.mem.getPointer()\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.mem.reset();\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n        };\n        _this.run = function () {\n            throw Error(\"TM run\");\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            // this.restart()\n            _this.mem.reset();\n            _this.mem.initialize(input);\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n            console.log(_this.curPosition);\n        };\n        _this.step = function () {\n            console.log(\"STPMT\");\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\n        };\n        _this.checkMemFormat(graph);\n        // if (!this.isDeterministic()) {\n        //     throw Error (\"Not deterministic\")\n        // }\n        _this.mem.initialize(input);\n        _this.curPosition = [{\n                stmt: _this.statements.get(_this.startStatements[0].id)\n            }];\n        console.log(\"MTMTMTMTMTTMMTMTMT::::::::::\");\n        return _this;\n    }\n    TM.prototype.checkMemFormat = function (graph) {\n        var isMtMem = true;\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\n            value1.forEach(function (value2) {\n                var _a, _b;\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n                    isMtMem = false;\n                }\n            });\n        }); });\n        if (!isMtMem) {\n            throw Error(\"Not MT mem\");\n        }\n    };\n    TM.prototype.curMt = function () {\n        return this.curPosition[0];\n    };\n    TM.prototype.assignCurMt = function (newPos) {\n        this.curPosition[0] = newPos;\n    };\n    return TM;\n}(PDA_1.PDA));\nexports.TM = TM;\n// let nfa = new TM(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n//             { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n//             { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n//             { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n//             { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n//\n//             // { from: 1, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['V'], move: Move.R} ]]) },\n//             // { from: 2, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['B'], move: Move.R} ]]) },\n//             // { from: 2, to: 1, transitions: new Set([[ { title: 'b', stackDown: 'b', stackPush: ['6'], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: 'с', stackPush: ['['], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: '_', stackPush: [']'], move: Move.R } ]]) },\n//\n//             // {from: 1, to: 1, transitions: new Set([{title: 'a', stackDown: 'a', stackPush: ['A'], move: Move.R}])},\n//             // {from: 1, to: 2, transitions: new Set([{title: 'c', stackDown: 'b', stackPush: ['V'], move: Move.R}])},\n//             // {from: 2, to: 2, transitions: new Set([{title: 'c', stackDown: '_', stackPush: ['V'], move: Move.R}])},\n//\n//\n//\n//         ]\n//     },  [{id: 1, isAdmit: false}], ['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.setInput(['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nexports.__esModule = true;\nvar Move;\n(function (Move) {\n    Move[Move[\"L\"] = 0] = \"L\";\n    Move[Move[\"R\"] = 1] = \"R\";\n})(Move = exports.Move || (exports.Move = {}));\n","\"use strict\";\nexports.__esModule = true;\nvar Stack = /** @class */ (function () {\n    function Stack(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Stack.prototype.push = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Stack.prototype.pop = function () {\n        return this.storage.pop();\n    };\n    Stack.prototype.peek = function () {\n        return this.storage[this.size() - 1];\n    };\n    Stack.prototype.size = function () {\n        return this.storage.length;\n    };\n    Stack.prototype.getStorage = function () {\n        var list = [];\n        this.storage.forEach(function (value) { return list.push(value); });\n        return list;\n    };\n    Stack.prototype.cpyTo = function (stack) {\n        this.storage.forEach(function (value) { return stack.push(value); });\n        return stack;\n    };\n    return Stack;\n}());\nexports.Stack = Stack;\n","import React, {AllHTMLAttributes} from \"react\";\nimport \"./ControlWrapper.css\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\n    title: string,\n    visible: boolean\n}\n\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\n    static defaultProps = {\n        visible: true\n    }\n\n    render() {\n        const {visible, title, style, className, children, ...restProps} = this.props;\n\n        return (\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\n                   variant=\"outlined\"\n                   style={style}\n                   {...restProps}\n            >\n                <div className=\"control-wrapper--content\">\n                    <div>\n                        <Typography variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </div>\n\n                    <div className=\"control-wrapper--child\">\n                        {children}\n                    </div>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default ControlWrapper;","import React, {ChangeEvent} from \"react\";\nimport \"./NodeControl.css\";\nimport {node} from \"../../react-graph-vis-types\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\n\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\ninterface nodeControlProps {\n    node: node | null,\n    changeNodeLabel: (id: number, label: string) => void,\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\n    deleteNode: (id: number) => void,\n}\n\ninterface nodeControlState {\n    prevNodeId: number | undefined,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean\n}\n\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\n    constructor(props: nodeControlProps) {\n        super(props);\n\n        this.state = {\n            prevNodeId: this.props.node?.id,\n            label: this.props.node?.label || \"\",\n            isAdmit: this.props.node?.isAdmit || false,\n            isInitial: this.props.node?.isInitial || false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\n        if (this.props.node?.id !== prevState.prevNodeId) {\n            this.setState({\n                label: this.props.node?.label || \"\",\n                isAdmit: this.props.node?.isAdmit || false,\n                isInitial: this.props.node?.isInitial || false,\n                prevNodeId: this.props.node?.id\n            });\n        }\n    }\n\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\n            this.setState({label: event.target.value});\n        }\n    }\n\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\n            this.setState({isAdmit: event.target.checked});\n        }\n    }\n\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null && !this.props.node.isAdmit) {\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\n            this.setState({isInitial: event.target.checked});\n        }\n    }\n\n    onDeleteClick = (): void => {\n        if (this.props.node !== null) {\n            this.props.deleteNode(this.props.node.id);\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\n                <FormControl>\n\n                    <div className=\"node-control__item\">\n                        <TextField\n                            label=\"Имя\"\n                            size=\"small\"\n                            value={this.state.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isInitial}\n                                    onChange={this.onIsInitialChanged}\n                                />\n                            }\n                            label={\"Начальное\"}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isAdmit}\n                                    onChange={this.onIsAdmitChanged}\n                                />\n                            }\n                            label=\"Допускающее\"\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <Button\n                            onClick={this.onDeleteClick}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </FormControl>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default NodeControl;","import {ComputerInfo, ComputerType, graph} from \"./react-graph-vis-types\";\nimport {EPS} from \"./Logic/Computer\";\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\n\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>): string => {\n    const maxLength = (): number => {\n        let max: number = 0;\n        transitions.forEach(value => {\n            value.forEach(value1 => {\n                if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\n                    const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\n                    const ttl: number = value1.title === EPS ? 0 : value1.title.length\n                    const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\n                    max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\n                }\n            } )\n        })\n        return max\n    }\n\n    let spc = \"\"\n    const pdng_k = 7\n\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\n        spc += \" \"\n    }\n\n    let str = \"\" + spc\n    transitions.forEach(value => {\n        value.forEach(value1 => {\n            if (value1.title !== undefined && value1.title.length > 0) {\n                str += value1.title === EPS ? \"ε\" : value1.title\n                if (value1.stackDown !== undefined && value1.stackDown.length > 0) {\n                    str += \", \" + (value1.stackDown === EPS ? \"ε\" : value1.stackDown)\n                    // value1.stackDown\n                }\n                if (value1.stackPush !== undefined && value1.stackPush.length > 0 && value1.stackDown !== '') {\n                    str += \" | \" + value1.stackPush.map(value2 => value2 === EPS ? \"ε\" : value2).join(\":\")\n                }\n                if (value1.move !== undefined) {\n                    str += (value1.move === 0 ? \"L\" : \"R\")\n                }\n\n                str = str + \"\\n\" + spc\n            }\n        })\n\n    })\n    return str\n}\n\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>): string => {\n    let str = \"\"\n    transitions.forEach(value => {\n        value.forEach(value1 => {\n            if (value1.title !== undefined && value1.title.length > 0) {\n                str += value1.title === EPS ? \"eps\" : value1.title\n                if (value1.stackDown !== undefined && value1.stackDown.length > 0) {\n                    str += \", \" + (value1.stackDown === EPS ? \"eps\" : value1.stackDown)\n                }\n                if (value1.stackPush !== undefined && value1.stackPush.length > 0 && value1.stackDown !== '') {\n                    str += \" | \" + value1.stackPush.map(value2 => value2 === EPS ? \"eps\" : value2).join(\":\")\n                }\n                if (value1.move !== undefined) {\n                    str += \">\" + (value1.move === 0 ? \"L\" : \"R\")\n                }\n                str += \";\\n\"\n\n            }\n        })\n    })\n    return str\n}\n\n\nexport const decorateGraph = (graph: graph): graph => {\n    graph.nodes.forEach(node => {\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        node.color = {\n            background: background,\n            border: border,\n            highlight: {\n                border: border,\n                background: background\n            }\n        };\n        node.borderWidth = node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default;\n        node.borderWidthSelected = borderWidth.highlight;\n    })\n\n    graph.edges.forEach(edge => {\n        edge.label = transitionsToLabel(edge.transitions)\n    })\n\n    return graph;\n}\n\nexport const getNodeNamePrefix = (graph: graph): string => {\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\n\n    graph.nodes.forEach(node => {\n        let i = 0;\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\n            i++;\n        }\n        prefix = prefix.substring(0, i);\n    });\n\n    return prefix;\n}\n\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\n    dfa: {\n        name: \"ДКА\",\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\n        preview: \"dfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\n            ]\n        }\n    },\n    nfa: {\n        name: \"НКА\",\n        description: \"Может находиться в нескольких состояниях одновременно\",\n        preview: \"nfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\n\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\n            ]\n        }\n    },\n    \"nfa-eps\": {\n        name: \"ε-НКА\",\n        description: \"Расширение НКА, в котором используются ε-переходы\",\n        preview: \"nfa-eps.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 7, transitions: new Set([[{title: '1'}]])},\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 9, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 6, to: 6, transitions: new Set([[{title: '1'}]])},\n\n            ]\n        }\n    },\n    pda: {\n        name: \"МП\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([\n                        [\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\n                        ]])\n                },\n\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: 'Z0', stackPush: ['1', 'Z0']}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '0',  stackPush: ['0', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '1',  stackPush: ['0', '1' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '0',  stackPush: ['1', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: ['1', '1' ]}]])},\n\n                {\n                    from: 1, to: 2, transitions: new Set([\n                        [\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\n                        ]])\n                },\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '0',  stackPush: ['0'      ]}]])},\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '1',  stackPush: ['1'      ]}]])},\n\n                {\n                    from: 2, to: 2, transitions: new Set([\n                        [\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\n                        ]])\n                },\n                // {from: 2, to: 2, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: [EPS      ]}]])},\n\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\n\n            ]\n        }\n    },\n    tm: {\n        name: \"Машина Тьюринга\",\n        description: \"_\",\n        preview: \"_.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n            ]\n        }\n    },\n\n\n}\n\nexport const getCookie = (name: string) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n}\n\n\nexport const getRandomString = (length: number): string => {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","import React from \"react\";\nimport {ComputerTypeContext} from \"./App\";\n\nexport const withComputerType = (Component: typeof React.Component) => (\n    (props: any) => (\n        <ComputerTypeContext.Consumer>\n            { context => <Component computerType={context} {...props}/> }\n        </ComputerTypeContext.Consumer>\n    )\n)","import React from \"react\";\nimport {ComputerType, edge} from \"../../react-graph-vis-types\";\nimport {getTransitionsTitles, transitionsToLabel} from \"../../utils\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport Button from \"@mui/material/Button\";\nimport \"./EdgeControl.css\";\nimport Transition from \"./Transition/Transition\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport TextField from \"@mui/material/TextField\";\nimport {withComputerType} from \"../../hoc\";\nimport {EPS} from \"../../Logic/Computer\";\nimport {Move, TransitionParams} from \"../../Logic/IGraphTypes\";\nimport { TextareaAutosize } from \"@mui/material\";\n\n\ninterface EdgeControlProps {\n    edge: edge | null,\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\n    deleteEdge: (id: string) => void,\n    computerType: ComputerType | null\n}\n\ninterface Rule{\n    id: number\n    value: string\n}\n\ninterface EdgeControlState {\n    prevEdgeId: string | undefined,\n    transitions: Set<TransitionParams[]>,\n    transitionsText: string,\n    displayedTransitionText: string,\n    activeTransition: TransitionParams[] | null,\n    editMode: boolean,\n    countRules?: number, \n    rules: Rule[],\n}\n\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\n    constructor(props: EdgeControlProps) {\n        super(props);\n\n        this.state = {\n            prevEdgeId: this.props.edge?.id,\n            transitions: this.props.edge?.transitions || new Set(),\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>()),\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>()),\n            activeTransition: null,\n            editMode: false,\n            countRules: 1,\n            rules: [\n                {id: 1, value: ' '}\n            ]\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\n            this.setState({\n                transitions: this.props.edge?.transitions || new Set(),\n                prevEdgeId: this.props.edge?.id,\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>()),\n                activeTransition: null,\n                editMode: false\n            });\n        }\n    }\n\n    selectTransition = (transition: TransitionParams[] | null): void => {\n        if (this.state.activeTransition === transition) {\n            this.setState({activeTransition: null});\n        } else {\n            this.setState({activeTransition: transition});\n        }\n    }\n\n    changeTransitions = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        this.setState({transitionsText: value});\n\n        let t: { fst: string | undefined, snd: string | undefined, trd: string | undefined, fth: string | undefined }[] = []\n        this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\",\")\n                let fst = tmp.shift()\n                tmp = tmp.join('').split(\"|\" || \">\")\n                let snd = tmp.shift()\n                let trd = tmp\n                let fth\n\n                if (this.props.computerType === \"tm\") {\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n                }\n\n                t.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: fth })\n            })\n        let acc: TransitionParams[] = []\n        t.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                        move: value.fth === 'L' ? Move.L : Move.R\n                    }\n                )\n            }\n        })\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\n        this.setState({transitionsText:\n            value\n            , transitions: transitions\n        });\n\n    }\n\n    changeStackDown = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const value = event.target.value;\n\n        // this.setState({stackDownText: value});\n        if (value.slice(-1) === \",\") {\n            const transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>();\n\n            this.props.changeEdgeTransitions(this.props.edge!.id!, transitions);\n            this.setState({transitionsText: transitionsToLabel(transitions)}\n            );\n        }\n    }\n\n    deleteEdge = (): void => {\n        if (this.props.edge !== null) {\n            this.props.deleteEdge(this.props.edge.id!);\n        }\n    }\n    \n\n    private addInstruction(value: string) {\n        let newRow = {id: this.state.rules.length, value: value};\n        this.setState({rules: this.state.rules.concat(newRow)});\n    }\n    \n     changeEditMode = () => {\n         this.setState({editMode: !this.state.editMode});\n         this.updateTransitions();\n     }\n    \n    updateTransitions = () => {\n        const transitions = new Set<TransitionParams[]>();\n\n        let t: { fst: string | undefined, snd: string | undefined, trd: string | undefined, fth: string | undefined }[] = []\n        this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\",\")\n                let fst = tmp.shift()\n                tmp = tmp.join('').split(\"|\")\n                let snd = tmp.shift()\n                let trd = tmp\n                let fth\n\n                if (this.props.computerType === \"tm\") {\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n                }\n\n                t.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: fth })\n            })\n        // t.forEach(value =>  console.log(value))\n        let acc: TransitionParams[] = []\n        t.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n\n                        move: value.fth === 'L' ? Move.L : Move.R\n                    }\n                )\n            }\n        })\n        acc = acc.filter(x => x.title.length > 0)\n        transitions.add(acc)\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions);\n        this.setState({\n            transitionsText: getTransitionsTitles(transitions),\n            transitions: transitions\n        })\n    }\n\n    deleteTransition = (): void => {\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\n            const transitions = this.state.transitions;\n            transitions.delete(this.state.activeTransition);\n\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\n            this.setState({transitions: transitions, transitionsText: getTransitionsTitles(transitions)});\n        }\n    }\n\n\n\n    render() {\n        return (\n            // (this.props.computerType !== \"pda\")?\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\n                <div className=\"edge-control__container\">\n                    <div className=\"edge-control__item edge-control__transitions\">\n                        {\n                                <TextField\n                                    id=\"filled-multiline-static\"\n                                    multiline\n                                    rows={3}\n                                    variant=\"standard\"\n                                    label=\"Переходы\"\n                                    size=\"small\"\n                                    value={this.state.transitionsText}\n                                    onChange={this.changeTransitions}\n                                    helperText={this.props.computerType === \"nfa-eps\" || \"pda\" ? 'Список символов или \"eps\" через запятую' : \"Список символов через запятую\"}\n                                    onBlur={this.updateTransitions}\n                                />\n                        }\n\n                        <div className=\"edge-control__edit-transitions\"\n                             onClick={this.changeEditMode}>\n                            <EditIcon/>\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"edge-control__item\">\n                        <Button\n                            onClick={this.deleteEdge}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </div>\n            </ControlWrapper>\n            );\n        }\n}\n\nexport default withComputerType(EdgeControl);","import {GraphCore, NodeCore} from \"./IGraphTypes\";\nimport {EpsilonNFA} from \"./EpsilonNFA\";\n\nexport class DFA extends EpsilonNFA {\n\n    constructor(graph: GraphCore, startStatement: NodeCore[], input: string[]) {\n        super(graph, startStatement, input)\n        this.setInput(input)\n        if (!super.isDeterministic()) {\n            throw new Error(\"Is not determenistic\")\n        }\n    }\n\n}\n","import {GraphCore, NodeCore} from \"./IGraphTypes\";\nimport {EpsilonNFA} from \"./EpsilonNFA\";\n\nexport class NFA extends EpsilonNFA {\n\n    constructor(graph: GraphCore, startStatement: NodeCore[], input: string[]) {\n        super(graph, startStatement, input)\n        if (this.haveEpsilon()) {\n            throw new Error('Epsilon Transitions')\n        }\n    }\n\n}\n","import React, {ChangeEvent} from \"react\";\nimport {ComputerType, graph, node} from \"../../react-graph-vis-types\";\nimport {DFA} from \"../../Logic/DFA\";\nimport {isEqual} from \"lodash\";\nimport {withComputerType} from \"../../hoc\";\nimport {Computer} from \"../../Logic/Computer\";\nimport {NFA} from \"../../Logic/NFA\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport \"./RunControl.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from \"@mui/material/Typography\";\n\nimport Tooltip from '@mui/material/Tooltip';\n\nimport {EpsilonNFA} from \"../../Logic/EpsilonNFA\";\nimport {PDA} from \"../../Logic/PDA\";\nimport { TM } from \"../../Logic/TM\";\n\ninterface runControlProps {\n    computerType: ComputerType,\n    elements: graph,\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\n    updMem: ((mem: string[] | undefined, ptr: number | undefined) => void)\n}\n\ninterface runControlState {\n    input: string,\n    result?: boolean,\n    computer: Computer | undefined,\n    editMode: boolean,\n    currentInputIndex: number,\n    history: { a: node, b: string[] | undefined }[][],\n    byEmptyStack: boolean,\n    wasRuned: boolean,\n    memory: string[] | undefined\n}\n\n\n\nclass RunControl extends React.Component<runControlProps, runControlState> {\n\n    historyEndRef = React.createRef<HTMLDivElement>();\n\n    constructor(props: runControlProps) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            result: undefined,\n            computer: undefined,\n            editMode: true,\n            currentInputIndex: -1,\n            history: [],\n            byEmptyStack: false,\n            wasRuned: false,\n            memory: undefined\n        };\n    }\n\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node, input: string[]): Computer | undefined => {\n        switch (computerType) {\n            case \"dfa\":\n                try {\n                    return new DFA(graph, [initialNode], input);\n                } catch (e) {\n                    return undefined;\n                }\n            case \"nfa\":\n                return new NFA(graph, [initialNode], input);\n            case \"nfa-eps\":\n                return new EpsilonNFA(graph, [initialNode], input);\n            case \"pda\":\n                return new PDA(graph, [initialNode], input, this.state.byEmptyStack);\n            case \"tm\":\n                return new TM(graph, [initialNode], input);\n\n        }\n    }\n\n    componentDidMount() {\n        this.initializeComputer();\n    }\n\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\n        if (this.ComputerShouldBeUpdated(prevProps.elements, this.props.elements)) {\n            this.initializeComputer();\n        }\n    }\n\n    initializeComputer = () => {\n        console.warn(\"Reinitializing computer\");\n\n        const initialNode = this.props.elements.nodes.find(node => node.isInitial);\n        const input = this.state.input.split(\"\");\n\n        if (initialNode === undefined) {\n            console.warn(\"There is no initial node. Computer will not be initialized\");\n            return;\n        }\n\n        this.setState({\n            computer: this.getComputer(this.props.computerType, this.props.elements, initialNode, input),\n            result: undefined\n        });\n    }\n\n    ComputerShouldBeUpdated = (prev: graph, current: graph): boolean => {\n        const compareNodes = (): boolean => {\n            if (prev.nodes.length !== current.nodes.length) {\n                return true;\n            }\n\n            return prev.nodes.some((prev, index) => {\n                const curr = current.nodes[index];\n                return prev.id !== curr.id ||\n                    prev.isAdmit !== curr.isAdmit ||\n                    prev.isInitial !== curr.isInitial;\n            })\n        }\n\n        const compareEdges = (): boolean => {\n            if (prev.edges.length !== current.edges.length) {\n                return true;\n            }\n\n            return prev.edges.some((prev, index) => {\n                const curr = current.edges[index];\n                return prev.id !== curr.id ||\n                    prev.from !== curr.from ||\n                    prev.to !== curr.to ||\n                    !isEqual(curr.transitions, prev.transitions);\n            });\n        }\n\n        return compareEdges() || compareNodes();\n    }\n\n\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        const input = event.target.value;\n\n        this.reset();\n        this.state.computer?.setInput(input.split(\"\"));\n\n        this.setState({input: input});\n    }\n\n    step = (): void => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        if (this.state.wasRuned) {\n            this.setState({ wasRuned: false});\n            this.reset();\n        }\n\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\n\n        const stepResult = this.state.computer.step();\n\n        console.log(\"~~~\", stepResult)\n\n        this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\n        this.props.updMem(stepResult.memory, stepResult.pointer)\n\n        let result = undefined;\n        if (stepResult.counter === this.state.input.length) {\n            result = stepResult.isAdmit\n            // result = stepResult.nodes.some(node => node.isAdmit);\n        } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\n            result = false;\n        }\n\n        const nodes = stepResult.nodes\n            .map(nodeCore => this.props.elements.nodes.find(node => node.id == nodeCore.id))\n            .filter((node): node is node => node !== undefined);\n\n        const _nodes = nodes.map(function(e, i){\n            return { a: e, b: stepResult.nodes[i].stack }\n        })\n\n        this.setState({\n            result: result,\n            currentInputIndex: this.state.currentInputIndex + 1,\n            history: [...this.state.history, _nodes],\n            memory: stepResult.memory\n        }, () => this.historyEndRef?.current?.scrollIntoView({behavior: 'smooth'}));\n\n\n    }\n\n\n\n    reset = (): void => {\n\n        this.state.computer?.restart();\n        this.props.changeStateIsCurrent([], true); // resets all nodes\n        this.setState({result: undefined, currentInputIndex: -1, history: []});\n        this.state.computer?.setInput(this.state.input.split(\"\"))\n\n    }\n\n    run = (): void => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        this.reset();\n\n        const result = this.state.computer.run();\n\n        this.setState({result: result.isAdmit, currentInputIndex: -1, history: []});\n        this.setState({ wasRuned: true })\n    }\n\n\n    render() {\n        return (\n            <ControlWrapper title={\"Запуск\"}>\n                <div>\n\n                    <div className=\"run-control__item run-control__input__row\">\n                        {\n                            this.state.editMode ?\n                                <TextField\n                                    label=\"Входная строка\"\n                                    size=\"small\"\n                                    value={this.state.input}\n                                    onChange={this.onInputChanged}\n                                    onBlur={() => {\n                                        this.state.input.length && this.setState({editMode: false})\n                                    }}\n                                />\n                                :\n                                <div\n                                    className=\"run-control__input-value\"\n                                    onClick={() => {\n                                        this.setState({editMode: true});\n                                    }}\n                                >\n                                    {\n                                        Array.from(this.state.input).map((char, index) => (\n                                            <span\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\n                                                key={index}\n                                            >\n                                                {char}\n                                            </span>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"run-control__result\">\n                            {\n                                this.state.result === undefined ? null :\n                                    this.state.result\n                                        ? <DoneIcon style={{color: \"var(--commerce)\"}}/>\n                                        : <CloseIcon style={{color: \"var(--destructive)\"}}/>\n                            }\n                        </div>\n\n                    </div>\n\n                    <div className=\"run-control__item run-control__buttons\">\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={this.step}\n                            >\n                                Шаг\n                            </Button>\n                        </div>\n\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={this.run}\n                            >\n                                Запуск\n                            </Button>\n                        </div>\n\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={this.reset}\n                            >\n                                Сбросить\n                            </Button>\n                        </div>\n\n\n\n\n                    </div>\n\n                    {\n                        this.props.computerType === \"pda\" ?\n                            <div className=\"run-control__button\">\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    // onClick={this.run}\n\n                                    onClick={() => {\n                                        const curStbyEmp = this.state.byEmptyStack;\n                                        this.setState({ byEmptyStack: !curStbyEmp});\n                                        // console.log(this.state.byEmptyStack)\n                                        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\n                                        // this.componentDidMount()\n                                        // this.initializeComputer()\n                                        this.reset();\n                                    }}\n                                >\n                                    {this.state.byEmptyStack ?  \"По стеку\" : \"По состоянию\"}\n                                </Button>\n                            </div> : <div/>\n                    }\n\n                    <div className=\"run-control__item run-control__history\">\n                        <div className=\"run-control__history__header\">\n                            <Typography variant=\"h6\">История</Typography>\n                        </div>\n                        {\n                            this.state.history.length !== 0 ?\n                                <div className=\"run-control__history__scroll\">\n                                    {\n                                        this.state.history.map((nodes, index) => (\n                                            <div className=\"run-control__history__row\" key={index}>\n                                                <span className=\"run-control__history__index\">{index + 1}</span>\n                                                {\n                                                    nodes.map((node, index) => (\n                                                        <Tooltip\n                                                            title={ <Typography className=\"display-linebreak\">{node.b !== undefined ? node.b.reverse().join('\\n') : ''}</Typography> }>\n                                                            <div\n                                                                className=\"run-control__history__node\"\n                                                                style={{border: `${node.a.isInitial ? \"var(--accent)\" : node.a.isAdmit ? \"var(--second-accent)\" : \"#000000\"} 2px solid`}}\n                                                            >\n                                                                {node.a.label}\n                                                            </div>\n                                                        </Tooltip>\n                                                    ))\n                                                }\n                                            </div>\n                                        ))\n                                    }\n                                    <div ref={this.historyEndRef}/>\n                                </div>\n                                :\n                                <div className=\"run-control__history__placeholder\">\n                                    Используйте пошаговый запуск, чтобы наблюдать за историей\n                                </div>\n                        }\n                    </div>\n\n                </div>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nconst itemName = \"saves\";\n\nexport default class BrowserSavesManager implements SavesManager {\n    getSavesMeta(): Promise<SaveMeta[]> {\n        let saves = BrowserSavesManager.getSaves();\n\n        return new Promise<SaveMeta[]>(function (resolve) {\n                resolve(saves);\n            }\n        )\n    }\n\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        let saves = BrowserSavesManager.getSaves();\n\n        let save = saves.find(save => save.id == saveMeta.id);\n\n        return new Promise(function (resolve) {\n            resolve(save || null);\n        });\n    }\n\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        const saves = BrowserSavesManager.getSaves();\n        const next_id = Math.max(...saves.map(save => save.id)) + 1;\n        const save_index = saves.findIndex(save => save.name == name);\n        const save = {id: 0, name: name, save: {graph: graph, type: type}, user_id: \"local\"};\n\n        if (save_index == -1) {\n            save.id = next_id;\n            saves.push(save);\n        } else {\n            save.id = saves[save_index].id;\n            saves[save_index] = save;\n        }\n\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        localStorage.setItem(itemName, saves_json);\n\n        return new Promise(function (resolve) {\n            resolve();\n        });\n    }\n\n    private static getSaves(): Save[] {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        let saves: Save[] = [];\n\n        try {\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\n        } catch (error) {\n            console.warn(\"Invalid saves in local storage: \" + error);\n            return [];\n        }\n\n        return saves;\n    }\n}","import {getCookie} from \"../utils\";\n\nexport const BASE_URL = new URL(process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\");\nexport const AUTH_PORT = process.env.REACT_APP_BACKEND_AUTH_PORT ?? \"8001\";\nexport const PING_PORT = process.env.REACT_APP_BACKEND_PING_PORT ?? \"8002\";\nexport const SAVES_PORT = process.env.REACT_APP_BACKEND_SAVES_PORT ?? \"8003\";\n\nexport function getAuthHeaders(): Headers {\n    const headers = new Headers();\n\n    headers.set(\"tt\", \"g\");\n    headers.set(\"t\", getCookie(\"token\") || \"\");\n\n    return headers;\n}\n\nexport function getParams(headers: Headers): RequestInit {\n    return {\n        method: \"GET\",\n        headers: headers,\n    };\n}\n\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\n    headers.set(\"Content-Type\", \"application/json\");\n\n    return {\n        method: \"POST\",\n        headers: headers,\n        body: body,\n    };\n}","import {BASE_URL, getAuthHeaders, getParams, SAVES_PORT} from \"./apiBase\";\n\nexport type GetSavesResponse = {\n    id: number,\n    name: string,\n    user_id: string,\n}[];\n\nexport default function getSaves(onAuthFailed: () => void): Promise<GetSavesResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams, postParams, SAVES_PORT} from \"./apiBase\";\n\nexport type SaveRequest = {\n    name: string,\n    save: string,\n};\n\nexport default function save(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n\n        const body = JSON.stringify(request);\n        const headers = getAuthHeaders();\n        const params = postParams(headers, body);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams, SAVES_PORT} from \"./apiBase\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nexport type GetSaveRequest = {\n    id: number,\n};\n\nexport type GetSaveResponse = {\n    id: number,\n    name: string,\n    save: string,\n    user_id: string,\n};\n\nexport default function getSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n        url.pathname += \"/\" + request.id;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nimport getSaves, {GetSavesResponse} from \"../Api/getSaves\";\nimport {default as apiSave, SaveRequest} from \"../Api/save\";\nimport getSave, {GetSaveRequest} from \"../Api/getSave\";\n\nexport default class CloudSavesManager implements SavesManager {\n    private readonly onAuthFailed;\n\n    constructor(onAuthFailed: () => void) {\n        this.onAuthFailed = onAuthFailed;\n    }\n\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        const request: GetSaveRequest = {\n            id: saveMeta.id\n        };\n\n        let save = null;\n\n        try {\n            const response = await getSave(request, this.onAuthFailed);\n\n            save = {\n                id: response.id,\n                name: response.name,\n                save: JSON.parse(response.save),\n                user_id: response.user_id,\n            };\n        } catch (error) {\n            console.error(error);\n        }\n\n        return save;\n    }\n\n    async getSavesMeta(): Promise<SaveMeta[]> {\n        let saves: GetSavesResponse = [];\n\n        try {\n            saves = await getSaves(this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n\n        return saves;\n    }\n\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        const serialized_save = JSON.stringify({\n            graph: graph,\n            type: type\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        const request: SaveRequest = {\n            name: name,\n            save: serialized_save\n        };\n\n        try {\n            await apiSave(request, this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\nimport {computersInfo} from \"../../utils\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nimport \"./WelcomePopout.css\";\nimport {IconButton} from \"@mui/material\";\n\nexport interface WelcomePopoutProps {\n    open: boolean,\n    onClose: () => void,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n}\n\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\n    {\n        open,\n        onClose,\n        onAuthFailed,\n        changeComputerType\n    }) => {\n    const browserSavesManager = new BrowserSavesManager();\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onCreateTemplateClicked = (type: ComputerType) => {\n        changeComputerType(type, null);\n        onClose();\n    }\n\n    const onCreateEmptyClicked = (type: ComputerType) => {\n        changeComputerType(type, {nodes: [], edges: []});\n        onClose();\n    }\n\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await cloudSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await browserSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const updateCloudSavesMeta = async () => {\n        setLoadingCloudSavesMeta(true);\n\n        const savesMeta = await cloudSavesManager.getSavesMeta();\n        setCloudSavesMeta(savesMeta);\n\n        setLoadingCloudSavesMeta(false);\n    }\n\n    const updateBrowserSavesMeta = async () => {\n        const savesMeta = await browserSavesManager.getSavesMeta();\n        setBrowserSavesMeta(savesMeta);\n    }\n\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\n\n    useEffect(() => {\n        if (open) {\n            updateBrowserSavesMeta();\n            updateCloudSavesMeta();\n        }\n    }, [open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <p>Симулятор автоматов</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <Paper\n                    className=\"welcome-popout__body\"\n                    variant=\"outlined\"\n                >\n                    <List dense>\n                        {\n                            cloudSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в облаке\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            loadingCloudSavesMeta\n                                ?\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n                                </div>\n                                :\n                                cloudSavesMeta.length !== 0 ?\n                                    cloudSavesMeta.map(saveMeta => (\n                                        <ListItem\n                                            key={saveMeta.id}\n                                            secondaryAction={\n                                                <Button\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\n                                                >\n                                                    Открыть\n                                                </Button>\n                                            }\n                                        >\n                                            <ListItemText>\n                                                {saveMeta.name}\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))\n                                    : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в браузере\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                browserSavesMeta.map(saveMeta => (\n                                    <ListItem\n                                        key={saveMeta.id}\n                                        secondaryAction={\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\n                                            >\n                                                Открыть\n                                            </Button>\n                                        }\n                                    >\n                                        <ListItemText>\n                                            {saveMeta.name}\n                                        </ListItemText>\n                                    </ListItem>\n                                ))\n                                : null\n                        }\n\n                        <ListSubheader>\n                            Создать новый вычислитель\n                        </ListSubheader>\n                        {\n                            Object.entries(computersInfo).map(entry => (\n                                <ListItem\n                                    key={entry[1].name}\n                                    secondaryAction={\n                                        <div>\n                                            <Button\n                                                className=\"welcome-popout__create-empty-button\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать пустым\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать\n                                            </Button>\n                                        </div>\n                                    }\n                                >\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Paper>\n\n                <div className=\"welcome-popout__footer\">\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\n                    </IconButton>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default WelcomePopout;\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport \"./SavingPopout.css\";\n\nexport interface SavingPopoutProps {\n    open: boolean,\n    onClose: () => void,\n    isLogin: boolean,\n    onAuthFailed: () => void,\n\n    computerType: ComputerType,\n    graph: graph,\n}\n\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\n    {\n        open,\n        onClose,\n        isLogin,\n        onAuthFailed,\n        graph,\n        computerType\n    }) => {\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\n        value = value || savesOrigin;\n        setSavesOrigin(value);\n    }\n\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\n        setSaveName(saveMeta.name);\n    }\n\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSaveName(value);\n    }\n\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\n        switch (savesOrigin) {\n            case \"cloud\":\n                cloudSavesManager.save(saveName, graph, computerType);\n                break;\n            case \"browser\":\n                browserSavesManager.save(saveName, graph, computerType);\n                break;\n            default:\n                break;\n        }\n\n        updateNames();\n        onClose();\n    }\n\n    const updateNames = async () => {\n        setLoadingSavesMeta(true);\n\n        let savesMeta: SaveMeta[] = [];\n\n        switch (savesOrigin) {\n            case \"cloud\":\n                savesMeta = await cloudSavesManager.getSavesMeta();\n                break;\n            case \"browser\":\n                savesMeta = await browserSavesManager.getSavesMeta();\n                break;\n            default:\n                setSavesMeta([]);\n                break;\n        }\n\n        setSavesMeta(savesMeta);\n        setLoadingSavesMeta(false);\n    }\n\n    const updateDefaultOrigin = () => {\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\n    }\n\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\n    const [saveName, setSaveName] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (open) {\n            updateDefaultOrigin();\n            updateNames();\n        }\n    }, [open]);\n\n    useEffect(() => {\n        updateNames();\n    }, [savesOrigin]);\n\n    useEffect(() => {\n        setSaveName(\"\");\n    }, [savesOrigin, open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                <p>Сохранение</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <div className=\"saving-popout__body\">\n                    <div className=\"saving-popout__body__sidebar\">\n                        <ToggleButtonGroup\n                            orientation=\"vertical\"\n                            exclusive\n                            value={savesOrigin}\n                            onChange={onSavesOriginChanged}\n                        >\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n\n                    <div className=\"saving-popout__body__main\">\n                        <Paper\n                            className=\"saving-popout__body__main__paper\"\n                            variant=\"outlined\"\n                        >\n                            {\n                                loadingSavesMeta\n                                    ?\n                                    <div className=\"saving-popout__body__main__skeleton\">\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n                                    </div>\n                                    :\n                                    <List dense>\n                                        {\n                                            savesMeta.map(saveMeta => (\n                                                <ListItem\n                                                    key={saveMeta.id}\n                                                    disablePadding\n                                                >\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\n                                                        <ListItemText primary={saveMeta.name}/>\n                                                    </ListItemButton>\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                            }\n\n                        </Paper>\n                    </div>\n                </div>\n\n                <TextField\n                    className=\"saving-popout__save-name-input\"\n                    variant=\"standard\"\n                    size=\"small\"\n                    label=\"Имя сохранения\"\n                    value={saveName}\n                    onChange={onSaveNameChanged}\n                />\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onSaveClicked}\n                    >\n                        Сохранить\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        Отмена\n                    </Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default SavingPopout;","import React, {AllHTMLAttributes, FC} from \"react\";\n\nimport {getRandomString} from \"../../../../utils\";\n\nimport \"./GoogleOAuthButton.css\";\n\nexport interface GoogleOAuthButtonProps extends AllHTMLAttributes<HTMLDivElement> {\n}\n\nconst GoogleOAuthButton: FC<GoogleOAuthButtonProps> = ({style, className}) => {\n    const domain = \"https://accounts.google.com/o/oauth2/v2/auth\";\n    const access_type = \"offline\";\n    const client_id = \"196702226545-b0hbpiq78pg29jle3rigem4jcucu8g36.apps.googleusercontent.com\";\n    const callback_url = process.env.REACT_APP_GOOGLE_OAUTH_CALLBACK_URL;\n    const response_type = \"code\";\n    const scope = \"https://www.googleapis.com/auth/userinfo.email\";\n    const state = getRandomString(30);\n\n    document.cookie = `state=${state}; path=/; max-age=3600; secure`;\n\n    const auth_url = `${domain}?access_type=${access_type}&client_id=${client_id}&redirect_uri=${callback_url}&response_type=${response_type}&scope=${scope}&state=${state}`;\n\n    return (\n        <div className={`google_oauth_button ${className}`} style={{...style}}>\n            <form className=\"google_oauth_button__form\" method=\"POST\" action={auth_url}>\n                <button className=\"google_oauth_button__button\" type=\"submit\" value=\"Authorize via Google OAuth\">\n                    <img className=\"google_oauth_button__logo\" src={\"media/images/google_logo_18.png\"} alt=\"Google icon\"\n                         aria-hidden/>\n                    <p className=\"google_oauth_button__text\">\n                        Sign in with Google\n                    </p>\n                </button>\n            </form>\n        </div>\n    )\n};\n\nexport default GoogleOAuthButton;\n","import React, {FC} from \"react\";\nimport \"./LoginPage.css\";\nimport GoogleOAuthButton from \"./GoogleOAuthButton/GoogleOAuthButton\";\n\ninterface LoginPageProps {\n}\n\nconst LoginPage: FC<LoginPageProps> = ({}) => {\n    return (\n        <div className=\"login-page\">\n            <div className=\"login-page__form\">\n                <GoogleOAuthButton/>\n            </div>\n        </div>\n    )\n};\n\nexport default LoginPage;","import React, {FC, useEffect, useState} from \"react\";\nimport \"./PingPage.css\";\nimport pingApi from \"../../../Api/pingApi\";\n\ninterface PingPageProps {\n}\n\nconst PingPage: FC<PingPageProps> = ({}) => {\n    const [pong, setPong] = useState('ping...');\n\n    const ping = async (): Promise<string | null> => {\n        let pong = null;\n\n        try {\n            const response = await pingApi();\n            pong = response.pong;\n        } catch (error) {\n            console.error(error);\n        }\n\n        return pong;\n    }\n\n    useEffect(() => {\n        ping().then(pong => setPong(pong ?? \"Failed to ping\"));\n    });\n\n    return (\n        <div className='ping-page'>\n            {pong}\n        </div>\n    )\n};\n\nexport default PingPage;","import {BASE_URL, PING_PORT, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type PingResponse = {\n    pong: string,\n};\n\nexport default function pingApi(): Promise<PingResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = PING_PORT;\n        url.pathname = \"/ping\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.text();\n            })\n            .then(text => resolve({pong: text}))\n            .catch(error => reject(error));\n    });\n}","import React, {FC} from \"react\";\nimport \"./FailedLoginPage.css\";\n\nimport { Link } from \"react-router-dom\";\n\ninterface FailedLoginPageProps {\n}\n\nconst FailedLoginPage: FC<FailedLoginPageProps> = ({}) => {\n    return (\n        <div className=\"failed-login-page\">\n            <h1>Login failed</h1>\n            <Link to=\"/login\">Login page</Link>\n        </div>\n    )\n};\n\nexport default FailedLoginPage;","import React from \"react\";\n\nimport {useHistory} from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport \"./AppHeader.css\";\n\nexport interface AppHeaderProps {\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\n    onLogoutButtonClicked: () => void,\n    isLogin: boolean,\n}\n\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\n    {\n        onMenuButtonClicked,\n        onSaveButtonClicked,\n        onLogoutButtonClicked,\n        isLogin,\n    }) => {\n    const history = useHistory();\n\n    const onSignInButtonClicked = () => {\n        history.push(\"/login\");\n    }\n\n    const onSignOutButtonClicked = () => {\n        document.cookie = \"token=; path=/; secure; max-age=-99999999\";\n        onLogoutButtonClicked();\n    }\n\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar variant=\"dense\">\n                <div className=\"app__header__left\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onMenuButtonClicked}\n                    >\n                        Меню\n                    </Button>\n\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onSaveButtonClicked}\n                    >\n                        Сохранить\n                    </Button>\n                </div>\n\n                <div className=\"app__header__right\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\n                    >\n                        {isLogin ? \"Выйти\" : \"Войти\"}\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import {AUTH_PORT, BASE_URL} from \"./apiBase\";\n\nexport type ObtainAuthRequest = {\n    state: string,\n};\n\nexport type ObtainAuthResponse = {\n    value: string,\n};\n\nexport default function obtainAuth(request: ObtainAuthRequest): Promise<ObtainAuthResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = AUTH_PORT;\n        url.pathname = \"/auth/obtain\";\n        url.pathname += \"/\" + request.state;\n\n        fetch(url.href)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, {useEffect} from \"react\";\n\nimport {useHistory} from \"react-router-dom\";\n\nimport {getCookie} from \"../../../utils\";\n\nimport obtainAuth from \"../../../Api/obtainAuth\";\n\nimport \"./SuccessLoginPage.css\";\n\nexport interface SuccessLoginPageProps {\n    onAuthSuccess: () => void,\n}\n\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({onAuthSuccess}) => {\n    const updateAuth = async () => {\n        const state = getCookie(\"state\") || \"\";\n\n        let response = null;\n\n        try {\n            response = await obtainAuth({state: state});\n            onAuthSuccess();\n        } catch (error) {\n            console.error(error);\n            return;\n        }\n\n        document.cookie = `token=${response.value}; path=/; secure; max-age=86400`;\n        history.push(\"/\");\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, []);\n\n    const history = useHistory();\n\n    return (\n        <div>\n        </div>\n    )\n};\n\nexport default SuccessLoginPage;","import React, {ReactNode} from 'react';\nimport \"./App.css\"\nimport Graph from \"react-graph-vis\";\nimport {\n    ComputerType,\n    controlNodeDraggingEventArgs, deselectEdgeEventArgs,\n    deselectNodeEventArgs,\n    doubleClickEventArgs, dragEndEventArgs, edge,\n    graph,\n    node, selectEdgeEventArgs,\n    selectNodeEventArgs\n} from \"./react-graph-vis-types\";\nimport {cloneDeep} from \"lodash\";\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\nimport {computersInfo, decorateGraph, getNodeNamePrefix, getTransitionsTitles} from \"./utils\";\nimport RunControl from \"./Components/RunControl/RunControl\";\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\nimport Paper from \"@mui/material/Paper\";\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\nimport {Route, Switch, HashRouter} from \"react-router-dom\";\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\nimport PingPage from \"./Components/Pages/PingPage/PingPage\";\nimport FailedLoginPage from \"./Components/Pages/FailedLoginPage/FailedLoginPage\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport {TransitionParams} from \"./Logic/IGraphTypes\";\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\nimport { Box } from '@mui/material';\n\ninterface appProps {\n}\n\ninterface appState {\n    computerType: null | ComputerType,\n\n    selectedNode: node | null,\n    selectedEdge: edge | null,\n    inEdgeMode: boolean,\n    elements: graph,\n    options: any,\n    initiallyStabilized: boolean,\n    popout: ReactNode | null,\n    savePopoutOpen: boolean,\n    welcomePopoutOpen: boolean,\n    isLogin: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined\n}\n\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\n\nclass App extends React.Component<appProps, appState> {\n\n    memRef = React.createRef<HTMLDivElement>();\n\n\n    constructor(props: appProps) {\n        super(props);\n\n        this.state = {\n            computerType: null,\n\n            selectedNode: null,\n            selectedEdge: null,\n            inEdgeMode: false,\n            elements: {nodes: [], edges: []},\n            options: {\n                edges: {\n                    smooth: {\n                        enabled: true,\n                        type: \"discrete\",\n                        roundness: 0.5\n                    },\n                    length: 200\n                },\n                nodes: {\n                    shape: \"box\",\n                    font: \"18px Roboto black\",\n                    labelHighlightBold: false,\n                    widthConstraint: 40,\n                    heightConstraint: 40\n                },\n                physics: {\n                    enabled: false\n                }\n            },\n            initiallyStabilized: false,\n            popout: null,\n            savePopoutOpen: false,\n            welcomePopoutOpen: false,\n            isLogin: true,\n            mem: undefined,\n            ptr: undefined\n        };\n    }\n\n    componentDidUpdate() {\n    }\n\n\n\n    componentDidMount() {\n        this.updateGraph();\n        this.subscribeToShortcuts();\n        this.openWelcomePopout();\n    }\n\n    network: any;\n    lastNodeId = 0;\n\n    subscribeToShortcuts = () => {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            if (event.key === \"Shift\" && !this.state.inEdgeMode) {\n                this.enterEdgeMode();\n            }\n            if (event.key === \"s\" && event.ctrlKey) {\n                event.preventDefault();\n                this.openSavePopout();\n            }\n        })\n\n        document.addEventListener(\"keyup\", (event: KeyboardEvent) => {\n            if (event.key === \"Shift\" && this.state.inEdgeMode) {\n                this.leaveEdgeMode();\n            }\n        })\n    }\n\n    openSavePopout = () => {\n        this.setState({savePopoutOpen: true});\n    }\n\n    closeSavePopout = () => {\n        this.setState({savePopoutOpen: false});\n    }\n\n    openWelcomePopout = () => {\n        this.setState({welcomePopoutOpen: true});\n    }\n\n    closeWelcomePopout = () => {\n        this.setState({welcomePopoutOpen: false});\n    }\n\n    login = () => {\n        this.setState({isLogin: true});\n    }\n\n    logout = () => {\n        this.setState({isLogin: false});\n    }\n\n    changePopout = (popout: ReactNode | null) => {\n        this.setState({popout: popout});\n    }\n\n    getNodeById = (id: number): node | undefined => {\n        return this.state.elements.nodes.find(node => node.id === id);\n    }\n\n    getEdgeById = (id: string): edge | undefined => {\n        return this.state.elements.edges.find(edge => edge.id === id);\n    }\n\n    updateGraph = (): void => {\n        if (this.network) {\n            this.network.setData(decorateGraph(this.state.elements));\n        }\n    }\n\n    changeNodeLabel = (id: number, label: string): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].id === id) {\n                elements.nodes[i].label = label;\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].id === id) {\n                elements.nodes[i].isAdmit = isAdmit;\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].isInitial) {\n                elements.nodes[i].isInitial = false;\n            }\n\n            if (elements.nodes[i].id === id) {\n                elements.nodes[i].isInitial = isInitial\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].isCurrent) {\n                elements.nodes[i].isCurrent = false;\n            }\n        }\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (ids.includes(elements.nodes[i].id)) {\n                elements.nodes[i].isCurrent = isCurrent\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    changeNodePosition = (id: number, x: number, y: number): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].id === id) {\n                elements.nodes[i].x = x;\n                elements.nodes[i].y = y;\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    createNode = (args: doubleClickEventArgs): void => {\n        const x = args.pointer.canvas.x;\n        const y = args.pointer.canvas.y;\n\n        const elements = cloneDeep(this.state.elements);\n\n        elements.nodes.push({\n            id: ++this.lastNodeId,\n            x: x,\n            y: y,\n            label: getNodeNamePrefix(this.state.elements),\n            isAdmit: false,\n            isInitial: false\n        });\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    selectNode = (args: selectNodeEventArgs): void => {\n        if (args.nodes.length > 0) {\n            this.setState({selectedNode: this.getNodeById(args.nodes[0])!});\n        }\n    }\n\n    deselectNode = (args: deselectNodeEventArgs): void => {\n        if (args.nodes.length === 0) {\n            this.setState({selectedNode: null});\n        }\n    }\n\n    deleteNode = (id: number): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.nodes.length; i++) {\n            if (elements.nodes[i].id === id) {\n                elements.nodes.splice(i, 1);\n                break;\n            }\n        }\n\n        for (let i = 0; i < elements.edges.length; i++) {\n            if (elements.edges[i].from === id ||\n                elements.edges[i].to === id) {\n                elements.edges.splice(i, 1);\n                i--;\n            }\n        }\n\n        this.setState({selectedNode: null});\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    addEdge = (from: number, to: number): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        elements.edges.push({from: from, to: to, label: \"\", transitions: new Set()});\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    enterEdgeMode = (): void => {\n        if (this.network) {\n            this.network.addEdgeMode();\n        }\n        this.setState({inEdgeMode: true});\n    }\n\n    leaveEdgeMode = (): void => {\n        if (this.network) {\n            this.network.disableEditMode();\n        }\n        this.setState({inEdgeMode: false});\n    }\n\n    onEdgeDragEnd = (args: controlNodeDraggingEventArgs): void => {\n        if (args.controlEdge.to !== undefined) {\n            this.addEdge(args.controlEdge.from, args.controlEdge.to);\n            this.leaveEdgeMode();\n        }\n    }\n\n    selectEdge = (args: selectEdgeEventArgs): void => {\n        if (args.edges.length === 1) {\n            this.setState({selectedEdge: this.getEdgeById(args.edges[0])!});\n        }\n    }\n\n    deselectEdge = (args: deselectEdgeEventArgs): void => {\n        if (args.edges.length === 0) {\n            this.setState({selectedEdge: null});\n        }\n    }\n\n    changeEdgeLabel = (id: string, label: string): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.edges.length; i++) {\n            if (elements.edges[i].id === id) {\n                elements.edges[i].label = 'label';\n            }\n        }\n\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\n        const elements: graph = cloneDeep(this.state.elements);\n        for (let i = 0; i < elements.edges.length; i++) {\n            if (elements.edges[i].id === id) {\n                elements.edges[i].transitions = transitions;\n                // elements.edges[i].transitions.forEach(value => console.log(\"vv: \", value))\n                elements.edges[i].label = getTransitionsTitles(transitions);\n            }\n        }\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n    deleteEdge = (id: string): void => {\n        const elements = cloneDeep(this.state.elements);\n\n        for (let i = 0; i < elements.edges.length; i++) {\n            if (elements.edges[i].id === id) {\n                elements.edges.splice(i, 1);\n                break;\n            }\n        }\n\n        this.setState({selectedEdge: null});\n        this.setState({elements: elements}, () => this.updateGraph());\n    }\n\n\n    onDragEnd = (args: dragEndEventArgs): void => {\n        if (args.nodes.length === 1) {\n            const node = args.nodes[0];\n            const {x, y} = args.pointer.canvas;\n\n            this.changeNodePosition(node, x, y);\n        }\n    }\n\n    updMem = (mem: string[], ptr: number): void => {\n        this.setState({ mem: mem, ptr: ptr });\n    }\n\n    memPos = (index: number | undefined): void => {\n        // if (index !== undefined && index > 5) {\n            this.memRef?.current?.scrollIntoView({behavior: 'smooth'})\n        // }\n    }\n\n    events = {\n        doubleClick: this.createNode,\n        selectNode: this.selectNode,\n        selectEdge: this.selectEdge,\n        deselectNode: this.deselectNode,\n        deselectEdge: this.deselectEdge,\n        controlNodeDragEnd: this.onEdgeDragEnd,\n        dragEnd: this.onDragEnd\n    };\n\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/login\">\n                        <LoginPage/>\n                    </Route>\n                    <Route path=\"/ping\">\n                        <PingPage/>\n                    </Route>\n                    <Route path=\"/failed-login\">\n                        <FailedLoginPage/>\n                    </Route>\n                    <Route path=\"/success-login\">\n                        <SuccessLoginPage onAuthSuccess={this.login}/>\n                    </Route>\n                    <Route path=\"/\">\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\n                            <div className=\"app\">\n                                <WelcomePopout\n                                    open={this.state.welcomePopoutOpen}\n                                    onClose={this.closeWelcomePopout}\n                                    onAuthFailed={this.logout}\n                                    changeComputerType={(computerType, graph: graph | null) => {\n\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n\n                                        console.log(defaultGraph);\n                                        console.log(defaultGraph[\"nodes\"]);\n\n                                        this.lastNodeId = defaultGraph.nodes.length;\n                                        this.setState({\n                                            computerType: computerType,\n                                            elements: defaultGraph\n                                        }, () => this.updateGraph());\n                                    }}\n                                />\n\n                                {this.state.popout}\n\n                                <SavingPopout open={this.state.savePopoutOpen}\n                                              onClose={this.closeSavePopout}\n                                              isLogin={this.state.isLogin}\n                                              onAuthFailed={this.logout}\n                                              graph={this.state.elements}\n                                              computerType={this.state.computerType!}/>\n\n                                <div className=\"hint-container\">\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Ctrl+S — сохранить автомат\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Удерживайте Shift чтобы создать ребро\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Двойное нажатие чтобы создать вершину\n                                    </Paper>\n                                </div>\n\n\n                                {\n                                        this.state.computerType === \"tm\" ?\n                                            <div className=\"app__mem_ribbon\">\n                                                    {\n                                                        this.state.mem?.map((value, index) =>\n                                                            <div\n                                                                className=\"app__mem_cell\"\n                                                                style={{border: `${index === this.state.ptr ? \"#0041d0\" : \"#000000\" } 2px solid`}}\n                                                            >\n\n                                                                {Math.abs (Math.abs(index) - Math.abs(this.state.ptr!)) <= 5  ? <div ref={this.memRef}/> : <div/>}\n                                                                {value}\n                                                                {this.memRef?.current?.scrollIntoView({behavior: 'smooth'})                                                                }\n                                                            </div>\n                                                        )\n                                                    }\n                                            </div>\n                                        : <div/>\n                                    }\n\n\n                                <AppHeader\n                                    onMenuButtonClicked={this.openWelcomePopout}\n                                    onSaveButtonClicked={this.openSavePopout}\n                                    onLogoutButtonClicked={this.logout}\n                                    isLogin={this.state.isLogin}\n                                />\n\n                                <div className=\"field__container\">\n                                    <Graph\n                                        getNetwork={(network: any) => this.network = network}\n                                        graph={{nodes: [], edges: []}}\n                                        options={this.state.options}\n                                        events={this.events}\n                                    />\n                                </div>\n\n                                <div className=\"app__right-menu\">\n                                    <NodeControl\n                                        node={this.state.selectedNode}\n                                        changeNodeLabel={this.changeNodeLabel}\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\n                                        changeStateIsInitial={this.changeStateIsInitial}\n                                        deleteNode={this.deleteNode}\n                                    />\n                                    <EdgeControl\n                                        edge={this.state.selectedEdge}\n                                        changeEdgeTransitions={this.changeEdgeTransition}\n                                        deleteEdge={this.deleteEdge}\n                                    />\n                                    <RunControl\n                                        updMem = {this.updMem}\n                                        elements={this.state.elements}\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\n                                    />\n                                </div>\n\n                            </div>\n                        </ComputerTypeContext.Provider>\n                    </Route>\n                </Switch>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar lodash_1 = require(\"lodash\");\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\nvar EpsilonNFA = /** @class */ (function (_super) {\n    __extends(EpsilonNFA, _super);\n    function EpsilonNFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.step = function () {\n            var _a;\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        _this.run = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n            }\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun);\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        return _this;\n    }\n    return EpsilonNFA;\n}(PDA_1.PDA));\nexports.EpsilonNFA = EpsilonNFA;\n//\n// let nfa = new EpsilonNFA(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             {id: 5, isAdmit: false},\n//             {id: 6, isAdmit: false},\n//             {id: 7, isAdmit: false},\n//             {id: 8, isAdmit: false},\n//             {id: 9, isAdmit: false},\n//             {id: 10, isAdmit: false},\n//             {id: 11, isAdmit: false},\n//             {id: 12, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\n//\n//\n//\n//\n//\n//\n//             //\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\n//             //\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\n//         ]\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n"],"sourceRoot":""}