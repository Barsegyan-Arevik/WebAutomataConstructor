{"version":3,"sources":["Logic/Mealy.js","Logic/Moore.js","Logic/OutputAutomata.js","Logic/DFA.js","Logic/NFA.js","Logic/TM.js","Logic/DPDA.js","Logic/DMealy.js","Logic/DMoore.js","Logic/Computer.js","Logic/Stack.js","react-graph-vis-types.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Components/RunControl/History.tsx","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/apiGetSaves.ts","Api/apiGetSave.ts","Api/apiSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Api/apiSignIn.ts","Components/Pages/LoginPage/LoginPage.tsx","Api/apiSignUp.ts","Components/Pages/RegisterPage/RegisterPage.tsx","Components/AppHeader/AppHeader.tsx","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","Components/Pages/RegisteredPage/RegisteredPage.tsx","VisNetwork.tsx","ErrorModal.tsx","TreeHistory.tsx","App.tsx","index.tsx","Logic/IGraphTypes.js","Logic/Exceptions.js","Logic/PDA.js","Logic/EpsilonNFA.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","exports","__esModule","Mealy","_super","graph","startStatements","input","_this","call","mealyToMoore","outs","Map","edges","forEach","edge","transitions","_","transition","out","output","has","set","size","_nodesOuts","counter","nodes","reduce","acc","node","filter","to","id","tmp","push","undefined","outIndex","get","isAdmit","v","length","nodesOuts","_edges","vs","index","from","console","log","Set","title","sort","a","i","delta","j","starts","map","stmt","graphcore","start","curNodeOuts","step","oaStep","run","oaRun","require","OutputAutomata","Moore","restart","counterSteps","historiStep","curPosition","value","statements","mooreToMealy","mapNodes","mealyEdges","tmpTransitions","tmpTransiton","_a","add","statement","__assign","assign","t","s","n","arguments","apply","Computer_1","haveEpsilon","alphabet","EPS","histTrace","historiRun","counterStepsForResult","ref","after","_step","history","haveAdmitting","toNodes","nextStepPosition","position","by","cellMatrix","idLogic","ret","k","getLetter","cur","nextStepPositions","positions","nextPOs","nextPs","pos","po","nextOs","Error","outputs","byLetter","trNum","nextPositions","nodesOfCurPos","setInput","key","matrix","value1","isDeterministic","line","cells","fstCell","hasDublicates","stackDown","retNodes","temp","stack","getStorage","Computer","EpsilonNFA_1","Exceptions_1","DFA","startStatement","NonDeterministic","enfaStep","enfaRun","EpsilonNFA","NFA","IGraphTypes_1","PDA_1","TMMemory","storage","pointer","getPointer","reset","lookUp","initialize","init","mvRight","curr","upd","mvLeft","tmp_1","TM","mem","__step","tr","histori","mv","move","Move","R","stackPush","L","assignCurMt","memory","mtTrun","mtStep","checkMemFormat","isMtMem","value2","_b","curMt","newPos","stPush0","stPush1","PDA","nfa","DPDA","byEmpty","pdaStep","pdaRun","DMealy","DMoore","eof","BOTTOM","byEmptyStackAdmt","isAdmt","nfaToDfa","minimizeDfa","getCurrNode","currentNode","getStartStatements","localValue","_loop_1","this_1","getAlphabetFromEdges","getStatementsFromNodes","createMatrix","alphabetSet","i_1","statementFrom","statementTo","letterId","stDwn","stPsh","Stack","capacity","Infinity","item","pop","peek","list","cpyTo","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","_excluded","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","reinitComputer","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","epsSubstStr","epsText","epsSubstStrs","values","join","mvStr","transitionsToLabel","frmt","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","epsSubst","epsSubsts","str","getTransitionsTitles","decorateGraph","elements","update","lableTokens","split","x","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","graphToElements","DataSet","elementsToGraph","computersInfo","dfa","name","description","preview","defaultGraph","y","nfa-eps","pda","dpda","tm","mealy","dmealy","moore","dmoore","getCookie","_parts$pop","parts","document","cookie","shift","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","activeTransition","changeTransitions","_ref","asyncToGenerator","regenerator_default","mark","_callee","accumulator","wrap","_context","prev","next","transitionsText","fth","fst","trd","bebra","reverse","snd","_value$trd","changeEdgeTransitions","stop","_x","deleteEdge","_callee2","_context2","changeEditMode","editMode","updateTransitions","_callee3","_context3","_value$trd2","deleteTransition","delete","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","helperText","onBlur","Edit_default","History","startNode","Tooltip","historyEndRef","creatButtons","buttons","buttonsComp","button","RunControl","computerShouldBeUpdated","current","some","isEqual","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","gElements","resetHistTree","computer","result","paddingTreeId","getLastHistNodeId","idd","gNode","find","gEl","createHistNode","lastHistUnits","onInputChanged","_this$state$computer","drawTreeLayot","pred","letter","l","txt","stackDwn","bySymbRules","_v$from","_v$from2","_p$stack","_v$from$stack","toString","rule","createHistEdge","treeEps","byEpsPred","byEpsAfter","tmp1","tree","stepResult","_nodes","error","abrupt","setResettedStatus","wasRuned","currentInputIndex","changeStateIsCurrent","updMem","nodeCore","setHistory","History_History","t0","setIsNonDetermenistic","_this$state$computer2","_this$state$computer3","_callee4","_context4","_ref4","histStep","it","updateElements","setComputerType","admitByStack","curStbyEmp","setByEmptyStack","miniDFA","NonMinimizable","setIsNonMinimizable","includes","defaultButtonsLine","buttonsNfa","treeContextInfo","treeVisible","buttonsDfa","buttonsMealy","buttonsMoore","buttonsTree","buttonsByStackByState","changerStack","buttonsNoRun","getButtons","_this2","setInit","haveEmpty","setNfaToDfa","setMinimizeDfa","setMooreToMealy","setMealyToMoore","setChangerByStack","setRun","setStep","setReset","snapshot","_this3","char","Done_default","Close_default","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","save_index","findIndex","saves_json","JSON","stringify","setItem","parse","getItem","BASE_URL","process","getAuthHeaders","headers","Headers","getParams","method","ApiGetSaves","onAuthFailed","reject","url","params","fetch","then","response","status","ok","statusText","json","catch","ApiGetSave","request","ApiSave","body","postParams","CloudSavesManager","sent","data","serialized_save","WelcomePopout","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","getSave","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","href","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","ApiSignIn","redirect","text","LoginPage","objectDestructuringEmpty","navigate","useNavigate","email","setEmail","password","setPassword","setError","onLoginClicked","jwt","onSignInWithExternalProviderClicked","provider","window","location","Container","spacing","justifyContent","minHeight","align","sx","paddingBottom","Alert","severity","ApiSignUp","RegisterPage","about","setAbout","onRegisterClicked","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","AppBar","Toolbar","SuccessLoginPage","searchParams","updateAuth","_useSearchParams","useSearchParams","RegisteredPage","VisNetwork","useRef","domNode","smooth","enabled","roundness","width","arrows","scaleFactor","manipulation","addEdge","callback","setKeyPressed","network","disableEditMode","layout","improvedLayout","shapeProperties","interpolation","shape","font","labelHighlightBold","physics","options","_React$useState","_React$useState2","contextMenu","setContextMenu","handleContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","handleClose","keyPressed","handleUserKeyPress","useCallback","keyCode","addEdgeMode","handleUserKeyUnPress","content","end","addEventListener","removeEventListener","createRef","useLayoutEffect","Network","on","onDoubleClick","onClick1","onClick2","onClick3","onClick4","unselectAll","refContainer","onContextMenu","Menu","anchorReference","anchorPosition","top","left","transform","bgcolor","boxShadow","NonDetermenisticModal","setOpen","isNonDetermenistic","react","Modal","aria-labelledby","aria-describedby","Box","component","mt","NonMinimizableModal","_React$useState3","_React$useState4","isNonMinimizable","TreeHistory","interaction","keyboard","dragNodes","hierarchical","treeSpacing","direction","parentCentralization","sortMethod","shakeTowards","createContext","computerAction","controlAction","changerByStack","Ribbon","_props$mem","wasComputerResetted","_props$memRef","_props$memRef$current","ptr","abs","memRef","scrollIntoView","behavior","App","networkTST","errIsNonDetermenistic","errIsNonMinimizable","lastNodeId","subscribeToShortcuts","ctrlKey","openSavePopout","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","login","logout","changePopout","popout","updateGraph","ids","createNode","canvas","lastHistNodeId","treeElems","remove","selectNode","nodesIDs","selectedNodes","selectedNode","deselectNode","rmEdges","selectEdge","edgesIDs","selectedEdges","selectedEdge","deselectEdge","changeEdgeTransition","NFAContextMenu","showTree","DFAContextMenu","MealyContextMenu","MooreContextMenu","PDAContextMenu","AnotherContextMenu","ContextMenu","inEdgeMode","widthConstraint","heightConstraint","initiallyStabilized","react_router_dom","react_router","path","element","Pages_LoginPage_LoginPage","Pages_RegisterPage_RegisterPage","Pages_RegisteredPage_RegisteredPage","Pages_SuccessLoginPage_SuccessLoginPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","ErrorModal_NonDetermenisticModal","ErrorModal_NonMinimizableModal","App_Ribbon","Components_AppHeader_AppHeader","VisNetwork_VisNetwork","TreeHistory_TreeHistory","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","f","jsx","_this2$historyEndRef","_this2$historyEndRef$","ReactDOM","render","StrictMode","src_App_0","getElementById","Stack_1","lodash_1","epsId","admitByEmptyStack","treeHist","histUnit","last","unitHsit","newPosSet","updCurPos","epsStep","pPos","epsilonStep","rmRepeations","htable","letterStep","_nextStepPositions","ps","table","ImSet","startPos","head","afterEps","EPStack","flatted","_to","getIter","startId","_getJump","zero","first","second","number","byEveryLetter","accLine","groups","group","cutBy","cell","createTableT","getJump","updateGroups","jmpGrp","newGrp","newNumber","toRm","splice","_updateGroups","toPositions","g","cycleEps","copyPushList","cpy","pushReverse","pushVals","pushTopToNewStack0","newStack","permute0","permutation","r","cloneDeep","_tmp","dwn","_detour","lvl","permute","slice","c","fill","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","idx","newCycleStack","matchPushEpsVal","matchDownEpsVal","hist","endsOfEpsWay","dfs","oldStack","transformedInput","Queue","enqueue","dequeue","normalize","_v","getItter","myForEach","getNth","iter","aa"],"mappings":"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","file":"static/js/main.92c71e81.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Mealy = /** @class */ (function (_super) {\n    __extends(Mealy, _super);\n    function Mealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.mealyToMoore = function () {\n            var outs = new Map();\n            _this.edges.forEach(function (edge) {\n                edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    var out = transition.output;\n                    if (!outs.has(out)) {\n                        outs.set(out, outs.size);\n                    }\n                }); });\n            });\n            var nodesOuts = function () {\n                var counter = 0;\n                return _this.nodes.reduce(function (acc, node) {\n                    var edges = _this.edges.filter(function (edge) { return edge.to === node.id; });\n                    var tmp = [];\n                    outs.forEach(function () { return tmp.push(undefined); });\n                    edges.forEach(function (edge) {\n                        edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                            var out = transition.output;\n                            var outIndex = outs.get(out);\n                            if (!tmp[outIndex]) {\n                                tmp[outIndex] = {\n                                    id: counter,\n                                    isAdmit: node.isAdmit,\n                                    output: out\n                                };\n                                counter++;\n                            }\n                        }); });\n                    });\n                    if (tmp.filter(function (v) { return v !== undefined; }).length === 0) {\n                        tmp[0] = {\n                            id: counter,\n                            isAdmit: node.isAdmit,\n                            output: \"~\"\n                        };\n                        counter++;\n                    }\n                    acc.push(tmp);\n                    return acc;\n                }, []);\n            };\n            var _nodesOuts = nodesOuts();\n            var _edges = _nodesOuts.reduce(function (acc, vs, index) {\n                var edges = _this.edges.filter(function (edge) { return edge.from === _this.nodes[index].id; });\n                edges.forEach(function (edge) { return edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    vs.forEach(function (v) {\n                        console.log(v);\n                        if (v !== undefined) {\n                            acc.push({\n                                from: v.id,\n                                to: _nodesOuts[edge.to][outs.get(transition.output)].id,\n                                transitions: new Set([[{ title: transition.title }]])\n                            });\n                        }\n                    });\n                }); }); });\n                return acc;\n            }, []);\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                for (var j = i; j < _edges.length; j++) {\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\n                        delta++;\n                    }\n                }\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n                i += delta - 1;\n            }\n            var starts = _this.startStatements.map(function (stmt) { return stmt.id; });\n            var nodes = _nodesOuts.reduce(function (acc, vs, index) {\n                vs.forEach(function (v) {\n                    if (v) {\n                        acc.push(v);\n                    }\n                });\n                return acc;\n            }, []);\n            var start = starts.reduce(function (acc, id) {\n                var curNodeOuts = _nodesOuts[id].filter(function (v) {\n                    if (v !== undefined) {\n                        return v;\n                    }\n                });\n                acc.push(curNodeOuts[0]);\n                return acc;\n            }, []);\n            return {\n                graphcore: { edges: edges, nodes: nodes },\n                start: start\n            };\n        };\n        _this.step = _this.oaStep;\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Mealy;\n}(OutputAutomata_1.OutputAutomata));\nexports.Mealy = Mealy;\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.isDeterministic())\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//             { id: 4, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 2, to: 4, transitions: new Set([[{ title: 'a', output: '1' }, { title: 'b', output: '1' }]]) },\n//             // { from: 2, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 4, to:3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n//         ]\n//     }, [{ id: 1, isAdmit: false }], [])\n// console.log(nfa.mealyToMoore().graphcore.edges)\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.mealyToMoore()\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Moore = /** @class */ (function (_super) {\n    __extends(Moore, _super);\n    function Moore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.mooreToMealy = function () {\n            var mapNodes = new Map();\n            _this.nodes.forEach(function (node) { return mapNodes.set(node.id, { id: node.id, isAdmit: node.isAdmit, output: node.output }); });\n            var mealyEdges = _this.edges.map(function (edge) {\n                var tmpTransitions = new Set();\n                var tmpTransiton = [];\n                edge.transitions.forEach(function (v) { return v.forEach(function (transition) {\n                    var _a;\n                    tmpTransiton.push({ title: transition.title, output: (_a = mapNodes.get(edge.to)) === null || _a === void 0 ? void 0 : _a.output });\n                }); });\n                tmpTransitions.add(tmpTransiton);\n                return { from: edge.from, to: edge.to, transitions: tmpTransitions };\n            });\n            console.log('>>>>', _this.startStatements);\n            return {\n                graphcore: { edges: mealyEdges, nodes: _this.nodes.map(function (node) { return ({ id: node.id, isAdmit: node.isAdmit }); }) },\n                start: _this.startStatements.map(function (statement) { return ({ id: statement.id, isAdmit: statement.isAdmit }); })\n            };\n        };\n        _this.step = _this.oaStep;\n        // (): Step => {\n        //     if (!super.isDeterministic()) {\n        //         throw new NonDeterministic()\n        //     }\n        //     return this.oaRun()\n        // }\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Moore;\n}(OutputAutomata_1.OutputAutomata));\nexports.Moore = Moore;\n// let nfa = new Moore(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: 'b' },\n//             { id: 1, isAdmit: false, output: 'b' },\n//             // { id: 2, isAdmit: false, output: 'a' },\n//             // { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             // { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             { from: 0, to: 0, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n//             // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"0\"])\n// // console.log(nfa.run())\n// // console.log(nfa.mooreToMealy().start)\n// // edges.forEach(v => console.log(v.from, v.to, v.transitions))\n// console.log(nfa.run())\n// // const conv = nfa.moorToMealy()\n// // conv.graphcore.edges.forEach(edge => {\n// //     console.log(edge.from)\n// //     console.log(edge.to)\n// //     console.log(edge.transitions)\n// // })\n// // conv.graphcore.nodes.forEach(node => {\n// //     console.log(node)\n// // })\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar OutputAutomata = /** @class */ (function (_super) {\n    __extends(OutputAutomata, _super);\n    function OutputAutomata(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.haveEpsilon = function () { return _this.alphabet.get(Computer_1.EPS) !== undefined; };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.oaRun = function () {\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var output;\n            for (var i = 0; i < _this.input.length; i++) {\n                var ref = {\n                    counterSteps: _this.counterStepsForResult,\n                    curPosition: _this.curPosition,\n                    historiStep: _this.historiRun\n                };\n                var after = _this._step(ref, histTrace);\n                _this.counterStepsForResult = ref.counterSteps;\n                console.log(_this.counterStepsForResult);\n                _this.curPosition = ref.curPosition;\n                _this.historiRun = ref.historiStep;\n                output = after.output;\n            }\n            return {\n                counter: _this.counterStepsForResult,\n                history: _this.historiRun,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                nodes: _this.toNodes(_this.curPosition),\n                output: output,\n                histTrace: histTrace\n            };\n        };\n        _this.nextStepPosition = function (position, by) {\n            return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) {\n                var getLetter = function (id) {\n                    var ret;\n                    _this.alphabet.forEach(function (v, k) {\n                        if (id === v) {\n                            ret = k;\n                        }\n                    });\n                    return ret;\n                };\n                var ret = {\n                    stmt: v,\n                    by: getLetter(by),\n                    cur: _this.nodes[v.idLogic],\n                    from: _this.nodes[position.stmt.idLogic]\n                };\n                // return ({ position: { stmt: v }, output: v.output })\n                return ({ position: ret, output: v.output });\n            });\n        };\n        _this.nextStepPositions = function (positions, by) {\n            var nextPOs = positions.map(function (v) { return _this.nextStepPosition(v, by); });\n            var nextPs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) { return acc.push(po.position); });\n                return acc;\n            }, []);\n            var nextOs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) {\n                    if (po.output === undefined) {\n                        throw new Error(\"Output undefinded\");\n                    }\n                    acc.push(po.output);\n                });\n                return acc;\n            }, []);\n            nextPs.forEach(function (v, index) { return v.output = nextOs[index]; });\n            return { positions: nextPs, outputs: nextOs };\n        };\n        _this._step = function (ref, histTrace) {\n            var _a;\n            var byLetter = [];\n            var trNum = _this.alphabet.get((_a = _this.input[ref.counterSteps]) === null || _a === void 0 ? void 0 : _a.value);\n            var nextPositions = _this.nextStepPositions(ref.curPosition, trNum);\n            ref.curPosition = nextPositions.positions;\n            var nodesOfCurPos = _this.toNodes(ref.curPosition);\n            nodesOfCurPos.forEach(function (node) { return byLetter.push(node); });\n            ref.historiStep.push({ nodes: nodesOfCurPos, by: trNum });\n            if (ref.curPosition.length > 0) {\n                ref.counterSteps++;\n            }\n            console.log('--->byLetter');\n            console.log(byLetter);\n            console.log('--->byLetter');\n            histTrace.push({ byLetter: byLetter });\n            return {\n                counter: ref.counterSteps,\n                history: ref.historiStep,\n                isAdmit: _this.haveAdmitting(ref.curPosition),\n                nodes: nodesOfCurPos,\n                output: nextPositions.outputs,\n                byLetter: byLetter,\n                histTrace: histTrace\n            };\n        };\n        _this.oaStep = function () {\n            var ref = {\n                counterSteps: _this.counterSteps,\n                curPosition: _this.curPosition,\n                historiStep: _this.historiStep\n            };\n            var after = _this._step(ref, []);\n            _this.counterSteps = ref.counterSteps;\n            _this.curPosition = ref.curPosition;\n            _this.historiStep = ref.historiStep;\n            return {\n                counter: after.counter,\n                history: after.history,\n                isAdmit: after.isAdmit,\n                nodes: after.nodes,\n                output: after.output,\n                byLetter: after.byLetter\n            };\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.curPosition = [];\n        startStatements.forEach(function (value) {\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id)\n            });\n        });\n        _this.setInput(input);\n        _this.counterSteps = 0;\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(_this.curPosition);\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        return _this;\n    }\n    OutputAutomata.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    OutputAutomata.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { from: value.from, cur: value.cur, by: value.by, output: value.output, stack: value.stack === undefined ? undefined : value.stack.getStorage() });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    OutputAutomata.prototype.haveAdmitting = function (positions) {\n        return positions.reduce(function (acc, p) { return acc && p.stmt.isAdmit; }, true);\n    };\n    return OutputAutomata;\n}(Computer_1.Computer));\nexports.OutputAutomata = OutputAutomata;\n// let nfa = new Moor(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: '0' },\n//             { id: 1, isAdmit: false, output: '1' },\n//             { id: 2, isAdmit: false, output: '2' },\n//             { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 2, to: 3, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: '5' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"5\"])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DFA = /** @class */ (function (_super) {\n    __extends(DFA, _super);\n    function DFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaRun();\n        };\n        _this.setInput(input);\n        return _this;\n    }\n    return DFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.DFA = DFA;\nvar nfa = new DFA({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: true },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n        { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], []);\n// nfa.\n// let nfa = new DFA (\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: true},\n//\n//\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: true},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//             // {id: 0, isAdmit: false},\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//\n//         ],\n//         edges: [\n//\n//             {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //youtube\n//             // {from: 1, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 4, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 2, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//\n//\n//             // {from: 0, to: 1, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 0, to: 3, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: '0'}, {title: '1'}] ])},\n//             // {from: 3, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 3, to: 4, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //refference\n//             // {from: 0, to: 1, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 0, to: 2, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 1, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 3, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 6, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//\n//         ]\n//     }, [{id: 1, isAdmit: false}], [],\n// )\n// console.log(nfa.minimizeDfa().start)\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar NFA = /** @class */ (function (_super) {\n    __extends(NFA, _super);\n    function NFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        if (_this.haveEpsilon()) {\n            throw new Error('Epsilon Transitions');\n        }\n        return _this;\n    }\n    return NFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.NFA = NFA;\n//\n// let nfa = new NFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 0, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: '1'}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}], [],\n// )\n// nfa.nfaToDfa()\n// nfa.nfaToDfa().nodes.forEach((v) => console.log(v.id))\n// nfa.nfaToDfa().edges.forEach((v) => console.log(v.from, v.to))\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\nvar PDA_1 = require(\"./PDA\");\nvar Computer_1 = require(\"./Computer\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar TMMemory = /** @class */ (function () {\n    function TMMemory() {\n        this.storage = ['_'];\n        this.pointer = 0;\n    }\n    TMMemory.prototype.getPointer = function () {\n        return this.pointer;\n    };\n    TMMemory.prototype.reset = function () {\n        this.storage = ['_'];\n        this.pointer = 0;\n    };\n    TMMemory.prototype.lookUp = function () {\n        return this.storage[this.pointer];\n    };\n    TMMemory.prototype.initialize = function (init) {\n        var _this = this;\n        init.forEach(function (value) { return _this.mvRight('_', value); });\n        this.pointer = 0;\n    };\n    TMMemory.prototype.mvRight = function (curr, upd) {\n        if (this.storage[this.pointer] === curr) {\n            this.storage[this.pointer] = upd;\n            this.pointer++;\n        }\n        if (this.pointer === this.storage.length) {\n            this.storage.push('_');\n        }\n    };\n    TMMemory.prototype.mvLeft = function (curr, upd) {\n        if (this.pointer === 0) {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer = 0;\n            }\n            var tmp_1 = ['_'];\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\n            this.storage = tmp_1;\n        }\n        else {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer--;\n            }\n        }\n    };\n    TMMemory.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return TMMemory;\n}());\nexports.TMMemory = TMMemory;\nvar TM = /** @class */ (function (_super) {\n    __extends(TM, _super);\n    function TM(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.mem = new TMMemory();\n        _this.__step = function (counter, tr, histori) {\n            var byLetter = [];\n            var from = _this.curPosition[0].stmt;\n            var mv;\n            var by = \"\";\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\n                if (value.stackDown === _this.mem.lookUp()) {\n                    if (value.move === IGraphTypes_1.Move.R) {\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    if (value.move === IGraphTypes_1.Move.L) {\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\n                }\n            });\n            histori.push({\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                by: by\n                // this.input[counter].value\n            });\n            counter++;\n            byLetter.push({\n                id: _this.curPosition[0].stmt.id,\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                by: by,\n                from: from,\n                cur: _this.curPosition[0].stmt,\n                move: mv\n            });\n            return {\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                counter: counter,\n                history: histori,\n                memory: _this.mem.getStorage(),\n                pointer: _this.mem.getPointer(),\n                byLetter: byLetter\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.mem.reset();\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n        };\n        _this.mtTrun = function () {\n            throw Error(\"TM run\");\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            // this.restart()\n            _this.mem.reset();\n            _this.mem.initialize(input);\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n            console.log(_this.curPosition);\n        };\n        _this.mtStep = function () {\n            console.log(\"STPMT\");\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            if (ret.history[ret.history.length - 1].by === \"\") {\n                ret.nodes = [];\n            }\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\n        };\n        _this.step = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtStep();\n        };\n        _this.run = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtTrun();\n        };\n        _this.checkMemFormat(graph);\n        // if (!this.isDeterministic()) {\n        //     throw Error (\"Not deterministic\")\n        // }\n        _this.mem.initialize(input);\n        _this.curPosition = [{\n                stmt: _this.statements.get(_this.startStatements[0].id)\n            }];\n        console.log(\"MTMTMTMTMTTMMTMTMT::::::::::\");\n        return _this;\n    }\n    TM.prototype.checkMemFormat = function (graph) {\n        var isMtMem = true;\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\n            value1.forEach(function (value2) {\n                var _a, _b;\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n                    isMtMem = false;\n                }\n            });\n        }); });\n        if (!isMtMem) {\n            throw Error(\"Not MT mem\");\n        }\n    };\n    TM.prototype.curMt = function () {\n        return this.curPosition[0];\n    };\n    TM.prototype.assignCurMt = function (newPos) {\n        this.curPosition[0] = newPos;\n    };\n    TM.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var isEquals = function (stPush0, stPush1) {\n                if (!stPush0 || !stPush1) {\n                    return false;\n                }\n                if (stPush0.length !== stPush1.length) {\n                    return false;\n                }\n                return stPush0.reduce(function (acc, v, index) { return acc && stPush0[index] === stPush1[index]; }, true);\n            };\n            var hasDublicates = cells.reduce(function (acc, stmt, index) {\n                return index !== 0 &&\n                    (acc || (stmt.stackDown === fstCell.stackDown && isEquals(stmt.stackPush, fstCell.stackPush)));\n            }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    return TM;\n}(PDA_1.PDA));\nexports.TM = TM;\nvar nfa = new TM({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: Computer_1.EPS, stackDown: '0', stackPush: ['0'], move: IGraphTypes_1.Move.R }, { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'], move: IGraphTypes_1.Move.R }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], ['1']);\nconsole.log(nfa.isDeterministic());\n// let nfa = new TM(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n//             { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n//             { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n//             { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n//             { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n//\n//             // { from: 1, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['V'], move: Move.R} ]]) },\n//             // { from: 2, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['B'], move: Move.R} ]]) },\n//             // { from: 2, to: 1, transitions: new Set([[ { title: 'b', stackDown: 'b', stackPush: ['6'], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: 'с', stackPush: ['['], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: '_', stackPush: [']'], move: Move.R } ]]) },\n//\n//             // {from: 1, to: 1, transitions: new Set([{title: 'a', stackDown: 'a', stackPush: ['A'], move: Move.R}])},\n//             // {from: 1, to: 2, transitions: new Set([{title: 'c', stackDown: 'b', stackPush: ['V'], move: Move.R}])},\n//             // {from: 2, to: 2, transitions: new Set([{title: 'c', stackDown: '_', stackPush: ['V'], move: Move.R}])},\n//\n//\n//\n//         ]\n//     },  [{id: 1, isAdmit: false}], ['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.setInput(['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DPDA = /** @class */ (function (_super) {\n    __extends(DPDA, _super);\n    function DPDA(graph, startStatement, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatement, input, byEmpty) || this;\n        // step = this.pdaStep\n        // run = this.pdaRun\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaRun();\n        };\n        _this.setInput(input);\n        return _this;\n        // if (!super.isDeterministic()) {\n        //     throw new Error(\"Is not determenistic\")\n        // }\n    }\n    return DPDA;\n}(PDA_1.PDA));\nexports.DPDA = DPDA;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Mealy_1 = require(\"./Mealy\");\nvar DMealy = /** @class */ (function (_super) {\n    __extends(DMealy, _super);\n    function DMealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMealy;\n}(Mealy_1.Mealy));\nexports.DMealy = DMealy;\nvar nfa = new DMealy({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Moore_1 = require(\"./Moore\");\nvar DMoore = /** @class */ (function (_super) {\n    __extends(DMoore, _super);\n    function DMoore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMoore;\n}(Moore_1.Moore));\nexports.DMoore = DMoore;\nvar nfa = new DMoore({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\nexports.EPS = 'Epsilon';\nexports.BOTTOM = \"Z0\";\nvar Computer = /** @class */ (function () {\n    function Computer(graph, startStatements) {\n        // this.setStartStatements(graph, startStatements)\n        var _this = this;\n        this.input = [];\n        this.alphabet = new Map();\n        this.statements = new Map();\n        this.startStatements = [];\n        this.edges = [];\n        this.counterSteps = 0;\n        this.counterStepsForResult = 0;\n        this.historiStep = [];\n        this.historiRun = [];\n        this.matrix = [];\n        this.byEmptyStackAdmt = function (isAdmt) {\n            throw new Error(\"PDA attribute\");\n        };\n        this.nfaToDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.minimizeDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.mooreToMealy = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.mealyToMoore = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.getCurrNode = function () {\n            return _this.currentNode.id;\n        };\n        this.getStartStatements = function () {\n            return _this.startStatements;\n        };\n        graph.edges\n            .sort(function (a, b) { return a.from - b.from; })\n            .forEach(function (value) { return _this.edges.push({\n            transitions: value.transitions === undefined ? new Set([[{ title: \"\" }]]) : value.transitions,\n            from: value.from,\n            to: value.to,\n            localValue: []\n        }); });\n        var _loop_1 = function (i) {\n            this_1.edges[i].localValue = [];\n            this_1.edges[i].transitions.forEach(function (value) {\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\n            }\n            //    this.edges[i].localValue!.push(value)\n            );\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.edges.length; i++) {\n            _loop_1(i);\n        }\n        this.getAlphabetFromEdges();\n        this.getStatementsFromNodes(graph.nodes);\n        this.startStatements = startStatements;\n        this.currentNode = startStatements[0];\n        this.nodes = graph.nodes;\n        this.createMatrix();\n    }\n    Computer.prototype.getAlphabetFromEdges = function () {\n        var _this = this;\n        var alphabetSet = new Set();\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\n            this.edges[i_1].localValue.forEach(function (value) {\n                if (value.title !== \"\") {\n                    alphabetSet.add(value.title);\n                }\n            });\n        }\n        var i = 0;\n        alphabetSet.forEach(function (value) {\n            if (value !== \"\") {\n                _this.alphabet.set(value, i);\n                i++;\n            }\n        });\n    };\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.statements.set(nodes[i].id, {\n                id: nodes[i].id,\n                isAdmit: nodes[i].isAdmit,\n                idLogic: i,\n                output: nodes[i].output\n            });\n        }\n    };\n    Computer.prototype.createMatrix = function () {\n        for (var i = 0; i < this.statements.size; i++) {\n            this.matrix[i] = [];\n            for (var j = 0; j < this.alphabet.size; j++) {\n                this.matrix[i][j] = [];\n                //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\n            }\n        }\n        for (var i = 0; i < this.edges.length; i++) {\n            var statementFrom = this.statements.get(this.edges[i].from);\n            var statementTo = this.statements.get(this.edges[i].to);\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\n                // if (letterId === undefined) {\n                //     throw new Error(\"A\")\n                // }\n                if (letterId === undefined) {\n                    continue;\n                }\n                console.log(letterId);\n                console.log(this.edges[i].localValue[j].title);\n                var stDwn = this.edges[i].localValue[j].stackDown;\n                var stPsh = this.edges[i].localValue[j].stackPush;\n                var mv = this.edges[i].localValue[j].move;\n                var output = this.edges[i].localValue[j].output === undefined ? statementTo.output : this.edges[i].localValue[j].output;\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\n                    stDwn = exports.EPS;\n                    stPsh = [exports.EPS];\n                }\n                // console.log(statementTo.move)\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv, output: output }));\n            }\n        }\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\n        this.statements.forEach(function (value) { return console.log(value); });\n        this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n    };\n    Computer.prototype.cellMatrix = function (i, j) {\n        return this.matrix[i][j];\n    };\n    return Computer;\n}());\nexports.Computer = Computer;\n","\"use strict\";\nexports.__esModule = true;\nvar Stack = /** @class */ (function () {\n    function Stack(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Stack.prototype.push = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Stack.prototype.pop = function () {\n        return this.storage.pop();\n    };\n    Stack.prototype.peek = function () {\n        return this.storage[this.size() - 1];\n    };\n    Stack.prototype.size = function () {\n        return this.storage.length;\n    };\n    Stack.prototype.getStorage = function () {\n        var list = [];\n        this.storage.forEach(function (value) { return list.push(value); });\n        return list;\n    };\n    Stack.prototype.cpyTo = function (stack) {\n        this.storage.forEach(function (value) { return stack.push(value); });\n        return stack;\n    };\n    return Stack;\n}());\nexports.Stack = Stack;\n","\"use strict\";\nexports.__esModule = true;\n","import React, {AllHTMLAttributes} from \"react\";\nimport \"./ControlWrapper.css\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\n    title: string,\n    visible: boolean\n}\n\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\n    static defaultProps = {\n        visible: true\n    }\n\n    render() {\n        const {visible, title, style, className, children, ...restProps} = this.props;\n\n        return (\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\n                   variant=\"outlined\"\n                   style={style}\n                   {...restProps}\n            >\n                <div className=\"control-wrapper--content\">\n                    <div>\n                        <Typography variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </div>\n\n                    <div className=\"control-wrapper--child\">\n                        {children}\n                    </div>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default ControlWrapper;","import React, { ChangeEvent } from \"react\";\nimport \"./NodeControl.css\";\nimport { node } from \"../../react-graph-vis-types\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\n\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\ninterface nodeControlProps {\n    node: node | null,\n    changeNodeLabel: (id: number, label: string) => void,\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\n    deleteNode: (id: number) => void,\n    reinitComputer: (() => void)\n}\n\ninterface nodeControlState {\n    prevNodeId: number | undefined,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean\n}\n\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\n    constructor(props: nodeControlProps) {\n        super(props);\n\n        this.state = {\n            prevNodeId: this.props.node?.id,\n            label: this.props.node?.label || \"\",\n            isAdmit: this.props.node?.isAdmit || false,\n            isInitial: this.props.node?.isInitial || false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\n        if (this.props.node?.id !== prevState.prevNodeId) {\n            this.setState({\n                label: this.props.node?.label || \"\",\n                    // + ((\" | \" + this.props.node?.output || \"\")) \n                    \n                isAdmit: this.props.node?.isAdmit || false,\n                isInitial: this.props.node?.isInitial || false,\n                prevNodeId: this.props.node?.id\n            });\n        }\n    }\n\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\n            this.setState({ label: event.target.value });\n        }\n    }\n\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\n            this.setState({ isAdmit: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null && !this.props.node.isAdmit) {\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\n            this.setState({ isInitial: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onDeleteClick = (): void => {\n        if (this.props.node !== null) {\n            this.props.deleteNode(this.props.node.id);\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\n                <FormControl>\n\n                    <div className=\"node-control__item\">\n                        <TextField\n                            label=\"Имя\"\n                            size=\"small\"\n                            value={this.state.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isInitial}\n                                    onChange={this.onIsInitialChanged}\n                                />\n                            }\n                            label={\"Начальное\"}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isAdmit}\n                                    onChange={this.onIsAdmitChanged}\n                                />\n                            }\n                            label=\"Допускающее\"\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <Button\n                            onClick={this.onDeleteClick}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </FormControl>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default NodeControl;","import {ComputerInfo, ComputerType, edge, graph, node} from \"./react-graph-vis-types\";\nimport {EPS} from \"./Logic/Computer\";\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\nimport { Elements } from \"./App\";\nimport { DataSet } from \"vis-network/standalone/esm/vis-network\";\n\n\nconst epsSubstStr = (epsText: string) => (value: string) => value === EPS ? epsText : value\n\nconst epsSubstStrs = (epsText: string) => (values: string[]) => {\n    return values.map(v =>  epsSubstStr(epsText)(v)).join(\":\")\n}\n\nconst mvStr = (value: Move) => value === 0 ? \"L\" : \"R\"\n\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType ): string => {\n    const maxLength = (): number => {\n        let max: number = 0;\n        if (transitions !== undefined) {\n            transitions.forEach(value => {\n                value.forEach(value1 => {\n                    if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\n                        const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\n                        const ttl: number = value1.title === EPS ? 0 : value1.title.length\n                        const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\n                        max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\n                    }\n                })\n            })\n        }\n        return max\n    }\n\n    let spc = \"\"\n    const pdng_k = 7\n\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\n        spc += \" \"\n    }\n\n    const epsSubst = epsSubstStr(\"ε\")\n    const epsSubsts = epsSubstStrs(\"ε\")\n\n    spc = frmt === 'tm' ? '       ' : spc\n\n    let str = \"\" + spc\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + mvStr(v.move) + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === 'pda' || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \"\\n\" + spc\n                    }\n                })\n            })\n        }\n    }\n    return str\n}\n\n\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType): string => {\n    const epsSubst = epsSubstStr(\"eps\")\n    const epsSubsts = epsSubstStrs(\"eps\")\n\n    let str = \"\"\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + '>' + mvStr(v.move) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"pda\" || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \";\\n\"\n                    }\n                })\n            })\n        }\n    }\n\n    return str\n}\n\nexport const decorateGraph = (elements: Elements, frmt: null | ComputerType) => {\n    elements.edges.forEach((edge) => {\n        elements.edges.update({\n            id: edge.id!,\n            label: transitionsToLabel(edge.transitions, frmt)\n        })\n    })\n\n    elements.nodes.forEach((node) => {\n        const lableTokens =\n            node.label\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split('|')\n        const output = lableTokens[1] !== undefined ? lableTokens[1] : undefined \n        node.output = output \n\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        elements.nodes.update({\n            id: node.id,\n            // label: node.label ,\n            // + (node.output !== undefined ? \" | \" + node.output : \"\"),\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            },\n            borderWidth: node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default,\n            borderWidthSelected: borderWidth.highlight\n        })\n    })\n\n}\n\nexport const graphToElements = (graph: graph): Elements => {\n    let acc: Elements = {nodes: new DataSet<node, \"id\">(), edges: new DataSet<edge, \"id\">()}\n\n    graph.nodes.forEach((node) => {\n        acc.nodes.add(node)\n    })\n    graph.edges.forEach((edge) => {\n        acc.edges.add(edge)\n    })\n\n    return acc\n}\n\nexport const elementsToGraph = (elements: Elements): graph => {\n    let acc: graph = {nodes: [], edges: []}\n\n    elements.nodes.forEach((node) => {\n        acc.nodes.push(node)\n    })\n    elements.edges.forEach((edge) => {\n        acc.edges.push(edge)\n    })\n\n    return acc\n}\n\nexport const getNodeNamePrefix = (graph: graph): string => {\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\n\n    graph.nodes.forEach(node => {\n        let i = 0;\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\n            i++;\n        }\n        prefix = prefix.substring(0, i);\n    });\n\n    return prefix;\n}\n\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\n    dfa: {\n        name: \"ДКА\",\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\n        preview: \"dfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\n            ]\n        }\n    },\n    nfa: {\n        name: \"НКА\",\n        description: \"Может находиться в нескольких состояниях одновременно\",\n        preview: \"nfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\n\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\n            ]\n        }\n    },\n    \"nfa-eps\": {\n        name: \"ε-НКА\",\n        description: \"Расширение НКА, в котором используются ε-переходы\",\n        preview: \"nfa-eps.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\n\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 7, transitions: new Set([[{title: '0'}]])},\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n            ]\n        }\n    },\n    pda: {\n        name: \"Автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([\n                        [\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\n                        ]])\n                },\n\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: 'Z0', stackPush: ['1', 'Z0']}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '0',  stackPush: ['0', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '1',  stackPush: ['0', '1' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '0',  stackPush: ['1', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: ['1', '1' ]}]])},\n\n                {\n                    from: 1, to: 2, transitions: new Set([\n                        [\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\n                        ]])\n                },\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '0',  stackPush: ['0'      ]}]])},\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '1',  stackPush: ['1'      ]}]])},\n\n                {\n                    from: 2, to: 2, transitions: new Set([\n                        [\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\n                        ]])\n                },\n                // {from: 2, to: 2, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: [EPS      ]}]])},\n\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\n\n            ]\n        }\n    },\n    dpda: {\n        name: \"Детерминированный автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([[{title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},]])\n                },\n            ]\n        }\n    },\n    tm: {\n        name: \"Машина Тьюринга\",\n        description: \"_\",\n        preview: \"tm.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 0, y: 200, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n            ]\n        }\n    },\n    mealy: {\n        name: \"Автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"_\",\n        defaultGraph: {\n            // nodes: [\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n            //     { x: 300, y: -200, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n            //     { x: 500, y: -300, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n            //     { x: -100, y: -500, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            // ],\n            // edges: [\n            //     { from: 0, to: 1, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 0, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n            //     { from: 1, to: 2, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n            //     { from: 1, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 2, to: 0, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n            //     { from: 3, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 3, to: 0, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            // ]\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n            //     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n        \n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\n        }\n    },\n    dmealy: {\n        name: \"Детерминированный автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"_\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n            //     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n        \n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\n        }\n    },\n    moore: {\n        name: \"Автомат Мура\",\n        description: \"_\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n                // { id: 3, isAdmit: false, output: '3' },\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{ title: '1' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 3, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: '1' }]]) },\n            ]        \n        }\n    },\n    dmoore: {\n        name: \"Детерминированный автомат Мура\",\n        description: \"_\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n                // { id: 3, isAdmit: false, output: '3' },\n            ],\n            edges: [\n                { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n                { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            ]\n            // nodes: [\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n            //     { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n            //     { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            // ],\n            // edges: [\n            //     { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            //     { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    \n            //     // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n            //     // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n            //     // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n            //     // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            // ]        \n        }\n    },\n\n}\n\nexport const getCookie = (name: string) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n}\n\n\nexport const getRandomString = (length: number): string => {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","import React from \"react\";\nimport {ComputerTypeContext} from \"./App\";\n\nexport const withComputerType = (Component: typeof React.Component) => (\n    (props: any) => (\n        <ComputerTypeContext.Consumer>\n            { context => <Component computerType={context} {...props}/> }\n        </ComputerTypeContext.Consumer>\n    )\n)","import React from \"react\";\nimport {ComputerType, edge} from \"../../react-graph-vis-types\";\nimport {getTransitionsTitles, transitionsToLabel} from \"../../utils\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport Button from \"@mui/material/Button\";\nimport \"./EdgeControl.css\";\nimport Transition from \"./Transition/Transition\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport TextField from \"@mui/material/TextField\";\nimport {withComputerType} from \"../../hoc\";\nimport {EPS} from \"../../Logic/Computer\";\nimport {Move, TransitionParams} from \"../../Logic/IGraphTypes\";\nimport { TextareaAutosize } from \"@mui/material\";\n\n\ninterface EdgeControlProps {\n    edge: edge | null,\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\n    deleteEdge: (id: string) => void,\n    computerType: ComputerType | null\n    reinitComputer: (() => void)\n}\n\ninterface Rule{\n    id: number\n    value: string\n}\n\ninterface EdgeControlState {\n    prevEdgeId: string | undefined,\n    transitions: Set<TransitionParams[]>,\n    transitionsText: string,\n    displayedTransitionText: string,\n    activeTransition: TransitionParams[] | null,\n    editMode: boolean,\n    countRules?: number, \n    rules: Rule[],\n}\n\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\n    constructor(props: EdgeControlProps) {\n        super(props);\n\n        this.state = {\n            prevEdgeId: this.props.edge?.id,\n            transitions: this.props.edge?.transitions || new Set(),\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            activeTransition: null,\n            editMode: false,\n            countRules: 1,\n            rules: [\n                {id: 1, value: ' '}\n            ]\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\n\n            this.setState({\n                transitions: this.props.edge?.transitions || new Set(),\n                prevEdgeId: this.props.edge?.id,\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n                activeTransition: null,\n                editMode: false\n            });\n\n        }\n    }\n\n    selectTransition = (transition: TransitionParams[] | null): void => {\n        if (this.state.activeTransition === transition) {\n            this.setState({activeTransition: null});\n        } else {\n            this.setState({activeTransition: transition});\n        }\n    }\n\n    changeTransitions = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        this.setState({transitionsText: value});\n\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined }[] = []\n        let acc: TransitionParams[] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth })\n                })\n\n\n            // accumulator.forEach(value => {\n            //     if (value.fth !== undefined) {\n            //         acc.push(\n            //             {\n            //                 title: EPS,\n            //                 stackDown: value.snd === 'eps' ? EPS : value.snd,\n            //                 stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n            //                 move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n            //             }\n            //         )\n            //     }\n            // })\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: snd, trd: undefined, fth: undefined })\n            })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            output: value.snd\n                        }\n                    )\n                }\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined })\n                })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            stackDown: value.snd === 'eps' ? EPS : value.snd,\n                            stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                            move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n                        }\n                    )\n                }\n            })\n        }\n\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\n        console.log(\"ALLLOO\")\n        /////\n        // await this.props.reinitComputer()\n        ///\n        this.setState({transitionsText: value\n            , transitions: transitions\n        }, () => this.props.reinitComputer());\n    }\n\n    deleteEdge = async (): Promise<void> => {\n        if (this.props.edge !== null) {\n            this.props.deleteEdge(this.props.edge.id!);\n        }\n        await this.props.reinitComputer()\n\n    }\n    \n    private addInstruction(value: string) {\n        let newRow = {id: this.state.rules.length, value: value};\n        this.setState({rules: this.state.rules.concat(newRow)});\n    }\n    \n    changeEditMode = () => {\n         this.setState({editMode: !this.state.editMode});\n         this.updateTransitions();\n\n    }\n    \n    updateTransitions = async () => {\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined \n            out: string | undefined\n        } [] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth, out: undefined })\n                })\n\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: undefined, trd: undefined, fth: undefined, out: snd })\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined, out: undefined })\n                })\n        }\n\n\n        let acc: TransitionParams[] = []\n        accumulator.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                        move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined,\n                        output: value.out,\n                        \n                    }\n                )\n            }\n        })\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.setState({\n            transitionsText: getTransitionsTitles(transitions, this.props.computerType),\n            transitions: transitions\n        })\n        ///\n        await this.props.reinitComputer()\n        ///\n    }\n\n    deleteTransition = (): void => {\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\n            const transitions = this.state.transitions;\n            transitions.delete(this.state.activeTransition);\n\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\n            this.setState({transitions: transitions, transitionsText: getTransitionsTitles(transitions, this.props.computerType)});\n        }\n    }\n\n\n\n    render() {\n        return (\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\n                <div className=\"edge-control__container\">\n                    <div className=\"edge-control__item edge-control__transitions\">\n                        {\n                                <TextField\n                                    id=\"filled-multiline-static\"\n                                    multiline\n                                    rows={3}\n                                    variant=\"standard\"\n                                    label=\"Переходы\"\n                                    size=\"small\"\n                                    value={this.state.transitionsText}\n                                    onChange={this.changeTransitions}\n                                    helperText={this.props.computerType === \"nfa-eps\" || \"pda\"|| \"dpda\" ? 'Список символов или \"eps\" через запятую' : \"Список символов через запятую\"}\n                                    onBlur={this.updateTransitions}\n                                />\n                        }\n\n                        <div className=\"edge-control__edit-transitions\"\n                             onClick={this.changeEditMode}>\n                            <EditIcon/>\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"edge-control__item\">\n                        <Button\n                            onClick={this.deleteEdge}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </div>\n            </ControlWrapper>\n            );\n        }\n}\n\nexport default withComputerType(EdgeControl);","import React, { ChangeEvent } from \"react\";\n\nimport { node } from \"../../react-graph-vis-types\";\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\n\nexport const History = (props: {\n    startNode: node, history: {\n        a: node;\n        b: string[] | undefined;\n    }[][], historyEndRef: any\n}) => {\n    return (\n        <div className=\"run-control__item run-control__history\">\n            <div className=\"run-control__history__header\">\n                <Typography variant=\"h6\">История</Typography>\n            </div>\n            {\n                props.history.length !== 0 ?\n                    <div className=\"run-control__history__scroll\">\n\n\n                        {\n                            props.startNode !== undefined\n                                ?\n                                <div className=\"run-control__history__row\" key={0}>\n                                    <span className=\"run-control__history__index\">{0}</span>\n                                    {\n                                        <Tooltip\n                                            title={<Typography className=\"display-linebreak\">{\"~\"}</Typography>}>\n                                            <div\n                                                className=\"run-control__history__node\"\n                                                style={{ border: `${props.startNode.isInitial ? \"#0041d0\" : props.startNode.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                            >\n                                                {props.startNode!.label}\n\n                                            </div>\n                                        </Tooltip>\n                                    }\n\n                                </div>\n                                : <div />\n                        }\n\n                        {\n                            props.history.map((nodes, index) => (\n                                <div className=\"run-control__history__row\" key={index}>\n                                    <span className=\"run-control__history__index\">{index + 1}</span>\n                                    {\n                                        nodes.map((node, index) => (\n                                            <Tooltip\n                                                title={<Typography className=\"display-linebreak\">{node.b !== undefined ? node.b.join('\\n') : ''}</Typography>}>\n                                                <div\n                                                    className=\"run-control__history__node\"\n                                                    style={{ border: `${node.a.isInitial ? \"#0041d0\" : node.a.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                                >\n                                                    {node.a.label}\n\n                                                </div>\n                                            </Tooltip>\n                                        ))\n                                    }\n\n                                </div>\n                            ))\n                            \n                        }\n                                        <div>\n                                            {/* {console.log(nodes)} */}\n                                            <div ref={props.historyEndRef} />\n                                        </div>\n\n                    </div>\n                    :\n                    <div className=\"run-control__history__placeholder\">\n                        Используйте пошаговый запуск, чтобы наблюдать за историей\n\n                    </div>\n            }\n\n\n        </div>)\n}\n","import React, { ChangeEvent } from \"react\";\nimport { ComputerType, graph, histNode, node } from \"../../react-graph-vis-types\";\nimport { DFA } from \"../../Logic/DFA\";\nimport { isEqual } from \"lodash\";\nimport { withComputerType } from \"../../hoc\";\nimport { Computer, EPS } from \"../../Logic/Computer\";\nimport { NFA } from \"../../Logic/NFA\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport \"./RunControl.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { EpsilonNFA } from \"../../Logic/EpsilonNFA\";\nimport { PDA } from \"../../Logic/PDA\";\nimport { TM } from \"../../Logic/TM\";\nimport { Elements } from \"../../App\";\nimport { decorateGraph, elementsToGraph, graphToElements } from \"../../utils\";\nimport { HistUnit, Output, Step } from \"../../Logic/Types\";\nimport { GraphEval, GraphEvalMultiStart, Move, NodeCore } from \"../../Logic/IGraphTypes\";\nimport { Mealy } from \"../../Logic/Mealy\";\nimport { Moore } from \"../../Logic/Moore\";\nimport { start } from \"repl\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nimport { NonDeterministic, NonMinimizable } from \"../../Logic/Exceptions\";\nimport { DPDA } from \"../../Logic/DPDA\";\nimport { DMealy } from \"../../Logic/DMealy\";\nimport { DMoore } from \"../../Logic/DMoore\";\nimport { isAbsolute } from \"path\";\nimport { History } from \"./History\"\n\ninterface runControlProps {\n    computerType: ComputerType,\n    elements: Elements,\n    treeElems: Elements,\n    historyEndRef: React.RefObject<HTMLDivElement>,\n    byEmptyStack: boolean,\n    changerStack: () => void,\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\n    updMem: (mem: string[] | undefined, ptr: number | undefined) => void\n    network: any\n    createHistNode: (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => void\n    createHistEdge: (from: number, to: number, by: any) => void\n    getLastHistNodeId: () => number\n    resetHistTree: () => void\n    setInit: (f: () => void) => void\n    setNfaToDfa: (f: () => void) => void\n    setMinimizeDfa: (f: () => void) => void\n    setMooreToMealy: (f: () => void) => void\n    setMealyToMoore: (f: () => void) => void\n    setChangerByStack: (f: () => void) => void\n    setRun: (f: () => void) => void\n    setStep: (f: () => void) => void\n    setReset: (f: () => void) => void\n    setHistory: (jsx: () => JSX.Element) => void\n    updateElements: (elements: Elements) => void\n    setComputerType: (type: null | ComputerType) => void\n    setResettedStatus: (status: boolean) => void\n    setByEmptyStack: (byEmptyStack: boolean) => void\n    setIsNonDetermenistic: (v: boolean) => void\n    setIsNonMinimizable: (v: boolean) => void\n    treeContextInfo: () => string\n    treeVisible: () => boolean\n}\n\ninterface runControlState {\n    input: string,\n    result?: boolean,\n    computer: Computer | undefined,\n    editMode: boolean,\n    currentInputIndex: number,\n    history: { a: node, b: string[] | undefined }[][],\n    byEmptyStack: boolean,\n    wasRuned: boolean,\n    memory: string[] | undefined,\n    gElements: graph,\n    startNode: node | undefined,\n    lastHistUnits: nodeTree[],\n    // { id: number, idd: number, stack?: string[] }[],\n    startStatements: NodeCore[]\n}\n\ntype ButtonSource = { name: () => string, onClick: () => void }\n\nconst creatButtons = (buttons: ButtonSource[][]) => {\n    const buttonsComp = buttons.reduce((acc: any[], buttons) => {\n        acc.push(\n            <div className=\"run-control__item run-control__buttons\">\n                {\n                    buttons.map((button) =>\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={\n                                    () => { button.onClick() }\n                                }\n                            >\n                                {button.name()}\n                            </Button>\n                        </div>\n                    )\n\n                }\n            </div>\n        )\n\n        return acc\n    }, [])\n    return (\n        <div>\n            {buttonsComp}\n        </div>\n    )\n}\n\ntype nodeTree = {\n    id: number,\n    idd: number,\n    stack?: string[],\n    move?: Move,\n    by?: string,\n    from?: NodeCore,\n    stackDown?: string,\n    output?: Output,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean,\n    isCurrent: boolean\n}\n\nclass RunControl extends React.Component<runControlProps, runControlState> {\n\n    // historyEndRef = React.createRef<HTMLDivElement>();\n\n    constructor(props: runControlProps) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            result: undefined,\n            computer: undefined,\n            editMode: true,\n            currentInputIndex: -1,\n            history: [],\n            byEmptyStack: false,\n            wasRuned: false,\n            memory: undefined,\n            gElements: elementsToGraph(this.props.elements),\n            startNode: undefined,\n            lastHistUnits: [],\n            startStatements: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.setInit(() => {\n            let haveEmpty = false\n            this.props.elements.edges.forEach(edge => {\n                if (edge.label === \"\") {\n                    haveEmpty = true\n                }\n            })\n            if (!haveEmpty) {\n                return this.initializeComputer()\n            }\n        })\n        this.props.setNfaToDfa(this.nfaToDfa)\n        this.props.setMinimizeDfa(this.minimizeDfa)\n        this.props.setMooreToMealy(this.mooreToMealy)\n        this.props.setMealyToMoore(this.mealyToMoore)\n        this.props.setChangerByStack(this.admitByStack)\n        this.props.setRun(this.run)\n        this.props.setStep(this.step)\n        this.props.setReset(this.reset)\n        this.props.setHistory(() =>\n            <History\n                startNode={this.state.startNode!}\n                history={this.state.history!}\n                historyEndRef={this.props.historyEndRef}\n            />)\n        this.initializeComputer()\n    }\n\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\n        if (this.computerShouldBeUpdated(elementsToGraph(prevProps.elements), elementsToGraph(this.props.elements))) {\n            this.initializeComputer();\n        }\n\n    }\n\n    computerShouldBeUpdated = (prev: graph, current: graph): boolean => {\n        const compareNodes = (): boolean => {\n            if (prev.nodes.length !== current.nodes.length) {\n                return true;\n            }\n\n            return prev.nodes.some((prev, index) => {\n                const curr = current.nodes[index];\n                return prev.id !== curr.id ||\n                    prev.isAdmit !== curr.isAdmit ||\n                    prev.isInitial !== curr.isInitial;\n            })\n        }\n\n        const compareEdges = (): boolean => {\n            if (prev.edges.length !== current.edges.length) {\n                return true;\n            }\n\n            return prev.edges.some((prev, index) => {\n                const curr = current.edges[index];\n                return prev.id !== curr.id ||\n                    prev.from !== curr.from ||\n                    prev.to !== curr.to ||\n                    !isEqual(curr.transitions, prev.transitions)\n            });\n        }\n        return compareEdges() || compareNodes()\n    }\n\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node[], input: string[]): Computer | undefined => {\n        switch (computerType) {\n            case \"dfa\":\n                try {\n                    return new DFA(graph, initialNode, input);\n                } catch (e) {\n                    return undefined;\n                }\n            case \"nfa\":\n                return new NFA(graph, initialNode, input);\n            case \"nfa-eps\":\n                return new EpsilonNFA(graph, initialNode, input);\n            case \"pda\":\n                return new PDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"dpda\":\n                return new DPDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"tm\":\n                return new TM(graph, initialNode, input);\n            case \"mealy\":\n                return new Mealy(graph, initialNode, input);\n            case \"dmealy\":\n                return new DMealy(graph, initialNode, input);\n            case \"moore\":\n                return new Moore(graph, initialNode, input);\n            case \"dmoore\":\n                return new DMoore(graph, initialNode, input);\n        }\n\n    }\n\n    initializeComputer = () => {\n        console.warn(\"Reinitializing computer\");\n\n        this.setState({ gElements: elementsToGraph(this.props.elements) }, () => {\n            this.props.resetHistTree()\n\n            const initialNode: node[] = elementsToGraph(this.props.elements).nodes.filter(node => node.isInitial);\n            const input = this.state.input.split(\"\");\n\n            if (initialNode === undefined) {\n                console.warn(\"There is no initial node. Computer will not be initialized\");\n                return;\n            }\n\n            this.setState({\n                computer: this.getComputer(this.props.computerType, this.state.gElements, initialNode, input),\n                result: undefined\n            }, async () => {\n\n                const tmp: nodeTree[] = []\n\n                const startStmts = this.state.computer !== undefined\n                    ? this.state.computer.getStartStatements()\n                    : []\n\n                startStmts.forEach((v, index) => {\n                    const paddingTreeId = index + 1\n\n                    tmp.push({\n                        stack: v.stack ? [...v.stack] : [],\n                        from: v.from!,\n                        by: v.by,\n                        stackDown: v.stackDown,\n                        label: `${v.id}`,\n                        isAdmit: v.isAdmit,\n                        isInitial: false,\n                        isCurrent: false,\n                        id: this.props.getLastHistNodeId() + paddingTreeId,\n                        idd: v.id\n                    })\n                })\n\n                if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        const label = gNode?.label + '\\n' + `${(this.props.getLastHistNodeId() + 1)}` + '\\n―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                        this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                } else {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                }\n                await this.setState({ lastHistUnits: tmp })\n            });\n\n        })\n\n    }\n\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        const input = event.target.value;\n\n        this.reset();\n        this.state.computer?.setInput(input.split(\"\"));\n\n        this.setState({ input: input });\n\n\n    }\n\n\n\n    drawTreeLayot = (nodes: NodeCore[], pred: nodeTree[], tmp: nodeTree[]) => {\n        nodes.forEach((v, index) => {\n            const paddingTreeId = index + 1\n            const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.id)\n\n            tmp.push({\n                stack: v.stack ? [...v.stack] : [],\n                from: v.from!,\n                by: v.by,\n                stackDown: v.stackDown,\n                move: v.move,\n                output: v.output,\n                label: `${v.id}`,\n                isAdmit: v.isAdmit,\n                isInitial: gNode!.isInitial,\n                isCurrent: gNode!.isCurrent,\n                id: this.props.getLastHistNodeId() + paddingTreeId,\n                idd: v.id\n            })\n        })\n\n        if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                const label = gNode?.label + '\\n' + '―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        } else {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        }\n\n        console.log('<<<<<<<<<<<<<<<<<<<')\n        console.log(nodes)\n        console.log(tmp)\n        console.log('<<<<<<<<<<<<<<<<<<<\\n\\n')\n\n        const letter = (l: any) => l === EPS ? 'ε' : l\n\n        const stackDwn = (stDwn: any) => this.props.computerType === 'pda' || this.props.computerType === 'dpda'\n            ? ', ' + letter(stDwn)\n            : ''\n\n        const move = (mv: Move | undefined) => this.props.computerType === 'tm'\n            ? mv === Move.L ? ', L' : \", R\"\n            : ''\n\n        const output = (out: any) => this.props.computerType === 'mealy' || this.props.computerType === 'dmealy'\n            ? ', ' + out\n            : ''\n\n        const txt = (l: any, stDwn: any, mv: any, out: any) => letter(l) + stackDwn(stDwn) + move(mv) + output(out)\n\n        const bySymbRules = tmp.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const from = () => {\n                switch (this.props.computerType) {\n                    case 'tm':\n                    case 'moore':\n                    case 'dmoore':\n                    case 'mealy':\n                    case 'dmealy':\n                        return pred.filter((p) => v.from && p.idd === v.from?.id)[0].id;\n                    default:\n                        return pred.filter((p) => v.from && p.idd === v.from?.id && p.stack?.toString === v.from.stack?.toString)[0].id\n                }\n            }\n            acc.push({ from: from(), to: [v.id], by: txt(v.by, v.stackDown, v.move, v.output) })\n            return acc\n        }, [])\n\n        console.log('\\n\\n\\n')\n\n        bySymbRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        this.setState({ lastHistUnits: tmp })\n\n    }\n\n    treeEps = (byEpsPred: NodeCore[], byLetter: NodeCore[], byEpsAfter: NodeCore[]) => {\n        console.log('\\n')\n        console.log('EPS>>>', byEpsPred)\n        console.log('LTR>>>', byLetter)\n        console.log('EPS>>>', byEpsAfter)\n        console.log('\\n')\n\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byEpsPred, this.state.lastHistUnits, tmp)\n        const tmp1: nodeTree[] = []\n        this.drawTreeLayot(byLetter, tmp, tmp1)\n        const tmp2: nodeTree[] = []\n        this.drawTreeLayot(byEpsAfter, tmp1, tmp2)\n    }\n\n    tree = (byLetter: NodeCore[]) => {\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n    }\n\n    step = async () => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        this.props.setResettedStatus(true)\n\n\n        if (this.state.wasRuned) {\n            this.setState({ wasRuned: false });\n            this.reset();\n            await this.props.resetHistTree()\n        }\n\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\n\n        try {\n            const stepResult: Step = this.state.computer.step()\n\n            if (stepResult.nodes.length === 0) return;\n\n            this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\n            this.props.updMem(stepResult.memory, stepResult.pointer)\n\n            let result = undefined;\n            if (stepResult.counter === this.state.input.length) {\n                result = stepResult.isAdmit\n            } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\n                result = false;\n            }\n\n            const nodes = stepResult.nodes\n                .map(nodeCore => this.state.gElements.nodes.find(node => node.id === nodeCore.id))\n                .filter((node): node is node => node !== undefined);\n\n            const byEpsPred = stepResult.byEpsPred ? stepResult.byEpsPred : []\n\n            const byLetter = stepResult.byLetter ? stepResult.byLetter : []\n\n            const byEpsAfter = stepResult.byEpsAfter ? stepResult.byEpsAfter : []\n\n            if (this.props.computerType !== 'tm' && this.state.computer.haveEpsilon()) {\n                console.log('byEpsAfter>>>', byEpsAfter)\n                this.treeEps(byEpsPred, byLetter, byEpsAfter)\n            } else {\n                console.log('byLetter', byLetter)\n                const tmp: nodeTree[] = []\n                this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n            }\n\n            const _nodes = nodes.map((e, i) => {\n                const stack = stepResult.nodes[i].stack\n                return {\n                    a: e,\n                    b: stack !== undefined\n                        ? stack.reverse()\n                        : stepResult.output !== undefined\n                            ? stepResult.output!\n                            : undefined\n                }\n            })\n\n            // if (this.props.computerType === \"moore\" && stepResult.counter === 1) {\n            //     const startNode: { a: node, b: string[] | undefined }[] = [{\n            //         a: this.state.gElements.nodes.filter(node => node.id === this.state.computer!.getCurrNode())[0],\n            //         b: [\"~\"]\n            //     }]\n            //     console.log(startNode)\n            //     this.setState({\n            //         startNode: this.state.gElements.nodes.filter(node => node.id === this.state.computer!.getCurrNode())[0]\n            //     })\n            // }\n\n            this.setState({\n                result: result,\n                currentInputIndex: this.state.currentInputIndex + 1,\n                history: [...this.state.history, _nodes],\n                memory: stepResult.memory,\n            }, () => {\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n                // this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' })\n            });\n\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n            else {\n                console.log(e)\n            }\n        }\n        // await this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' })\n\n    }\n\n    reset = (): void => {\n        this.state.computer?.restart();\n        this.props.changeStateIsCurrent([], true);\n        this.setState({\n            result: undefined,\n            currentInputIndex: -1,\n            history: [],\n        },\n            () => {\n                this.initializeComputer()\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n            }\n        );\n        this.state.computer?.setInput(this.state.input.split(\"\"))\n        this.props.setResettedStatus(false)\n        this.props.resetHistTree()\n    }\n\n    run = async (): Promise<void> => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        await this.reset();\n\n        try {\n            const result = this.state.computer.run();\n\n            const histTrace = result.histTrace ? result.histTrace : []\n\n            histTrace.forEach(async (histStep) => {\n                const byEpsPred = histStep.byEpsPred ? histStep.byEpsPred : []\n\n                const byLetter = histStep.byLetter ? histStep.byLetter : []\n\n                const byEpsAfter = histStep.byEpsAfter ? histStep.byEpsAfter : []\n\n                if (this.state.computer && this.state.computer.haveEpsilon()) {\n                    this.treeEps(byEpsPred, byLetter, byEpsAfter)\n                } else {\n                    this.tree(byLetter)\n                }\n            })\n\n            this.setState({ result: result.isAdmit, currentInputIndex: -1, history: [] });\n            this.setState({ wasRuned: true })\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    nfaToDfa = (): void => {\n        const nfaToDfa = this.state.computer!.nfaToDfa()\n        const nodes = nfaToDfa.nodes.map((v, it) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: v.id.toString(),\n            isInitial: it === 0,\n            isCurrent: false\n        }))\n        const edges = nfaToDfa.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"dfa\")\n        })\n    }\n\n    admitByStack = (): void => {\n        const curStbyEmp = this.state.byEmptyStack;\n        this.setState({ byEmptyStack: !curStbyEmp });\n        this.props.setByEmptyStack(!curStbyEmp)\n        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\n        this.reset();\n    }\n\n    minimizeDfa = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        try {\n            const miniDFA: GraphEval = this.state.computer!.minimizeDfa()\n            const nodes = miniDFA.graphcore.nodes.map((v) => ({\n                id: v.id,\n                isAdmit: v.isAdmit,\n                label: 'G' + v.id.toString(),\n                isInitial: v.id === miniDFA.start.id,\n                isCurrent: false\n            }))\n            const edges = miniDFA.graphcore.edges\n            const gElements = {\n                nodes: nodes,\n                edges: edges\n            }\n\n            this.setState({\n                gElements: gElements\n            }, () => {\n                this.props.updateElements(graphToElements(gElements))\n            })\n        } catch (e) {\n            if (e instanceof NonMinimizable) {\n                this.props.setIsNonMinimizable(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    mooreToMealy = (): void => {\n        this.reset()\n        this.initializeComputer();\n\n        const mealy: GraphEvalMultiStart = this.state.computer!.mooreToMealy()\n\n        const starts = mealy.start.map((v) => v.id)\n\n        const nodes = mealy.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString(),\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = mealy.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"mealy\")\n            this.reset();\n        })\n    }\n\n    mealyToMoore = (): void => {\n        this.reset();\n        this.initializeComputer();\n        this.reset();\n\n        const miniDFA: GraphEvalMultiStart = this.state.computer!.mealyToMoore()\n\n        const starts = miniDFA.start.map(v => v.id)\n\n        const nodes = miniDFA.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString() + ' | ' + v.output,\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = miniDFA.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"moore\")\n        })\n    }\n\n    private defaultButtonsLine: ButtonSource[] = [\n        { name: () => 'Шаг', onClick: () => this.step() },\n        { name: () => 'Запуск', onClick: () => this.run() },\n        { name: () => 'Сбросить', onClick: () => this.reset() },\n    ]\n\n    // private buttonsDefault: ButtonSource[][] = [this.defaultButtonsLine]\n\n    private buttonsNfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => \"НКА->ДКА\", onClick: this.nfaToDfa }, { name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsDfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => \"Минимизровать\", onClick: this.minimizeDfa }, { name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsMealy: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => \"Автомат Мура\", onClick: this.mealyToMoore }, { name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsMoore: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => \"Автомат Мили\", onClick: this.mooreToMealy }, { name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsTree: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsByStackByState: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [\n            { name: () => this.props.byEmptyStack ? \"По стеку\" : \"По состоянию\", onClick: () => this.props.changerStack() },\n            { name: this.props.treeContextInfo, onClick: this.props.treeVisible }\n        ],\n    ]\n\n    private buttonsNoRun: ButtonSource[][] = [\n        [\n            { name: () => 'Шаг', onClick: () => this.step() },\n            { name: () => 'Сбросить', onClick: () => this.reset() }\n        ],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private getButtons = () => {\n        switch (this.props.computerType) {\n            case \"dfa\":\n                return creatButtons(this.buttonsDfa)\n            case \"nfa\":\n            case \"nfa-eps\":\n                return creatButtons(this.buttonsNfa)\n            case \"tm\": \n                return creatButtons(this.buttonsNoRun)\n            case \"pda\":\n            case \"dpda\": \n                return creatButtons(this.buttonsByStackByState)\n            case \"mealy\":\n            case \"dmealy\":\n                return creatButtons(this.buttonsMealy)\n            case \"moore\":\n            case \"dmoore\":\n                return creatButtons(this.buttonsMoore)\n            default: \n                return creatButtons(this.buttonsTree)\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title={\"Запуск\"}>\n                <div>\n\n                    <div className=\"run-control__item run-control__input__row\">\n                        {\n                            this.state.editMode\n                                ?\n                                <TextField\n                                    label=\"Входная строка\"\n                                    size=\"small\"\n                                    value={this.state.input}\n                                    onChange={this.onInputChanged}\n                                    onBlur={() => {\n                                        this.state.input.length && this.setState({ editMode: false }, () => this.initializeComputer())\n                                    }}\n                                />\n                                :\n                                <div\n                                    className=\"run-control__input-value\"\n                                    onClick={() => {\n                                        this.setState({ editMode: true });\n                                    }}\n                                >\n                                    {\n                                        Array.from(this.state.input).map((char, index) => (\n                                            <span\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\n                                                key={index}\n                                            >\n                                                {char}\n                                            </span>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"run-control__result\">\n                            {\n                                this.state.result === undefined ? null :\n                                    this.state.result\n                                        ? <DoneIcon style={{ color: \"var(--commerce)\" }} />\n                                        : <CloseIcon style={{ color: \"var(--destructive)\" }} />\n                            }\n                        </div>\n\n                    </div>\n                    {this.getButtons()}\n\n\n                </div>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nconst itemName = \"saves\";\n\nexport default class BrowserSavesManager implements SavesManager {\n    getSavesMeta(): Promise<SaveMeta[]> {\n        let saves = BrowserSavesManager.getSaves();\n\n        return new Promise<SaveMeta[]>(function (resolve) {\n                resolve(saves);\n            }\n        )\n    }\n\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        let saves = BrowserSavesManager.getSaves();\n\n        let save = saves.find(save => save.id == saveMeta.id);\n\n        return new Promise(function (resolve) {\n            resolve(save || null);\n        });\n    }\n\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        const saves = BrowserSavesManager.getSaves();\n        const next_id = Math.max(...saves.map(save => save.id)) + 1;\n        const save_index = saves.findIndex(save => save.name == name);\n        const save = {id: 0, name: name, save: {graph: graph, type: type}};\n\n        if (save_index == -1) {\n            save.id = next_id;\n            saves.push(save);\n        } else {\n            save.id = saves[save_index].id;\n            saves[save_index] = save;\n        }\n\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        localStorage.setItem(itemName, saves_json);\n\n        return new Promise(function (resolve) {\n            resolve();\n        });\n    }\n\n    private static getSaves(): Save[] {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        let saves: Save[] = [];\n\n        try {\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\n        } catch (error) {\n            console.warn(\"Invalid saves in local storage: \" + error);\n            return [];\n        }\n\n        return saves;\n    }\n}","import {getCookie} from \"../utils\";\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\";\n\nexport function getAuthHeaders(): Headers {\n    const headers = new Headers();\n\n    headers.set(\"Authorization\", `Bearer ${getCookie(\"jwt\")}`);\n\n    return headers;\n}\n\nexport function getParams(headers: Headers): RequestInit {\n    return {\n        method: \"GET\",\n        headers: headers,\n    };\n}\n\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\n    headers.set(\"Content-Type\", \"application/json\");\n\n    return {\n        method: \"POST\",\n        headers: headers,\n        body: body,\n    };\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type GetSavesResponse = {\n    id: number,\n    name: string,\n}[];\n\nexport default function ApiGetSaves(onAuthFailed: () => void): Promise<GetSavesResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type GetSaveRequest = {\n    id: number,\n};\n\nexport type GetSaveResponse = {\n    id: number,\n    name: string,\n    data: string,\n};\n\nexport default function ApiGetSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${request.id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\n\nexport type SaveRequest = {\n    name: string,\n    data: string,\n};\n\nexport default function ApiSave(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const body = JSON.stringify(request);\n        const headers = getAuthHeaders();\n        const params = postParams(headers, body);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nimport ApiGetSaves, {GetSavesResponse} from \"../Api/apiGetSaves\";\nimport ApiGetSave, {GetSaveRequest} from \"../Api/apiGetSave\";\nimport ApiSave, {SaveRequest} from \"../Api/apiSave\";\n\nexport default class CloudSavesManager implements SavesManager {\n    private readonly onAuthFailed;\n\n    constructor(onAuthFailed: () => void) {\n        this.onAuthFailed = onAuthFailed;\n    }\n\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        const request: GetSaveRequest = {\n            id: saveMeta.id\n        };\n\n        let save = null;\n\n        try {\n            const response = await ApiGetSave(request, this.onAuthFailed);\n\n            save = {\n                id: response.id,\n                name: response.name,\n                save: JSON.parse(response.data),\n            };\n        } catch (error) {\n            console.error(error);\n        }\n\n        return save;\n    }\n\n    async getSavesMeta(): Promise<SaveMeta[]> {\n        let saves: GetSavesResponse = [];\n\n        try {\n            saves = await ApiGetSaves(this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n\n        return saves;\n    }\n\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        const serialized_save = JSON.stringify({\n            graph: graph,\n            type: type\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        const request: SaveRequest = {\n            name: name,\n            data: serialized_save\n        };\n\n        try {\n            await ApiSave(request, this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\nimport {computersInfo} from \"../../utils\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nimport \"./WelcomePopout.css\";\nimport {IconButton} from \"@mui/material\";\n\nexport interface WelcomePopoutProps {\n    open: boolean,\n    onClose: () => void,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n}\n\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\n    {\n        open,\n        onClose,\n        onAuthFailed,\n        changeComputerType\n    }) => {\n    const browserSavesManager = new BrowserSavesManager();\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onCreateTemplateClicked = (type: ComputerType) => {\n        changeComputerType(type, null);\n        onClose();\n    }\n\n    const onCreateEmptyClicked = (type: ComputerType) => {\n        changeComputerType(type, {nodes: [], edges: []});\n        onClose();\n    }\n\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await cloudSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await browserSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const updateCloudSavesMeta = async () => {\n        setLoadingCloudSavesMeta(true);\n\n        const savesMeta = await cloudSavesManager.getSavesMeta();\n        setCloudSavesMeta(savesMeta);\n\n        setLoadingCloudSavesMeta(false);\n    }\n\n    const updateBrowserSavesMeta = async () => {\n        const savesMeta = await browserSavesManager.getSavesMeta();\n        setBrowserSavesMeta(savesMeta);\n    }\n\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\n\n    useEffect(() => {\n        if (open) {\n            updateBrowserSavesMeta();\n            updateCloudSavesMeta();\n        }\n    }, [open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <p>Симулятор автоматов</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <Paper\n                    className=\"welcome-popout__body\"\n                    variant=\"outlined\"\n                >\n                    <List dense>\n                        {\n                            cloudSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в облаке\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            loadingCloudSavesMeta\n                                ?\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n                                </div>\n                                :\n                                cloudSavesMeta.length !== 0 ?\n                                    cloudSavesMeta.map(saveMeta => (\n                                        <ListItem\n                                            key={saveMeta.id}\n                                            secondaryAction={\n                                                <Button\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\n                                                >\n                                                    Открыть\n                                                </Button>\n                                            }\n                                        >\n                                            <ListItemText>\n                                                {saveMeta.name}\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))\n                                    : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в браузере\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                browserSavesMeta.map(saveMeta => (\n                                    <ListItem\n                                        key={saveMeta.id}\n                                        secondaryAction={\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\n                                            >\n                                                Открыть\n                                            </Button>\n                                        }\n                                    >\n                                        <ListItemText>\n                                            {saveMeta.name}\n                                        </ListItemText>\n                                    </ListItem>\n                                ))\n                                : null\n                        }\n\n                        <ListSubheader>\n                            Создать новый вычислитель\n                        </ListSubheader>\n                        {\n                            Object.entries(computersInfo).map(entry => (\n                                <ListItem\n                                    key={entry[1].name}\n                                    secondaryAction={\n                                        <div>\n                                            <Button\n                                                className=\"welcome-popout__create-empty-button\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать пустым\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать\n                                            </Button>\n                                        </div>\n                                    }\n                                >\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Paper>\n\n                <div className=\"welcome-popout__footer\">\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\n                    </IconButton>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default WelcomePopout;\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport \"./SavingPopout.css\";\n\nexport interface SavingPopoutProps {\n    open: boolean,\n    onClose: () => void,\n    isLogin: boolean,\n    onAuthFailed: () => void,\n\n    computerType: ComputerType,\n    graph: graph,\n}\n\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\n    {\n        open,\n        onClose,\n        isLogin,\n        onAuthFailed,\n        graph,\n        computerType\n    }) => {\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\n        value = value || savesOrigin;\n        setSavesOrigin(value);\n    }\n\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\n        setSaveName(saveMeta.name);\n    }\n\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSaveName(value);\n    }\n\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\n        switch (savesOrigin) {\n            case \"cloud\":\n                cloudSavesManager.save(saveName, graph, computerType);\n                break;\n            case \"browser\":\n                browserSavesManager.save(saveName, graph, computerType);\n                break;\n            default:\n                break;\n        }\n\n        updateNames();\n        onClose();\n    }\n\n    const updateNames = async () => {\n        setLoadingSavesMeta(true);\n\n        let savesMeta: SaveMeta[] = [];\n\n        switch (savesOrigin) {\n            case \"cloud\":\n                savesMeta = await cloudSavesManager.getSavesMeta();\n                break;\n            case \"browser\":\n                savesMeta = await browserSavesManager.getSavesMeta();\n                break;\n            default:\n                setSavesMeta([]);\n                break;\n        }\n\n        setSavesMeta(savesMeta);\n        setLoadingSavesMeta(false);\n    }\n\n    const updateDefaultOrigin = () => {\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\n    }\n\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\n    const [saveName, setSaveName] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (open) {\n            updateDefaultOrigin();\n            updateNames();\n        }\n    }, [open]);\n\n    useEffect(() => {\n        updateNames();\n    }, [savesOrigin]);\n\n    useEffect(() => {\n        setSaveName(\"\");\n    }, [savesOrigin, open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                <p>Сохранение</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <div className=\"saving-popout__body\">\n                    <div className=\"saving-popout__body__sidebar\">\n                        <ToggleButtonGroup\n                            orientation=\"vertical\"\n                            exclusive\n                            value={savesOrigin}\n                            onChange={onSavesOriginChanged}\n                        >\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n\n                    <div className=\"saving-popout__body__main\">\n                        <Paper\n                            className=\"saving-popout__body__main__paper\"\n                            variant=\"outlined\"\n                        >\n                            {\n                                loadingSavesMeta\n                                    ?\n                                    <div className=\"saving-popout__body__main__skeleton\">\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n                                    </div>\n                                    :\n                                    <List dense>\n                                        {\n                                            savesMeta.map(saveMeta => (\n                                                <ListItem\n                                                    key={saveMeta.id}\n                                                    disablePadding\n                                                >\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\n                                                        <ListItemText primary={saveMeta.name}/>\n                                                    </ListItemButton>\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                            }\n\n                        </Paper>\n                    </div>\n                </div>\n\n                <TextField\n                    className=\"saving-popout__save-name-input\"\n                    variant=\"standard\"\n                    size=\"small\"\n                    label=\"Имя сохранения\"\n                    value={saveName}\n                    onChange={onSaveNameChanged}\n                />\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onSaveClicked}\n                    >\n                        Сохранить\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        Отмена\n                    </Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default SavingPopout;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignInRequest = {\n    email: string,\n    password: string,\n};\n\nexport default function ApiSignIn(request: ApiSignInRequest): Promise<string> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signin\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"manual\",\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.text();\n                } else {\n                    reject();\n                }\n            })\n            .then(text => {\n                if (!text) {\n                    reject();\n                } else {\n                    resolve(text);\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./LoginPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignIn from \"../../../Api/apiSignIn\";\n\ninterface LoginPageProps {\n}\n\nconst LoginPage: FC<LoginPageProps> = ({}) => {\n    const authEndpoint = process.env.REACT_APP_BACKEND_BASE_URL + \"/auth\";\n\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onLoginClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n        };\n\n        await ApiSignIn(request)\n            .then(jwt => navigate(`/success-login?jwt=${jwt}`))\n            .catch(e => setError(`Не удалось войти в аккаунт (${e})`));\n    }\n\n    const onRegisterClicked = () => {\n        navigate('/register');\n    }\n\n    const onSignInWithExternalProviderClicked = (provider: string) => {\n        window.location.href = authEndpoint + `/external/signin?provider=${provider}`;\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Вход в аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}/>\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}/>\n\n                    <Button variant=\"contained\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Google\")}\n                    >\n                        Войти через аккаунт Google\n                    </Button>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Yandex\")}\n                    >\n                        Войти через аккаунт Яндекс\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default LoginPage;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignUpRequest = {\n    email: string,\n    password: string,\n    about: string,\n};\n\nexport default function ApiSignUp(request: ApiSignUpRequest): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signup\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (response.ok) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./RegisterPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignUp from \"../../../Api/apiSignUp\";\n\ninterface RegisterPageProps {\n}\n\nconst RegisterPage: FC<RegisterPageProps> = ({}) => {\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [about, setAbout] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setAbout(value);\n    }\n\n    const onRegisterClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n            about: about,\n        };\n\n        await ApiSignUp(request)\n            .then(() => navigate(\"/registered\"))\n            .catch(() => setError(\"Не удалось зарегистрировать нового пользователя\"));\n    }\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password, about]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Новый аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}\n                    />\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}\n                    />\n\n                    <TextField label=\"О себе\"\n                               type=\"text\"\n                               multiline\n                               rows={3}\n                               value={about}\n                               onChange={onAboutChanged}\n                    />\n\n                    <Button variant=\"contained\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisterPage;","import React from \"react\";\n\nimport {useNavigate} from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport \"./AppHeader.css\";\n\nexport interface AppHeaderProps {\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\n    onLogoutButtonClicked: () => void,\n    isLogin: boolean,\n}\n\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\n    {\n        onMenuButtonClicked,\n        onSaveButtonClicked,\n        onLogoutButtonClicked,\n        isLogin,\n    }) => {\n    const navigate = useNavigate();\n\n    const onSignInButtonClicked = () => {\n        navigate(\"/login\");\n    }\n\n    const onSignOutButtonClicked = () => {\n        document.cookie = \"token=; path=/; secure; max-age=-99999999\";\n        onLogoutButtonClicked();\n    }\n\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar variant=\"dense\">\n                <div className=\"app__header__left\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onMenuButtonClicked}\n                    >\n                        Меню\n                    </Button>\n\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onSaveButtonClicked}\n                    >\n                        Сохранить\n                    </Button>\n                </div>\n\n                <div className=\"app__header__right\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\n                    >\n                        {isLogin ? \"Выйти\" : \"Войти\"}\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import React, {useEffect, useState} from \"react\";\n\nimport {useSearchParams} from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport \"./SuccessLoginPage.css\";\nimport {Alert, Container, Stack, Typography} from \"@mui/material\";\n\nexport interface SuccessLoginPageProps {\n}\n\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({}) => {\n    const [error, setError] = useState<string | null>(null);\n\n    const updateAuth = () => {\n        const jwt = searchParams.get('jwt');\n\n        if (!jwt) {\n            setError(\"Не удалось войти в аккаунт\");\n            return;\n        }\n\n        console.log(`Jwt = ${jwt}`);\n\n        document.cookie = `jwt=${jwt}; path=/; secure; max-age=2592000`;\n        window.location.href = \"/\";\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, []);\n\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n\n    return (\n        <div className=\"success-login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Входим в аккаунт...</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default SuccessLoginPage;","import React, {FC} from \"react\";\nimport \"./RegisteredPage.css\";\nimport {Button, Container, Stack, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface RegisteredPageProps {\n}\n\nconst RegisteredPage: FC<RegisteredPageProps> = ({}) => {\n\n    const navigate = useNavigate();\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    return (\n        <div className=\"registered-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>\n                        Новый аккаунт создан\n                    </Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisteredPage;","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    // DataSet,\n    Network,\n    Options,\n    Data, \n} from \"vis-network/peer\";\nimport { DataSet } from \"vis-data/peer\";\nimport { Timeline } from \"vis-timeline/peer\";\n// vis-network/standalone/esm/vis-network\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\n// import { Timeline } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const VisNetwork = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        // interaction: {\n        //     dragView: false,\n        //     keyboard: false,\n        //     dragNodes: false,\n        // },\n        layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"circle\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n  // DOM element where the Timeline will be attached\n  const [container, _co] = useState(useRef<HTMLDivElement>(null)) ;\n//   document.getElementById(\"visualization\");\n\n  // Create a DataSet (allows two way data-binding)\n  const items = new DataSet([\n    { id: 1, content: \"item 1\", start: \"2014-04-20\" },\n    { id: 2, content: \"item 2\", start: \"2014-04-14\" },\n    { id: 3, content: \"item 3\", start: \"2014-04-18\" },\n    { id: 4, content: \"item 4\", start: \"2014-04-16\", end: \"2014-04-19\" },\n    { id: 5, content: \"item 5\", start: \"2014-04-25\" },\n    { id: 6, content: \"item 6\", start: \"2014-04-27\", type: \"point\" }\n  ]);\n\n  // Configuration for the Timeline\n  const timeLineOptions = {};\n\n  // Create a Timeline\n\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n    const timeline = React.createRef<Timeline | null>();\n    // const timeline\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            // timeline = new Timeline(container, items, options)\n            // timeline.current = new Timeline(container.current, items, timeLineOptions);\n\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"network\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useEffect } from 'react';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const NonDetermenisticModal = (props: { isNonDetermenistic: boolean, setIsNonDetermenistic: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonDetermenistic) {\n            setOpen(props.isNonDetermenistic)\n            props.setIsNonDetermenistic(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Недетерменизм\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n\nexport const NonMinimizableModal = (props: { isNonMinimizable: boolean, setIsNonMinimizable: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonMinimizable) {\n            setOpen(props.isNonMinimizable)\n            props.setIsNonMinimizable(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Невозможно минимизровать\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\nimport { network } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const TreeHistory = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        interaction: {\n            // dragView: false,\n            keyboard: false,\n            dragNodes: true,\n        },\n        layout: {\n         hierarchical: {\n        //  direction: directionInput,\n         treeSpacing:200,\n         direction: 'LR',\n         parentCentralization: false,\n         sortMethod: 'directed',\n         shakeTowards: 'roots'\n        //  directed\n      },\n    },\n        // layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"box\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"vnc\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import React, { ReactNode } from 'react';\nimport \"./App.css\"\nimport {\n    ComputerType,\n    edge,\n    graph,\n    histNode,\n    node\n} from \"./react-graph-vis-types\";\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\nimport {\n    computersInfo, decorateGraph, elementsToGraph, getNodeNamePrefix, getTransitionsTitles,\n    graphToElements, transitionsToLabel\n} from \"./utils\";\nimport RunControl from \"./Components/RunControl/RunControl\";\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\nimport Paper from \"@mui/material/Paper\";\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\nimport {Route, Routes, HashRouter} from \"react-router-dom\";\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./Components/Pages/RegisterPage/RegisterPage\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport { TransitionParams } from \"./Logic/IGraphTypes\";\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\nimport RegisteredPage from \"./Components/Pages/RegisteredPage/RegisteredPage\";\nimport { VisNetwork } from './VisNetwork';\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Output } from './Logic/Types';\nimport { NonDetermenisticModal, NonMinimizableModal } from './ErrorModal';\nimport { TreeHistory } from './TreeHistory';\n// import {ContextMenu, MenuItem as CotextMenuItem, ContextMenuTrigger} from \"react-contextmenu\";\n\ninterface appProps {\n}\n\nexport type Elements = {\n    nodes: DataSet<node, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\nexport type HistElements = {\n    nodes: DataSet<histNode, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\ninterface appState {\n    computerType: null | ComputerType,\n    selectedNode: node | null,\n    selectedEdge: edge | null,\n    inEdgeMode: boolean,\n    elements: Elements,\n    treeElems: HistElements,\n    options: any,\n    initiallyStabilized: boolean,\n    popout: ReactNode | null,\n    savePopoutOpen: boolean,\n    welcomePopoutOpen: boolean,\n    isLogin: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined,\n    wasComputerResetted: boolean,\n    byEmptyStack: boolean,\n    errIsNonDetermenistic: boolean,\n    errIsNonMinimizable: boolean,\n    showTree: boolean,\n    History: (() => JSX.Element)\n}\n\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\n\nexport const computerAction = {\n    init: (() => { }),\n    nfaToDfa: (() => { }),\n    minimizeDfa: (() => { }),\n    mooreToMealy: (() => { }),\n    mealyToMoore: (() => { })\n}\n\nexport const controlAction = {\n    changerByStack: (() => { }),\n    run: (() => { }),\n    step: (() => { }),\n    reset: (() => { }),\n}\n\n// export interface errorAction {\n//     isNonDetermenistic: boolean,\n//     setIsNonDetermenistic: (v: boolean) => void\n// }\n// export const errorAction =  {\n//     isNonDetermenistic: false,\n//     setIsNonDetermenistic: (v: boolean): void => { errorAction.isNonDetermenistic = v }\n// }\n\n\ninterface RibbonProps {\n    computerType: null | ComputerType,\n    wasComputerResetted: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined\n    memRef: React.RefObject<HTMLDivElement>\n}\n\nexport const Ribbon = (props: RibbonProps) => {\n    return (\n        props.computerType === \"tm\" && props.wasComputerResetted\n            ?\n            <div className=\"app__mem_ribbon\">\n                {\n                    props.mem?.map((value, index) =>\n                        <div\n                            className=\"app__mem_cell\"\n                            style={{ border: `${index === props.ptr ? \"#0041d0\" : \"#000000\"} 2px solid` }}\n                        >\n                            {Math.abs(Math.abs(index) - Math.abs(props.ptr!)) <= 5\n                                ? <div ref={props.memRef} />\n                                : <div />\n                            }\n                            {value}\n                            {props.memRef?.current?.scrollIntoView({ behavior: 'smooth' })}\n                        </div>\n                    )\n                }\n            </div>\n            : <div />\n    )\n}\n\nclass App extends React.Component<appProps, appState> {\n\n    memRef = React.createRef<HTMLDivElement>();\n    network = React.createRef<Network | null>();\n    networkTST = React.createRef<Network | null>();\n\n    constructor(props: appProps) {\n        super(props);\n\n        this.state = {\n            computerType: null,\n\n            selectedNode: null,\n            selectedEdge: null,\n            inEdgeMode: false,\n            elements: { nodes: new DataSet<node>(), edges: new DataSet<edge>() },\n            treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() },\n            options: {\n                edges: {\n                    smooth: {\n                        enabled: true,\n                        type: \"discrete\",\n                        roundness: 0.5\n                    },\n                    length: 200\n                },\n                nodes: {\n                    shape: \"box\",\n                    font: \"18px Roboto black\",\n                    labelHighlightBold: false,\n                    widthConstraint: 40,\n                    color: \"red\",\n                    heightConstraint: 40\n                },\n                physics: {\n                    enabled: false\n                }\n            },\n            initiallyStabilized: false,\n            popout: null,\n            savePopoutOpen: false,\n            welcomePopoutOpen: false,\n            isLogin: true,\n            mem: undefined,\n            ptr: undefined,\n            wasComputerResetted: false,\n            byEmptyStack: false,\n\n            errIsNonDetermenistic: false,\n            errIsNonMinimizable: false,\n\n            showTree: false,\n            History: () => ( <div></div> ),\n            // errorAction: {\n            //     isNonDetermenistic: false,\n            //     setIsNonDetermenistic: (v: boolean): void => { this.setState({ errorAction.isNonDetermenistic = v}) }\n            // }\n        };\n    }\n\n    setIsNonDetermenistic = (v: boolean) => this.setState({ errIsNonDetermenistic: v })\n\n    setIsNonMinimizable = (v: boolean) => this.setState({ errIsNonMinimizable: v })\n\n    componentDidMount() {\n        this.updateGraph();\n        // this.subscribeToShortcuts();\n        this.openWelcomePopout();\n    }\n\n    lastNodeId = 0;\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    subscribeToShortcuts = () => {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            // if (event.key === \"Shift\" && !this.state.inEdgeMode) {\n            //     this.enterEdgeMode();\n            // }\n            if (event.key === \"s\" && event.ctrlKey) {\n                event.preventDefault();\n                this.openSavePopout();\n            }\n        })\n\n        // document.addEventListener(\"keyup\", (event: KeyboardEvent) => {\n        //     if (event.key === \"Shift\" && this.state.inEdgeMode) {\n        //         this.leaveEdgeMode();\n        //     }\n        // })\n    }\n\n    openSavePopout = () => {\n        this.setState({ savePopoutOpen: true });\n    }\n\n    closeSavePopout = () => {\n        this.setState({ savePopoutOpen: false });\n    }\n\n    openWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: true });\n    }\n\n    closeWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: false });\n    }\n\n    login = () => {\n        this.setState({ isLogin: true });\n    }\n\n    logout = () => {\n        this.setState({ isLogin: false });\n    }\n\n    changePopout = (popout: ReactNode | null) => {\n        this.setState({ popout: popout });\n    }\n\n\n    updateGraph = (): void => {\n        decorateGraph(this.state.elements, this.state.computerType)\n    }\n\n    changeNodeLabel = (id: number, label: string): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                const lableTokens =\n                    label\n                        .split('')\n                        .filter(x => x !== \" \" && x !== \"\\n\")\n                        .join('')\n                        .split('|')\n                const output = lableTokens[1] !== undefined ? lableTokens[1] : \"\"\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    label: label,\n                    output: output\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isAdmit: isAdmit\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isInitial: isInitial\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.isCurrent) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: false\n                })\n            }\n        })\n        this.state.elements.nodes.forEach((node) => {\n            if (ids.includes(node.id)) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: isCurrent\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    createNode = (e: { pointer: { canvas: { x: any; y: any; }; }; }) => {\n        this.lastNodeId++;\n        const node = {\n            id: this.lastNodeId,\n            label: 'S' + (this.lastNodeId),\n            x: e.pointer.canvas.x,\n            y: e.pointer.canvas.y,\n            isAdmit: false,\n            isInitial: false,\n            isCurrent: false,\n        }\n        this.state.elements.nodes.add(node);\n    }\n\n    lastHistNodeId = 0\n\n    createHistNode = (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => {\n        this.lastHistNodeId++;\n\n\n        const border = isInitial ? \"#0041d0\" : isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        const node: histNode = {\n            id: this.lastHistNodeId,\n            idd,\n            label,\n            isAdmit,\n            isInitial,\n            isCurrent,\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            }\n        }\n\n        this.state.treeElems.nodes.add(node);\n    }\n\n    createHistEdge = (from: number, to: number, by: any) => {\n        const transitions = new Set([[{ title: by }]])\n\n        this.state.treeElems.edges.add({\n            from: from,\n            to: to,\n            transitions: transitions,\n            label: by\n            // this.state.computerType !== 'mealy' && this.state.computerType !== 'dmealy'\n                // ? transitionsToLabel(transitions, this.state.computerType)\n                // : by\n                // transitionsToLabel(transitions, this.state.computerType)\n        })\n    }\n\n    historyEndRef = React.createRef<HTMLDivElement>();\n\n    getLastHistNodeId = () => this.lastHistNodeId\n\n    resetHistTree = () => {\n        for (let i = 0; i <= this.lastHistNodeId; i++) {\n            this.state.treeElems.nodes.remove(i)\n        }\n        this.state.treeElems.edges.forEach((e) => this.state.treeElems.edges.remove(e.id!))\n        this.lastHistNodeId = 0;\n        // this.state.treeElems.nodes.remove()\n        // this.state.treeElems.edges.clear()\n        // this.setState({\n        //     treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() }\n        // })\n    }\n\n    selectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        const selectedNodes = this.state.elements.nodes.get(nodesIDs);\n        this.setState({ selectedNode: selectedNodes[0] });\n    }\n\n\n    deselectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        if (nodesIDs.length === 0) {\n            this.setState({ selectedNode: null });\n        }\n    }\n\n    deleteNode = (id: number): void => {\n        this.state.elements.nodes.remove(id)\n\n        let rmEdges: string[] = []\n        this.state.elements.edges.forEach((edge) => {\n            if (edge.from === id || edge.to === id) {\n                rmEdges.push(edge.id!)\n            }\n        })\n        this.state.elements.edges.remove(rmEdges)\n    }\n\n    selectEdge = (e: { edges: any; }): void => {\n        const edgesIDs: number[] = e.edges;\n        const selectedEdges = this.state.elements.edges.get(edgesIDs);\n        this.setState({ selectedEdge: selectedEdges[0] });\n        console.log('click1  = selectEdge')\n    }\n\n    deselectEdge = (e: { edges: number[]; }): void => {\n        const edgesIDs: number[] = e.edges;\n        if (edgesIDs.length === 0) {\n            this.setState({ selectedEdge: null });\n        }\n    }\n\n\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\n        this.state.elements.edges.update({\n            id: id,\n            label: transitionsToLabel(transitions, this.state.computerType),\n            transitions: transitions\n        })\n    }\n\n    deleteEdge = (id: string): void => {\n        this.state.elements.edges.remove(id)\n    }\n\n    updMem = (mem: string[], ptr: number): void => {\n        this.setState({ mem: mem, ptr: ptr });\n    }\n\n    NFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.nfaToDfa}\n                    >\n                        {\"НКА->ДКА\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    treeVisible = () => {\n        this.setState({ showTree: !this.state.showTree})\n        return !this.state.showTree\n    }\n\n    treeContextInfo = () => (this.state.showTree ? \"Закрыть\" : \"Открыть\") + \" дерево вычислений\"\n\n    DFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.minimizeDfa}\n                    >\n                        {\"Минимизровать\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MealyContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mealyToMoore}\n                    >\n                        {\"Автомат Мура\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MooreContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mooreToMealy}\n                    >\n                        {\"Мили\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    PDAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.changerByStack}\n\n                    >\n                        {this.state.byEmptyStack ? \"По стеку\" : \"По состоянию\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    AnotherContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    ContextMenu = (computerType: null | ComputerType) => {\n        switch (computerType) {\n            case \"nfa\":\n            case \"nfa-eps\": {\n                return this.NFAContextMenu\n            }\n            case \"dfa\": {\n                return this.DFAContextMenu\n            }\n            case \"mealy\":\n            case \"dmealy\": {\n                return this.MealyContextMenu\n            }\n            case \"moore\":\n            case \"dmoore\": {\n                return this.MooreContextMenu\n            }\n            case \"pda\":\n            case \"dpda\": {\n                return this.PDAContextMenu\n            }\n            default: {\n                return this.AnotherContextMenu\n            }\n        }\n    }\n\n\n\n    render() {\n        return (\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/login\" element={\n                        <LoginPage/>\n                    }/>\n                    <Route path=\"/register\" element={\n                        <RegisterPage/>\n                    }/>\n                    <Route path=\"/registered\" element={\n                        <RegisteredPage/>\n                    }/>\n                    <Route path=\"/success-login\" element={\n                        <SuccessLoginPage/>\n                    }/>\n                    <Route path=\"/\" element={\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\n                            <div className=\"app\">\n                                <WelcomePopout\n                                    open={this.state.welcomePopoutOpen}\n                                    onClose={this.closeWelcomePopout}\n                                    onAuthFailed={this.logout}\n                                    changeComputerType={(computerType, graph: graph | null) => {\n\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n\n                                        console.log(defaultGraph);\n                                        console.log(defaultGraph[\"nodes\"]);\n                                        graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                        this.lastNodeId = defaultGraph.nodes.length;\n                                        this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                            , () => this.updateGraph()\n                                        );\n                                    }}\n                                />\n\n                                {this.state.popout}\n\n                                <SavingPopout open={this.state.savePopoutOpen}\n                                    onClose={this.closeSavePopout}\n                                    isLogin={this.state.isLogin}\n                                    onAuthFailed={this.logout}\n                                    graph={elementsToGraph(this.state.elements)}\n                                    computerType={this.state.computerType!} />\n                                <div className=\"history-container\">\n                                    {this.state.History()}\n                                </div>\n                                <div className=\"hint-container\">\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Ctrl+S — сохранить автомат\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Удерживайте Ctrl чтобы создать ребро\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Двойное нажатие чтобы создать вершину\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        ПКМ для открытия контекстного меню\n                                    </Paper>\n                                </div>\n                                <NonDetermenisticModal\n                                    isNonDetermenistic={this.state.errIsNonDetermenistic}\n                                    setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                />\n                                <NonMinimizableModal\n                                    isNonMinimizable={this.state.errIsNonMinimizable}\n                                    setIsNonMinimizable={this.setIsNonMinimizable}\n                                />\n                                <Ribbon\n                                    computerType={this.state.computerType}\n                                    wasComputerResetted={this.state.wasComputerResetted}\n                                    mem={this.state.mem}\n                                    ptr={this.state.ptr}\n                                    memRef={this.memRef}\n                                />\n\n                                <AppHeader\n                                    onMenuButtonClicked={this.openWelcomePopout}\n                                    onSaveButtonClicked={this.openSavePopout}\n                                    onLogoutButtonClicked={this.logout}\n                                    isLogin={this.state.isLogin}\n                                />\n\n\n                                <div className=\"field__container\">\n                                    <VisNetwork\n                                        nodes={this.state.elements.nodes}\n                                        edges={this.state.elements.edges}\n                                        data={this.state.elements}\n                                        onDoubleClick={this.createNode}\n                                        onClick1={this.selectEdge}\n                                        onClick2={this.selectNode}\n                                        onClick3={this.deselectNode}\n                                        onClick4={this.deselectEdge}\n                                        network={this.network}\n                                        contextMenu={this.ContextMenu(this.state.computerType)}\n                                    />\n                                </div>\n\n                                {this.state.showTree ?\n                                    <div className=\"eval-tree\">\n                                        <TreeHistory\n                                            nodes={this.state.treeElems.nodes}\n                                            edges={this.state.treeElems.edges}\n                                            data={this.state.treeElems}\n                                            onDoubleClick={this.createNode}\n                                            onClick1={this.selectEdge}\n                                            onClick2={this.selectNode}\n                                            onClick3={this.deselectNode}\n                                            onClick4={this.deselectEdge}\n                                            network={this.networkTST}\n                                            contextMenu={this.ContextMenu(this.state.computerType)}\n                                        />\n                                    </div>\n                                    : <div />}\n                                <div className=\"app__right-menu\">\n                                    <NodeControl\n                                        node={this.state.selectedNode}\n                                        changeNodeLabel={this.changeNodeLabel}\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\n                                        changeStateIsInitial={this.changeStateIsInitial}\n                                        deleteNode={this.deleteNode}\n                                        reinitComputer={computerAction.init}\n\n                                    />\n                                    <EdgeControl\n                                        edge={this.state.selectedEdge}\n                                        changeEdgeTransitions={this.changeEdgeTransition}\n                                        deleteEdge={this.deleteEdge}\n                                        computerType={this.state.computerType}\n                                        reinitComputer={computerAction.init}\n                                    />\n\n                                    <RunControl\n                                        updMem={this.updMem}\n                                        elements={this.state.elements}\n                                        treeElems={this.state.treeElems}\n                                        createHistNode={this.createHistNode}\n                                        byEmptyStack={this.state.byEmptyStack}\n                                        createHistEdge={this.createHistEdge}\n                                        getLastHistNodeId={this.getLastHistNodeId}\n                                        resetHistTree={this.resetHistTree}\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\n                                        network={this.network}\n                                        changerStack={controlAction.changerByStack}\n                                        setInit={(f: () => void) => computerAction.init = f}\n                                        setNfaToDfa={(f: () => void) => computerAction.nfaToDfa = f}\n                                        setMinimizeDfa={(f: () => void) => computerAction.minimizeDfa = f}\n                                        setMooreToMealy={(f: () => void) => computerAction.mooreToMealy = f}\n                                        setMealyToMoore={(f: () => void) => computerAction.mealyToMoore = f}\n                                        updateElements={(elements: Elements) => this.setState({ elements: elements }, () => this.updateGraph())}\n                                        setComputerType={(type: null | ComputerType) => this.setState({ computerType: type })}\n                                        setResettedStatus={(status: boolean) => this.setState({ wasComputerResetted: status })}\n                                        setByEmptyStack={(byEmptyStack: boolean) => this.setState({ byEmptyStack: byEmptyStack })}\n                                        setChangerByStack={(f: () => void) => controlAction.changerByStack = f}\n                                        setRun={(f: () => void) => controlAction.run = f}\n                                        setStep={(f: () => void) => controlAction.step = f}\n                                        setReset={(f: () => void) => controlAction.reset = f}\n                                        setHistory={(jsx: () => JSX.Element) => this.setState({ History: jsx }, \n                                            () => this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' }) )}\n                                        historyEndRef={this.historyEndRef}\n                                        setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                        setIsNonMinimizable={this.setIsNonMinimizable}\n                                        treeContextInfo={this.treeContextInfo}\n                                        treeVisible={this.treeVisible}\n                                    />\n\n                                </div>\n\n                            </div>\n                        </ComputerTypeContext.Provider>\n                    }/>\n                </Routes>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default App;","import React, {createRef, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","\"use strict\";\nexports.__esModule = true;\nvar Move;\n(function (Move) {\n    Move[Move[\"L\"] = 0] = \"L\";\n    Move[Move[\"R\"] = 1] = \"R\";\n})(Move = exports.Move || (exports.Move = {}));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar NonDeterministic = /** @class */ (function (_super) {\n    __extends(NonDeterministic, _super);\n    function NonDeterministic() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonDeterministic';\n        Object.setPrototypeOf(_this, NonDeterministic.prototype);\n        return _this;\n    }\n    return NonDeterministic;\n}(Error));\nexports.NonDeterministic = NonDeterministic;\nvar NonMinimizable = /** @class */ (function (_super) {\n    __extends(NonMinimizable, _super);\n    function NonMinimizable() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonMinimizable';\n        Object.setPrototypeOf(_this, NonMinimizable.prototype);\n        return _this;\n    }\n    return NonMinimizable;\n}(Error));\nexports.NonMinimizable = NonMinimizable;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar lodash_1 = require(\"lodash\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar PDA = /** @class */ (function (_super) {\n    __extends(PDA, _super);\n    function PDA(graph, startStatements, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.stack = new Stack_1.Stack();\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.haveEpsilon = function () {\n            return _this.epsId !== undefined;\n        };\n        // isDeterministic0(): boolean {\n        //     let ret = true\n        //     this.matrix.forEach(value => {\n        //         value.forEach(value1 => {\n        //             if (value1.length > 1) {\n        //                 let tmp: statementCell = value1[0]\n        //                 value1.forEach((value2, index) => {\n        //                     if (index !== 0 && tmp.stackDown === undefined && value2.stackDown || index !== 0 && tmp.stackDown === value2.stackDown ) {\n        //                         ret = false\n        //                     }\n        //                 })\n        //             }\n        //         })\n        //     })\n        //     return ret && (!this.haveEpsilon())\n        // }\n        _this.getStartStatements = function () {\n            console.log('this.startStatements');\n            console.log(_this.curPosition);\n            console.log('this.startStatements');\n            var curs = _this.curPosition.map(function (v) {\n                var _a;\n                var stmt = v.stmt;\n                stmt.stack = (_a = v.stack) === null || _a === void 0 ? void 0 : _a.getStorage();\n                return stmt;\n            });\n            return curs;\n        };\n        _this.byEmptyStackAdmt = function (isAdmt) {\n            _this.admitByEmptyStack = isAdmt;\n        };\n        _this.treeHist = [];\n        _this.pdaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            _this.treeHist = ret.tree ? ret.tree : [];\n            console.log(\"STEP stck: \");\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return console.log(value1.stack); }); });\n            console.log(\"STEP admit: \");\n            console.log(ret.isAdmit);\n            return ret;\n        };\n        _this.pdaRun = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var histUnit = [];\n            var histTrace = [];\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var last = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: last.byEpsPred, byLetter: last.byLetter, byEpsAfter: last.byEpsAfter });\n            var ret = {\n                nodes: last.nodes,\n                counter: last.counter,\n                isAdmit: last.isAdmit,\n                history: last.history,\n                histTrace: histTrace\n            };\n            return ret;\n        };\n        _this.step = _this.pdaStep;\n        _this.run = _this.pdaRun;\n        // (): Step => {\n        //     return { counter: 0, history: [], isAdmit: false, nodes: [] }\n        // }\n        // this.pdaRun\n        _this._step = function (counter, tr, histori, unitHsit, histTrace) {\n            var byEpsPred = [];\n            var byEpsAfter = [];\n            var byLetter = [];\n            var newPosSet = [];\n            var updCurPos = function () {\n                _this.curPosition = [];\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\n                newPosSet = [];\n            };\n            var epsStep = function () {\n                _this.curPosition.forEach(function (value) {\n                    var _a;\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack, unitHsit);\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var letterSter = function () {\n                _this.curPosition.forEach(function (value) {\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack, unitHsit);\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var rmRepeations = function () {\n                var htable = new Map();\n                var positions = [];\n                _this.curPosition.forEach(function (value) {\n                    var v = {\n                        stmt: value.stmt, stack: value.stack\n                    };\n                    if (htable.get(JSON.stringify(v)) === undefined) {\n                        positions.push(value);\n                        htable.set(JSON.stringify(v), value);\n                    }\n                });\n                _this.curPosition = [];\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\n            };\n            if (_this.epsId !== undefined) {\n                epsStep();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsPred.push(v); });\n            }\n            if (counter < _this.input.length) {\n                letterSter();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byLetter.push(v); });\n                if (_this.epsId !== undefined) {\n                    epsStep();\n                    updCurPos();\n                    rmRepeations();\n                    _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsAfter.push(v); });\n                }\n            }\n            else {\n                rmRepeations();\n                // console.log(\":::::::::::::::::::\")\n                // this.curPosition.forEach(value => {\n                //     console.log(value.stmt)\n                //     console.log(value.stack)\n                // })\n                // console.log(\":::::::::::::::::::\")\n                _this.treeHist.push(unitHsit);\n                histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n                return {\n                    nodes: _this.toNodes(_this.curPosition),\n                    counter: counter,\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\n                    history: histori,\n                    tree: _this.treeHist,\n                    byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                    histTrace: []\n                };\n            }\n            rmRepeations();\n            // console.log(\":::::::::::::::::::\")\n            // this.curPosition.forEach(value => {\n            //     console.log(value.stmt)\n            //     console.log(value.stack)\n            // })\n            // console.log(\":::::::::::::::::::\")\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\n            counter++;\n            _this.treeHist.push(unitHsit);\n            histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n            return {\n                nodes: _this.toNodes(_this.curPosition),\n                counter: counter,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                history: histori,\n                tree: _this.treeHist,\n                byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                histTrace: []\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.treeHist = [];\n            _this.startStatements.forEach(function (value) {\n                var stack = new Stack_1.Stack();\n                stack.push(Computer_1.BOTTOM);\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id),\n                    stack: stack\n                });\n            });\n        };\n        // move to Nfa\n        _this.nfaToDfa = function () {\n            var nextStepPosition = function (position, by) {\n                return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) { return ({ stmt: v }); });\n            };\n            var _nextStepPositions = function (positions, by) {\n                var acc = [];\n                positions.map(function (v) {\n                    return nextStepPosition(v, by);\n                }).forEach(function (ps) {\n                    return ps.forEach(function (p) { return acc.push(p); });\n                });\n                return acc;\n            };\n            var nextStepPositions = function (positions, by) {\n                var afterEps = function (positions) {\n                    if (_this.epsId === undefined) {\n                        return positions;\n                    }\n                    var acc = [];\n                    var EPStack = new Stack_1.Stack();\n                    EPStack.push(Computer_1.EPS);\n                    positions.forEach(function (position) {\n                        var tmp = _this.epsilonStep(position.stmt.idLogic, Computer_1.EPS, EPStack, []);\n                        if (tmp !== undefined) {\n                            acc.push(tmp);\n                        }\n                    });\n                    var flatted = [];\n                    acc.forEach(function (ps) { return ps.forEach(function (p) { return flatted.push(p); }); });\n                    return flatted;\n                };\n                return afterEps(_nextStepPositions(afterEps(positions), by));\n            };\n            var pop = function () { return stack.shift(); };\n            var push = function (v) {\n                stack.push(v);\n            };\n            var stack = [];\n            var table = [];\n            var set = new ImSet();\n            var startPos = _this.curPosition;\n            _this.restart();\n            push(startPos);\n            var _loop_1 = function () {\n                var head = pop();\n                var acc = [];\n                if (head === undefined || head.length === 0) {\n                    return \"break\";\n                }\n                if (set.has(head)) {\n                    return \"continue\";\n                }\n                set.add(head.map(function (v) { return ({\n                    stmt: {\n                        id: v.stmt.id,\n                        idLogic: v.stmt.idLogic,\n                        isAdmit: v.stmt.isAdmit\n                    },\n                    stack: undefined\n                }); }));\n                _this.alphabet.forEach(function (value) {\n                    if (value !== _this.epsId) {\n                        var to = nextStepPositions(head, value);\n                        var _to = to.map(function (v) { return ({\n                            stmt: {\n                                id: v.stmt.id,\n                                idLogic: v.stmt.idLogic,\n                                isAdmit: v.stmt.isAdmit\n                            },\n                            stack: undefined\n                        }); });\n                        acc.push(_to);\n                        if (to.length > 0 && !set.has(to) && !set.has(_to)) {\n                            push(_to);\n                        }\n                    }\n                });\n                table.push(acc);\n            };\n            while (stack.length > 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n            var _edges = [];\n            table.forEach(function (ps, from) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    if (tr !== _this.epsId && ps[tr].length !== 0) {\n                        console.log(ps[tr]);\n                        console.log(from, set.getIter(ps[tr]));\n                        _edges.push({\n                            from: from,\n                            to: set.getIter(ps[tr]),\n                            transitions: new Set([[{ title: letter }]])\n                        });\n                    }\n                });\n            });\n            var nodes = set.getStorage().map(function (v) { return ({\n                id: set.getIter(v),\n                isAdmit: _this.haveAdmitting(v)\n            }); });\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                for (var j = i; j < _edges.length; j++) {\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\n                        delta++;\n                    }\n                }\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n                i += delta - 1;\n            }\n            return { nodes: nodes, edges: edges };\n        };\n        //https://www.usna.edu/Users/cs/wcbrown/courses/F17SI340/lec/l22/lec.html\n        _this.minimizeDfa = function () {\n            _this.restart();\n            var startId = _this.curPosition[0].stmt.idLogic;\n            var cutBy = function (by) {\n                var acc = [];\n                _this.matrix.forEach(function (_, it) { return acc.push(_this.cellMatrix(it, by)[0]); });\n                return acc;\n            };\n            var _lookUp = function (group) { return function (id) {\n                return group[id];\n            }; };\n            var _getJump = function (table) { return function (by) { return function (id) {\n                return table[by][id];\n            }; }; };\n            var createTableT = function (zero) {\n                var lookUp = _lookUp(zero);\n                var table = [];\n                _this.alphabet.forEach(function (tr) {\n                    var acc = [];\n                    var cutted = cutBy(tr);\n                    cutted.forEach(function (cell) {\n                        acc.push(lookUp(cell.idLogic));\n                    });\n                    table.push(acc);\n                });\n                return table;\n            };\n            var _updateGroups = function (zero) { return function (groups) { return function (getJump) { return function (group) {\n                var jmpGrp = getJump(group[0].node.idLogic).number;\n                var newGrp = [];\n                var newNumber = groups.length + 1;\n                var toRm = [];\n                group.forEach(function (value, index) {\n                    if (getJump(value.node.idLogic).number !== jmpGrp) {\n                        value.number = newNumber;\n                        toRm.push(value.node.idLogic);\n                        newGrp.push(value);\n                    }\n                });\n                for (var i = 0; i < group.length; i++) {\n                    if (toRm.includes(group[i].node.idLogic)) {\n                        group.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (newGrp.length > 0) {\n                    groups.push(newGrp);\n                    return { fst: group, snd: newGrp };\n                }\n                return { fst: [], snd: [] };\n            }; }; }; };\n            var stack = [];\n            var pop = function () { return stack.shift(); };\n            var push = function (v) { return stack.push(v); };\n            var zero = [];\n            var first = [];\n            var second = [];\n            _this.statements.forEach(function (statement) {\n                var element = { number: -1, node: { idLogic: -1, id: -1, isAdmit: false } };\n                if (statement.isAdmit) {\n                    element = { number: 1, node: statement };\n                    first.push(element);\n                }\n                else {\n                    element = { number: 2, node: statement };\n                    second.push(element);\n                }\n                zero.push(element);\n            });\n            var byEveryLetter = _this.matrix.reduce(function (acc, line) {\n                return acc && line.reduce(function (accLine, cells) { return accLine && cells.length > 0; }, acc);\n            }, true);\n            if (first.length < 1 || !byEveryLetter) {\n                console.log('CATHTHT');\n                throw new Exceptions_1.NonMinimizable();\n            }\n            // плюс если есть пробелы в таблице!\n            var groups = [];\n            groups.push(first);\n            groups.push(second);\n            var table = createTableT(zero);\n            _this.alphabet.forEach(function (tr) {\n                groups.forEach(function (stmt) { return push(stmt); });\n                var getJump = _getJump(table)(tr);\n                var updateGroups = _updateGroups(zero)(groups)(getJump);\n                while (stack.length > 0) {\n                    var head = pop();\n                    if (head === undefined) {\n                        break;\n                    }\n                    var newGrp = updateGroups(head);\n                    if (newGrp.fst.length > 0) {\n                        push(newGrp.fst);\n                        push(newGrp.snd);\n                    }\n                }\n            });\n            var toPositions = function (group) { return group.map(function (g) { return ({ stmt: g.node }); }); };\n            var grpAfterJmp = function (group, by) { return _getJump(table)(by)(group[0].node.idLogic).number; };\n            var nodes = groups.map(function (group) { return ({ id: group[0].number, isAdmit: _this.haveAdmitting(toPositions(group)) }); });\n            var edges = groups.reduce(function (acc, g) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    acc.push({\n                        from: g[0].number,\n                        to: grpAfterJmp(g, tr),\n                        transitions: new Set([[{ title: letter }]])\n                    });\n                });\n                return acc;\n            }, []);\n            console.log(nodes);\n            var startGrp = groups.filter(function (g) {\n                var gIds = g.map(function (v) { return v.node.idLogic; });\n                return gIds.includes(startId);\n            });\n            var start = nodes[startGrp[0][0].number - 1];\n            return { graphcore: { nodes: nodes, edges: edges }, start: start };\n        };\n        _this.admitByEmptyStack = byEmpty;\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\n        // this.createMatrix()\n        // this.matrix.forEach(value => {\n        //     value.forEach(value1 => value1.forEach(value2 => {\n        //         console.log(value2.idLogic)\n        //         console.log(value2.stackDown)\n        //         console.log(value2.stackPush)\n        //         console.log(value2.stack)\n        //\n        //     }))\n        // })\n        _this.stack.push(Computer_1.BOTTOM);\n        _this.curPosition = []; //{stack: new Stack<string>(), stmt: startStatements}\n        _this.treeHist = [];\n        startStatements.forEach(function (value) {\n            var stack = new Stack_1.Stack();\n            stack.push(Computer_1.BOTTOM);\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id),\n                stack: stack\n            });\n        });\n        _this.setInput(input);\n        if (_this.epsId) { //\n            _this.curPosition.forEach(function (value) {\n                _this.cycleEps(value.stmt.idLogic, value.stack);\n            });\n            ////// this.cycleEps(this.curPosition[0].stmt.idLogic, this.curPosition[0].stack!)\n        } //\n        console.log('{{{{{{{{{{}}}}}}}}}}');\n        console.log(_this.curPosition);\n        console.log(_this.startStatements);\n        console.log('{{{{{{{{{{}}}}}}}}}}');\n        console.log('-------------------------');\n        console.log(_this.isDeterministic());\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(\"MTX\");\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        console.log('-------------------------');\n        return _this;\n    }\n    PDA.prototype.copyPushList = function (value) {\n        var _a;\n        var cpy = [];\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\n        return cpy;\n    };\n    PDA.prototype.pushReverse = function (pushVals, stack) {\n        pushVals.reverse().forEach(function (value) {\n            stack.push(value);\n        });\n    };\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\n        newStack.pop();\n        var pushVals = this.copyPushList(value);\n        this.pushReverse(pushVals, newStack);\n    };\n    PDA.permute0 = function (permutation) {\n        var r = lodash_1.cloneDeep(permutation);\n        function cmp(a, b) {\n            if (a.stackDown && b.stackDown) {\n                if (a.stackDown < b.stackDown) {\n                    return -1;\n                }\n                if (a.stackDown > b.stackDown) {\n                    return 1;\n                }\n                return 0;\n            }\n            return 0;\n        }\n        r = r.sort(cmp);\n        var tmp = [];\n        var _tmp = [];\n        var dwn = r[0].stackDown;\n        for (var i = 0; i < r.length; i++) {\n            if (r[i].stackDown === dwn) {\n                _tmp.push(r[i]);\n            }\n            else {\n                tmp.push(_tmp);\n                dwn = r[i].stackDown;\n                _tmp = [];\n                _tmp.push(r[i]);\n            }\n        }\n        tmp.push(_tmp);\n        var ret = [];\n        var _detour = function (lvl, cur, acc) {\n            if (lvl < tmp.length) {\n                for (var i = 0; i < tmp[lvl].length; i++) {\n                    var a = lodash_1.cloneDeep(acc);\n                    a.push(tmp[lvl][i]);\n                    _detour(lvl + 1, i, a);\n                }\n            }\n            else {\n                ret.push(acc);\n            }\n        };\n        _detour(0, 0, []);\n        return ret;\n    };\n    PDA.permute = function (permutation) {\n        var length = permutation.length;\n        var result = [permutation.slice()];\n        var c = new Array(length).fill(0);\n        var i = 1;\n        var k;\n        var p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = permutation[i];\n                permutation[i] = permutation[k];\n                permutation[k] = p;\n                c[i]++;\n                i = 1;\n                result.push(permutation.slice());\n            }\n            else {\n                c[i] = 0;\n                i++;\n            }\n        }\n        return result;\n    };\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\n        var wasCreated = function (hash) {\n            return htable.get(hash) !== undefined;\n        };\n        if (!wasCreated(JSON.stringify(value))) {\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\n        }\n    };\n    PDA.prototype.cycleEps = function (curLId, stack0) {\n        var _this = this;\n        var htable = new Map();\n        var positions = [];\n        var visited = [];\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined\n            ? PDA.permute0(this.cellMatrix(curLId, this.epsId))\n            : [(this.cellMatrix(curLId, this.epsId))];\n        // permutes.push(this.cellMatrix(curLId, this.epsId))\n        // let permutes: statementCell[][] = PDA.permute(this.cellMatrix(curLId, this.epsId))\n        var cycle = function (cell, idx, idLogic, stack) {\n            visited[idx] = true;\n            cell.forEach(function (value, index) {\n                if (value.idLogic === idLogic) {\n                    if (value.stackDown === stack.peek()) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchPushEpsVal(value, newCycleStack); //\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                    else if (value.stackDown === Computer_1.EPS) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchDownEpsVal(value, newCycleStack);\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                }\n            });\n        };\n        permutes.forEach(function (value) {\n            for (var i = 0; i < visited.length; i++) {\n                visited[i] = false;\n            }\n            cycle(value, 0, curLId, stack0);\n        });\n        return positions;\n    };\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack, hist) {\n        var _this = this;\n        if (this.epsId === undefined) {\n            return;\n        }\n        var visited = [];\n        for (var i = 0; i < this.statements.size; i++) {\n            visited.push(false);\n        }\n        var dfs = function (id, stack, stDwn, elements) {\n            _this.cycleEps(id, stack).forEach(function (value) {\n                elements.push({\n                    idLogic: id,\n                    top: value.stack\n                });\n            });\n            elements.push({\n                idLogic: id,\n                top: stack\n            });\n            visited[id] = true;\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\n                        case stDwn: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                        case Computer_1.EPS: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                    }\n                }\n            }\n            return elements;\n        };\n        var histUnit = [];\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\n        var positions = [];\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\n            positions.push({\n                stmt: stmt, stack: endsOfEpsWay[i].top,\n                from: this.nodes[curLId],\n                cur: this.nodes[stmt.idLogic],\n                by: Computer_1.EPS,\n                oldStack: stack,\n                stackDown: stackDown\n                /////////\n                //?\n            });\n            hist.push({ by: Computer_1.EPS, from: this.nodes[curLId], value: this.nodes[stmt.idLogic] });\n        }\n        // hist.push(histUnit)\n        return positions;\n    };\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS) {\n            if (value.stackPush.length !== 1) {\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n            }\n            else {\n                newStack.pop();\n            }\n        }\n        else {\n            this.pushTopToNewStack0(newStack, value);\n        }\n    };\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n        }\n        else if (value.stackPush[0] !== Computer_1.EPS) {\n            var pushVals = this.copyPushList(value);\n            this.pushReverse(pushVals, newStack);\n        }\n    };\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack, hist) {\n        var _this = this;\n        var positions = [];\n        var histUnit = [];\n        var getLetter = function (id) {\n            var ret;\n            _this.alphabet.forEach(function (v, k) {\n                if (id === v) {\n                    ret = k;\n                }\n            });\n            return ret;\n        };\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\n            switch (value.stackDown) {\n                case stackDown: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchPushEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: stackDown\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n                case Computer_1.EPS: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchDownEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: Computer_1.EPS\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n            }\n        });\n        return positions;\n    };\n    PDA.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret && (!this.haveEpsilon());\n    };\n    PDA.prototype.haveAdmitting = function (positions) {\n        var ret = false;\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\n            positions.forEach(function (value) {\n                if (value.stmt.isAdmit) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n        else {\n            positions.forEach(function (value) {\n                if (value.stack.size() === 0) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n    };\n    PDA.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var _a, _b;\n            var from = {\n                id: value.from.id,\n                isAdmit: value.from.isAdmit,\n                stack: value.oldStack ? value.oldStack.getStorage() : undefined,\n                move: (_a = value.from) === null || _a === void 0 ? void 0 : _a.move,\n                output: (_b = value.from) === null || _b === void 0 ? void 0 : _b.output\n            };\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage(), from: from, cur: value.cur, by: value.by, oldStack: value.oldStack.getStorage(), stackDown: value.stackDown });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    return PDA;\n}(Computer_1.Computer));\nexports.PDA = PDA;\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    Queue.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    ImSet.prototype.getStorage = function () {\n        return this.set;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\nvar nfa = new PDA({\n    nodes: [\n        // { id: 9, isAdmit: false },\n        { id: 10, isAdmit: false },\n        { id: 11, isAdmit: false },\n        { id: 12, isAdmit: false },\n        { id: 13, isAdmit: false },\n        { id: 14, isAdmit: false },\n        { id: 15, isAdmit: false },\n        { id: 16, isAdmit: false },\n        { id: 17, isAdmit: false },\n    ],\n    edges: [\n        // { from: 9, to: 10, transitions: new Set([[{ title: EPS }]]) },\n        { from: 10, to: 11, transitions: new Set([[{ title: 'a' }]]) },\n        { from: 11, to: 12, transitions: new Set([[{ title: Computer_1.EPS }]]) },\n        { from: 12, to: 13, transitions: new Set([[{ title: 'b' }]]) },\n        { from: 14, to: 15, transitions: new Set([[{ title: 'a' }]]) },\n        { from: 15, to: 16, transitions: new Set([[{ title: Computer_1.EPS }]]) },\n        { from: 16, to: 17, transitions: new Set([[{ title: 'b' }]]) },\n    ]\n}, [{ id: 10, isAdmit: false }, { id: 14, isAdmit: false }], ['a', 'b']);\n// console.log(nfa.isDeterministic())\n// nfa.step()\nvar aa = nfa.run();\nconsole.log('_____-_--');\naa.histTrace.forEach(function (v) {\n    // console.log(v.byEpsPred)\n    console.log(v.byEpsAfter);\n    // console.log(v.byLetter)\n    console.log();\n});\n// const a = nfa.step()\n// console.log()\n// console.log()\n// console.log('Letter')\n// console.log(a.byLetter)\n// console.log('byEpsPred')\n// console.log(a.byEpsPred)\n// console.log('byEpsAfter')\n// console.log(a.byEpsAfter)\n// a.tree?.forEach((v) => {\n//     v.forEach((vv) => console.log(vv.by, vv.from, vv.value))\n//     console.log()\n// })\n// let nfa = new PDA(\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: true},\n//             {id: 5, isAdmit: true},\n//             {id: 6, isAdmit: false},\n//\n//         ],\n//         edges: [\n//\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 0, to: 2, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 1, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 1, to: 4, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 2, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 2, to: 5, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 3, to: 3, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 3, to: 3, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 4, to: 4, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 4, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 5, to: 5, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 5, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 6, to: 6, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 6, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//\n//         ]\n//     }, [{id: 0, isAdmit: false}], [\"0\", \"1\", \"0\"], )\n//\n// nfa.nfaToDfa()\n// console.log(nfa.run())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar EpsilonNFA = /** @class */ (function (_super) {\n    __extends(EpsilonNFA, _super);\n    function EpsilonNFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.enfaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        _this.enfaRun = function () {\n            var histUnit = [];\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: ret.byEpsPred, byLetter: ret.byLetter, byEpsAfter: ret.byEpsAfter });\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return __assign(__assign({}, ret), { histTrace: histTrace });\n        };\n        _this.step = _this.enfaStep;\n        _this.run = _this.enfaRun;\n        return _this;\n    }\n    return EpsilonNFA;\n}(PDA_1.PDA));\nexports.EpsilonNFA = EpsilonNFA;\n// let nfa = new EpsilonNFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             // {from: 0, to: 0, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: EPS}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 2, to: 3, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 3, to: 4, transitions: new Set([ [{title: \"a\"}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: EPS}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}, {id: 3, isAdmit: false}], ['a', 'a'],\n// )\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.nfaToDfa()\n//\n// let nfa = new EpsilonNFA(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             {id: 5, isAdmit: false},\n//             {id: 6, isAdmit: false},\n//             {id: 7, isAdmit: false},\n//             {id: 8, isAdmit: false},\n//             {id: 9, isAdmit: false},\n//             {id: 10, isAdmit: false},\n//             {id: 11, isAdmit: false},\n//             {id: 12, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\n//\n//\n//\n//\n//\n//\n//             //\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\n//             //\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\n//         ]\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n"],"sourceRoot":""}