{"version":3,"sources":["Logic/Mealy.js","Logic/Moore.js","Logic/OutputAutomata.js","Logic/DFA.js","Logic/NFA.js","Logic/TM.js","Logic/DPDA.js","Logic/DMealy.js","Logic/DMoore.js","Logic/Computer.js","Logic/Stack.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Components/RunControl/History.tsx","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/apiGetSaves.ts","Api/apiGetSave.ts","Api/apiSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Api/apiSignIn.ts","Components/Pages/LoginPage/LoginPage.tsx","Api/apiSignUp.ts","Components/Pages/RegisterPage/RegisterPage.tsx","Components/AppHeader/AppHeader.tsx","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","Components/Pages/RegisteredPage/RegisteredPage.tsx","VisNetwork.tsx","ErrorModal.tsx","TreeHistory.tsx","Api/apiRemoveSave.ts","Api/apiUpdateSave.ts","Api/apiUpdateUser.ts","Components/Pages/MePage/MePage.tsx","Api/apiGetUserById.ts","Api/apiGetUserSaves.ts","Api/apiCloneSave.ts","Components/Pages/UserPage/UserPage.tsx","App.tsx","Api/apiGetUser.ts","index.tsx","Logic/IGraphTypes.js","Logic/Exceptions.js","Logic/PDA.js","Logic/EpsilonNFA.js","react-graph-vis-types.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","exports","__esModule","Mealy","_super","graph","startStatements","input","_this","mealyToMoore","outs","Map","edges","forEach","edge","transitions","_","transition","out","output","has","set","size","outNumbs","v","k","push","console","log","diffEdges","reduce","acc","tmp","from","to","title","toOuts","nodes","id","fill","count","undefined","get","Error","nodesMoore","key","map","value","filter","find","node","outEdges","idLetter","startNodes","startMoore","_a","edgesMoore","sort","a","j","Set","graphcore","start","step","oaStep","run","oaRun","require","OutputAutomata","isAdmit","Moore","restart","counterSteps","historiStep","curPosition","stmt","statements","mooreToMealy","mapNodes","mealyEdges","tmpTransitions","tmpTransiton","add","statement","Computer_1","haveEpsilon","alphabet","EPS","histTrace","historiRun","counterStepsForResult","ref","after","_step","counter","history","haveAdmitting","toNodes","nextStepPosition","position","by","cellMatrix","idLogic","ret","getLetter","cur","nextStepPositions","positions","nextPOs","nextPs","pos","po","nextOs","index","outputs","byLetter","trNum","nextPositions","nodesOfCurPos","setInput","matrix","value1","isDeterministic","line","cells","fstCell","hasDublicates","stackDown","retNodes","temp","stack","getStorage","Computer","EpsilonNFA_1","Exceptions_1","DFA","startStatement","NonDeterministic","enfaStep","enfaRun","EpsilonNFA","NFA","IGraphTypes_1","PDA_1","TMMemory","storage","pointer","getPointer","reset","lookUp","initialize","init","mvRight","curr","upd","mvLeft","tmp_1","TM","mem","__step","tr","histori","mv","move","Move","R","stackPush","L","assignCurMt","memory","mtTrun","mtStep","checkMemFormat","isMtMem","value2","_b","curMt","newPos","stPush0","stPush1","PDA","nfa","DPDA","byEmpty","pdaStep","pdaRun","DMealy","DMoore","eof","BOTTOM","byEmptyStackAdmt","isAdmt","nfaToDfa","minimizeDfa","getCurrNode","currentNode","getStartStatements","localValue","_loop_1","this_1","getAlphabetFromEdges","getStatementsFromNodes","createMatrix","getInput","alphabetSet","i_1","statementFrom","statementTo","letterId","stDwn","stPsh","Stack","capacity","Infinity","item","pop","peek","list","cpyTo","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","_excluded","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","reinitComputer","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","epsSubstStr","epsText","epsSubstStrs","values","join","mvStr","transitionsToLabel","frmt","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","epsSubst","epsSubsts","str","getTransitionsTitles","decorateGraph","elements","update","lableTokens","split","x","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","graphToElements","DataSet","elementsToGraph","computersInfo","dfa","name","description","preview","defaultGraph","y","nfa-eps","pda","dpda","tm","mealy","dmealy","moore","dmoore","getCookie","_parts$pop","parts","document","cookie","shift","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","activeTransition","changeTransitions","_ref","asyncToGenerator","regenerator_default","mark","_callee","accumulator","wrap","_context","prev","next","transitionsText","fth","fst","trd","bebra","reverse","snd","_value$trd","changeEdgeTransitions","stop","_x","deleteEdge","_callee2","_context2","changeEditMode","editMode","updateTransitions","_callee3","_context3","_value$trd2","deleteTransition","delete","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","helperText","onBlur","Edit_default","History","startNode","Tooltip","note","historyEndRef","creatButtons","buttons","buttonsComp","button","RunControl","computerShouldBeUpdated","current","some","isEqual","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","gElements","resetHistTree","computer","result","paddingTreeId","getLastHistNodeId","idd","gNode","gEl","createHistNode","lastHistUnits","onInputChanged","_this$state$computer","drawTreeLayot","pred","letter","l","txt","stackDwn","bySymbRules","_v$from","_v$from2","_p$stack","_v$from$stack","toString","rule","createHistEdge","treeEps","byEpsPred","byEpsAfter","tmp1","tree","stepResult","_nodes","error","abrupt","setResettedStatus","wasRuned","currentInputIndex","changeStateIsCurrent","updMem","nodeCore","setHistory","History_History","t0","setIsNonDetermenistic","_this$state$computer2","_this$state$computer3","_callee4","_context4","_ref4","histStep","it","updateElements","setComputerType","admitByStack","curStbyEmp","setByEmptyStack","miniDFA","NonMinimizable","setIsNonMinimizable","starts","includes","defaultButtonsLine","defaultButtons","buttonsTree","treeContextInfo","treeVisible","buttonNfa","buttonDfa","buttonMealy","buttonMoore","buttonsByStackByState","changerStack","buttonsNoRun","getButtons","_this2","setInit","haveEmpty","setNfaToDfa","setMinimizeDfa","setMooreToMealy","setMealyToMoore","setChangerByStack","setRun","setStep","setReset","snapshot","_this3","char","Done_default","Close_default","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","Number","save_index","findIndex","saves_json","JSON","stringify","setItem","parse","getItem","BASE_URL","process","getAuthHeaders","headers","Headers","getParams","method","ApiGetSaves","onAuthFailed","reject","url","params","fetch","then","response","status","ok","statusText","json","catch","ApiGetSave","request","ApiSave","body","postParams","CloudSavesManager","sent","data","serialized_save","WelcomePopout","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","getSave","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","href","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","ApiSignIn","redirect","text","LoginPage","objectDestructuringEmpty","navigate","useNavigate","email","setEmail","password","setPassword","setError","onLoginClicked","jwt","onSignInWithExternalProviderClicked","provider","window","location","Container","spacing","justifyContent","minHeight","align","sx","paddingBottom","Alert","severity","ApiSignUp","RegisterPage","about","setAbout","onRegisterClicked","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","AppBar","Toolbar","SuccessLoginPage","updateCurrentUser","updateAuth","searchParams","_useSearchParams","useSearchParams","RegisteredPage","VisNetwork","useRef","domNode","smooth","enabled","roundness","width","arrows","scaleFactor","manipulation","addEdge","callback","setKeyPressed","network","disableEditMode","layout","improvedLayout","shapeProperties","interpolation","shape","font","labelHighlightBold","physics","options","_React$useState","_React$useState2","contextMenu","setContextMenu","handleContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","handleClose","keyPressed","handleUserKeyPress","useCallback","keyCode","addEdgeMode","handleUserKeyUnPress","content","end","addEventListener","removeEventListener","createRef","useLayoutEffect","Network","on","onDoubleClick","onClick1","onClick2","onClick3","onClick4","unselectAll","refContainer","onContextMenu","Menu","anchorReference","anchorPosition","top","left","transform","bgcolor","boxShadow","NonDetermenisticModal","setOpen","isNonDetermenistic","react","Modal","aria-labelledby","aria-describedby","Box","component","mt","NonMinimizableModal","_React$useState3","_React$useState4","isNonMinimizable","TreeHistory","interaction","keyboard","dragNodes","hierarchical","treeSpacing","direction","parentCentralization","sortMethod","shakeTowards","ApiRemoveSave","ApiUpdateSave","ApiUpdateUser","MePage","_user$about","user","setUser","setSaves","shareDialogOpen","setShareDialogOpen","saveToRemoveId","setSaveToRemoveId","editAccountMode","setEditAccountMode","editedAbout","setEditedAbout","_useState13","_useState14","editSaveDialogOpen","setEditSaveDialogOpen","_useState15","_useState16","saveToEditId","setSaveToEditId","_useState17","_useState18","editedSaveName","setEditedSaveName","onRemoveConfirmClicked","removeSave","updateSaves","closeDialog","onOpenClicked","onEditAccountClicked","saveAccountChanges","_ref6","_callee5","_context5","updatedUser","closeShareDialog","closeEditSaveDialog","_ref7","_callee6","_context6","_ref8","_callee7","_context7","_x3","setSaveShareState","_ref9","_callee8","shareState","_context8","isShared","_x4","_x5","_user$about2","DialogContentText","OutlinedInput","readOnly","endAdornment","InputAdornment","navigator","clipboard","writeText","ContentCopyOutlined_default","userName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Date","createdDateTime","toLocaleString","lastModifiedDateTime","LaunchOutlined_default","EditOutlined_default","DeleteOutlineRounded_default","icon","ApiGetUserById","ApiGetUserSaves","ApiCloneSave","UserPage","cloneDialogOpen","setCloneDialogOpen","saveToCloneId","setSaveToCloneId","userId","useParams","onCloneDialogClose","getUser","cloneSave","createContext","computerAction","controlAction","changerByStack","Ribbon","_props$mem","wasComputerResetted","_props$memRef","_props$memRef$current","ptr","abs","memRef","scrollIntoView","behavior","App","networkTST","errIsNonDetermenistic","errIsNonMinimizable","lastNodeId","subscribeToShortcuts","ctrlKey","openSavePopout","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","logout","updateGraph","ids","createNode","canvas","lastHistNodeId","treeElems","remove","selectNode","nodesIDs","selectedNodes","selectedNode","deselectNode","rmEdges","selectEdge","edgesIDs","selectedEdges","selectedEdge","deselectEdge","changeEdgeTransition","NFAContextMenu","showTree","DFAContextMenu","MealyContextMenu","MooreContextMenu","PDAContextMenu","AnotherContextMenu","ContextMenu","inEdgeMode","widthConstraint","heightConstraint","initiallyStabilized","popout","react_router_dom","react_router","path","element","Pages_LoginPage_LoginPage","Pages_RegisterPage_RegisterPage","Pages_RegisteredPage_RegisteredPage","Pages_SuccessLoginPage_SuccessLoginPage","Pages_MePage_MePage","Pages_UserPage_UserPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","ErrorModal_NonDetermenisticModal","ErrorModal_NonMinimizableModal","App_Ribbon","Components_AppHeader_AppHeader","VisNetwork_VisNetwork","TreeHistory_TreeHistory","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","f","jsx","_this2$historyEndRef","_this2$historyEndRef$","ReactDOM","render","StrictMode","src_App_0","getElementById","Stack_1","lodash_1","epsId","admitByEmptyStack","treeHist","histUnit","last","unitHsit","newPosSet","updCurPos","epsStep","pPos","epsilonStep","rmRepeations","htable","letterStep","_nextStepPositions","ps","table","ImSet","startPos","head","afterEps","EPStack","flatted","_to","_edges","getIter","delta","startId","_getJump","zero","first","second","number","byEveryLetter","accLine","groups","group","cutBy","cell","createTableT","getJump","updateGroups","jmpGrp","newGrp","newNumber","toRm","splice","_updateGroups","toPositions","g","cycleEps","copyPushList","cpy","pushReverse","pushVals","pushTopToNewStack0","newStack","permute0","permutation","r","cloneDeep","_tmp","dwn","_detour","lvl","permute","slice","c","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","idx","newCycleStack","matchPushEpsVal","matchDownEpsVal","hist","endsOfEpsWay","dfs","oldStack","transformedInput","Queue","enqueue","dequeue","normalize","_v","getItter","myForEach","getNth","iter"],"mappings":"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","file":"static/js/main.f5ca1230.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Mealy = /** @class */ (function (_super) {\n    __extends(Mealy, _super);\n    function Mealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.mealyToMoore = function () {\n            var outs = new Map();\n            _this.edges.forEach(function (edge) {\n                edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    var out = transition.output;\n                    if (!outs.has(out)) {\n                        outs.set(out, outs.size);\n                    }\n                }); });\n            });\n            var outNumbs = [];\n            outs.forEach(function (v, k) { return outNumbs.push(k); });\n            console.log(outs);\n            console.log(outNumbs);\n            var diffEdges = _this.edges.reduce((function (acc, edge) {\n                var tmp = [];\n                edge.transitions.forEach(function (t) { return t.forEach(function (v) { return tmp.push({\n                    from: edge.from,\n                    to: edge.to,\n                    title: v.title,\n                    output: v.output ? v.output : ''\n                }); }); });\n                tmp.forEach(function (v) { return acc.push(v); });\n                return acc;\n            }), new Array());\n            console.log('UUUU');\n            diffEdges.forEach(function (v) {\n                console.log(v);\n            });\n            console.log('UU->I');\n            var toOuts = new Map();\n            _this.nodes.forEach(function (v) {\n                return toOuts.set(v.id, new Array(outs.size).fill(-1));\n            });\n            var count = 1;\n            diffEdges.forEach(function (edge) {\n                if (toOuts.get(edge.to) === undefined) {\n                    throw new Error(\"Mealy to Moore\");\n                }\n                else {\n                    if (toOuts.get(edge.to)[outs.get(edge.output)] === -1) {\n                        toOuts.get(edge.to)[outs.get(edge.output)] = count;\n                        count++;\n                    }\n                }\n            });\n            var nodesMoore = [];\n            toOuts.forEach(function (v, key) { return v\n                .map(function (v, k) { return ({ value: v, out: outNumbs[k] }); })\n                .filter(function (v) { return v.value !== -1; })\n                .forEach(function (v) {\n                nodesMoore.push(__assign(__assign({}, _this.nodes.find(function (node) { return node.id === key; })), { id: v.value, output: v.out }));\n            }); });\n            console.log('LLKLKLKLLLKLL');\n            nodesMoore.forEach(function (v) { return console.log(v); });\n            console.log('LLKLKLKLLLKLL');\n            toOuts.forEach(function (v, key) {\n                console.log(key + ' ~~~ ' + v);\n            });\n            var outEdges = diffEdges.reduce(function (acc, v) {\n                if (toOuts.get(v.from) === undefined) {\n                    throw new Error(\"Mealy to Moore\");\n                }\n                else {\n                    var mooreIds = toOuts.get(v.from).filter(function (id) { return id !== -1; });\n                    mooreIds.forEach(function (id) {\n                        var idLetter = outs.get(v.output);\n                        acc.push({\n                            from: id,\n                            to: toOuts.get(v.to)[idLetter],\n                            title: v.title\n                        });\n                    });\n                    return acc;\n                }\n            }, new Array());\n            console.log('________');\n            outEdges.forEach(function (v) { return console.log(v); });\n            console.log('________');\n            console.log('vsdfsdfsdf');\n            var startNodes = _this.startStatements.map(function (v) { return _this.nodes[v.id]; });\n            var startMoore = [];\n            startNodes.forEach(function (v) { var _a; return (_a = toOuts.get(v.id)) === null || _a === void 0 ? void 0 : _a.filter(function (v) { return v !== -1; }).forEach(function (v) { return startMoore.push(nodesMoore.find(function (node) { return node.id === v; })); }); });\n            startNodes.forEach(function (v) { return console.log(v); });\n            console.log('vsdfsdfsdf---||||--');\n            var edgesMoore = [];\n            outEdges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            console.log('vvvvvvvvvvvvvv');\n            outEdges.forEach(function (v) { return console.log(v); });\n            console.log('^^^^^^^^^^^^^^');\n            for (var i = 0; i < outEdges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                var j = i;\n                while (j < outEdges.length && outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n                    acc.push({ title: outEdges[j].title });\n                    j++;\n                }\n                i = j - 1;\n                edgesMoore.push({\n                    from: outEdges[i].from,\n                    to: outEdges[i].to,\n                    transitions: new Set([acc])\n                });\n                // for (let j = i; j < outEdges.length; j++) {\n                //     if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n                //         acc.push({ title: outEdges[j].title })\n                //         delta++\n                //     }\n                //     edgesMoore.push({\n                //         from: outEdges[i].from,\n                //         to: outEdges[i].to,\n                //         transitions: new Set<TransitionParams[]>([acc])\n                //     })\n                //     i += delta - 1\n                // }\n            }\n            console.log('{{{{{{{v}}}}}}}');\n            edgesMoore.forEach(function (v) {\n                console.log(v);\n            });\n            console.log('{{{{{{{v}}}}}}}');\n            // for (let i = 0; i < outEdges.length; i++) {\n            //     const acc: TransitionParams[] = []\n            //     let delta = 0\n            //     for (let j = i; j < outEdges.length; j++) {\n            //         if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n            //             acc.push(Array.from(outEdges[j].transitions)[0][0])\n            //             delta++\n            //         }\n            //     }\n            //     outEdges.push({\n            //         from: outEdges[i].from,\n            //         to: outEdges[i].to,\n            //         transitions: new Set<TransitionParams[]>([acc])\n            //     })\n            //     i += delta - 1\n            // }\n            // const nodesOuts = () => {\n            //     let counter = 0\n            //     return this.nodes.reduce((acc: (NodeCore | undefined)[][], node: NodeCore) => {\n            //         const edges = this.edges.filter((edge) => edge.to === node.id)\n            //         const tmp: (NodeCore | undefined)[] = []\n            //         outs.forEach(() => tmp.push(undefined))\n            //         edges.forEach((edge) => {\n            //             edge.transitions.forEach((_) => _.forEach((transition) => {\n            //                 const out = transition.output!\n            //                 const outIndex = outs.get(out)!\n            //                 if (!tmp[outIndex]) {\n            //                     tmp[outIndex] = {\n            //                         id: counter,\n            //                         isAdmit: node.isAdmit,\n            //                         output: out\n            //                     }\n            //                     counter++\n            //                 }\n            //             }))\n            //         })\n            //         if (tmp.filter((v) => v !== undefined).length === 0) {\n            //             tmp[0] = {\n            //                 id: counter,\n            //                 isAdmit: node.isAdmit,\n            //                 output: \"~\"\n            //             }\n            //             counter++\n            //         }\n            //         acc.push(tmp)\n            //         return acc\n            //     }, [])\n            // }\n            // const _nodesOuts: (NodeCore | undefined)[][] = nodesOuts()\n            // const _edges = _nodesOuts.reduce((acc: EdgeCore[], vs, index) => {\n            //     const edges = this.edges.filter((edge) => edge.from === this.nodes[index].id)\n            //     edges.forEach((edge) => edge.transitions.forEach((_) => _.forEach(transition => {\n            //         vs.forEach((v) => {\n            //             console.log(v)\n            //             if (v !== undefined && transition.output !== undefined) {\n            //                 const out = outs.get(transition.output)\n            //                 if (out) {\n            //                     const ndesOut = _nodesOuts[edge.to][out]\n            //                     if (ndesOut) {\n            //                         acc.push({\n            //                             from: v.id,\n            //                             to: ndesOut.id,\n            //                             transitions: new Set<TransitionParams[]>([[{ title: transition.title }]])\n            //                         })\n            //                     }\n            //                 }\n            //             }\n            //         })\n            //     })))\n            //     return acc\n            // }, [])\n            // const edges: EdgeCore[] = []\n            // _edges.sort((a, b) => a.from - b.from || a.to - b.to)\n            // for (let i = 0; i < _edges.length; i++) {\n            //     const acc: TransitionParams[] = []\n            //     let delta = 0\n            //     for (let j = i; j < _edges.length; j++) {\n            //         if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n            //             acc.push(Array.from(_edges[j].transitions)[0][0])\n            //             delta++\n            //         }\n            //     }\n            //     edges.push({\n            //         from: _edges[i].from,\n            //         to: _edges[i].to,\n            //         transitions: new Set<TransitionParams[]>([acc])\n            //     })\n            //     i += delta - 1\n            // }\n            // const starts = this.startStatements.map((stmt) => stmt.id)\n            // const nodes = _nodesOuts.reduce((acc: NodeCore[], vs, index) => {\n            //     vs.forEach((v) => {\n            //         if (v) {\n            //             acc.push(v)\n            //         }\n            //     })\n            //     return acc\n            // }, [])\n            // const start = starts.reduce((acc: NodeCore[], id) => {\n            //     const curNodeOuts = _nodesOuts[id].filter((v) => {\n            //         if (v !== undefined) {\n            //             return v\n            //         }\n            //     })\n            //     acc.push(curNodeOuts[0]!)\n            //     return acc\n            // }, [])\n            return {\n                graphcore: { edges: edgesMoore, nodes: nodesMoore },\n                start: startMoore\n            };\n        };\n        _this.step = _this.oaStep;\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Mealy;\n}(OutputAutomata_1.OutputAutomata));\nexports.Mealy = Mealy;\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.isDeterministic())\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//             { id: 4, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 2, to: 4, transitions: new Set([[{ title: 'a', output: '1' }, { title: 'b', output: '1' }]]) },\n//             // { from: 2, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 4, to:3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n//         ]\n//     }, [{ id: 1, isAdmit: false }], [])\n// console.log(nfa.mealyToMoore().graphcore.edges)\nvar nfa = new Mealy({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n        { id: 3, isAdmit: false },\n        { id: 4, isAdmit: false },\n    ],\n    edges: [\n        // { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n        // { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n        // {\n        //     from: 2, to: 4, transitions: new Set([[\n        //         { title: 'a', output: '1' },\n        //         { title: 'b', output: '1' },\n        //     ]])\n        // },\n        // { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n        // { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n        // { from: 4, to: 3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n        // { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n        { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n        { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n        { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n        { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], []);\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\nvar a = nfa.mealyToMoore();\nconsole.log(a);\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Moore = /** @class */ (function (_super) {\n    __extends(Moore, _super);\n    function Moore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.mooreToMealy = function () {\n            var mapNodes = new Map();\n            _this.nodes.forEach(function (node) { return mapNodes.set(node.id, { id: node.id, isAdmit: node.isAdmit, output: node.output }); });\n            var mealyEdges = _this.edges.map(function (edge) {\n                var tmpTransitions = new Set();\n                var tmpTransiton = [];\n                edge.transitions.forEach(function (v) { return v.forEach(function (transition) {\n                    var _a;\n                    tmpTransiton.push({ title: transition.title, output: (_a = mapNodes.get(edge.to)) === null || _a === void 0 ? void 0 : _a.output });\n                }); });\n                tmpTransitions.add(tmpTransiton);\n                return { from: edge.from, to: edge.to, transitions: tmpTransitions };\n            });\n            console.log('>>>>', _this.startStatements);\n            return {\n                graphcore: { edges: mealyEdges, nodes: _this.nodes.map(function (node) { return ({ id: node.id, isAdmit: node.isAdmit }); }) },\n                start: _this.startStatements.map(function (statement) { return ({ id: statement.id, isAdmit: statement.isAdmit }); })\n            };\n        };\n        _this.step = _this.oaStep;\n        // (): Step => {\n        //     if (!super.isDeterministic()) {\n        //         throw new NonDeterministic()\n        //     }\n        //     return this.oaRun()\n        // }\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Moore;\n}(OutputAutomata_1.OutputAutomata));\nexports.Moore = Moore;\n// let nfa = new Moore(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: 'b' },\n//             { id: 1, isAdmit: false, output: 'b' },\n//             // { id: 2, isAdmit: false, output: 'a' },\n//             // { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             // { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             { from: 0, to: 0, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n//             // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"0\"])\n// // console.log(nfa.run())\n// // console.log(nfa.mooreToMealy().start)\n// // edges.forEach(v => console.log(v.from, v.to, v.transitions))\n// console.log(nfa.run())\n// // const conv = nfa.moorToMealy()\n// // conv.graphcore.edges.forEach(edge => {\n// //     console.log(edge.from)\n// //     console.log(edge.to)\n// //     console.log(edge.transitions)\n// // })\n// // conv.graphcore.nodes.forEach(node => {\n// //     console.log(node)\n// // })\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar OutputAutomata = /** @class */ (function (_super) {\n    __extends(OutputAutomata, _super);\n    function OutputAutomata(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.haveEpsilon = function () { return _this.alphabet.get(Computer_1.EPS) !== undefined; };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.oaRun = function () {\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var output;\n            for (var i = 0; i < _this.input.length; i++) {\n                var ref = {\n                    counterSteps: _this.counterStepsForResult,\n                    curPosition: _this.curPosition,\n                    historiStep: _this.historiRun\n                };\n                var after = _this._step(ref, histTrace);\n                _this.counterStepsForResult = ref.counterSteps;\n                console.log(_this.counterStepsForResult);\n                _this.curPosition = ref.curPosition;\n                _this.historiRun = ref.historiStep;\n                output = after.output;\n            }\n            return {\n                counter: _this.counterStepsForResult,\n                history: _this.historiRun,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                nodes: _this.toNodes(_this.curPosition),\n                output: output,\n                histTrace: histTrace\n            };\n        };\n        _this.nextStepPosition = function (position, by) {\n            return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) {\n                var getLetter = function (id) {\n                    var ret;\n                    _this.alphabet.forEach(function (v, k) {\n                        if (id === v) {\n                            ret = k;\n                        }\n                    });\n                    return ret;\n                };\n                var ret = {\n                    stmt: v,\n                    by: getLetter(by),\n                    cur: _this.nodes[v.idLogic],\n                    from: _this.nodes[position.stmt.idLogic]\n                };\n                // return ({ position: { stmt: v }, output: v.output })\n                return ({ position: ret, output: v.output });\n            });\n        };\n        _this.nextStepPositions = function (positions, by) {\n            var nextPOs = positions.map(function (v) { return _this.nextStepPosition(v, by); });\n            var nextPs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) { return acc.push(po.position); });\n                return acc;\n            }, []);\n            var nextOs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) {\n                    if (po.output === undefined) {\n                        throw new Error(\"Output undefinded\");\n                    }\n                    acc.push(po.output);\n                });\n                return acc;\n            }, []);\n            nextPs.forEach(function (v, index) { return v.output = nextOs[index]; });\n            return { positions: nextPs, outputs: nextOs };\n        };\n        _this._step = function (ref, histTrace) {\n            var _a;\n            var byLetter = [];\n            var trNum = _this.alphabet.get((_a = _this.input[ref.counterSteps]) === null || _a === void 0 ? void 0 : _a.value);\n            var nextPositions = _this.nextStepPositions(ref.curPosition, trNum);\n            ref.curPosition = nextPositions.positions;\n            var nodesOfCurPos = _this.toNodes(ref.curPosition);\n            nodesOfCurPos.forEach(function (node) { return byLetter.push(node); });\n            ref.historiStep.push({ nodes: nodesOfCurPos, by: trNum });\n            if (ref.curPosition.length > 0) {\n                ref.counterSteps++;\n            }\n            console.log('--->byLetter');\n            console.log(byLetter);\n            console.log('--->byLetter');\n            histTrace.push({ byLetter: byLetter });\n            return {\n                counter: ref.counterSteps,\n                history: ref.historiStep,\n                isAdmit: _this.haveAdmitting(ref.curPosition),\n                nodes: nodesOfCurPos,\n                output: nextPositions.outputs,\n                byLetter: byLetter,\n                histTrace: histTrace\n            };\n        };\n        _this.oaStep = function () {\n            var ref = {\n                counterSteps: _this.counterSteps,\n                curPosition: _this.curPosition,\n                historiStep: _this.historiStep\n            };\n            var after = _this._step(ref, []);\n            _this.counterSteps = ref.counterSteps;\n            _this.curPosition = ref.curPosition;\n            _this.historiStep = ref.historiStep;\n            return {\n                counter: after.counter,\n                history: after.history,\n                isAdmit: after.isAdmit,\n                nodes: after.nodes,\n                output: after.output,\n                byLetter: after.byLetter\n            };\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.curPosition = [];\n        startStatements.forEach(function (value) {\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id)\n            });\n        });\n        _this.setInput(input);\n        _this.counterSteps = 0;\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(_this.curPosition);\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        return _this;\n    }\n    OutputAutomata.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    OutputAutomata.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { from: value.from, cur: value.cur, by: value.by, output: value.output, stack: value.stack === undefined ? undefined : value.stack.getStorage() });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    OutputAutomata.prototype.haveAdmitting = function (positions) {\n        return positions.reduce(function (acc, p) { return acc && p.stmt.isAdmit; }, true);\n    };\n    return OutputAutomata;\n}(Computer_1.Computer));\nexports.OutputAutomata = OutputAutomata;\n// let nfa = new Moor(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: '0' },\n//             { id: 1, isAdmit: false, output: '1' },\n//             { id: 2, isAdmit: false, output: '2' },\n//             { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 2, to: 3, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: '5' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"5\"])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DFA = /** @class */ (function (_super) {\n    __extends(DFA, _super);\n    function DFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaRun();\n        };\n        _this.setInput(input);\n        return _this;\n    }\n    return DFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.DFA = DFA;\nvar nfa = new DFA({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: true },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n        { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], []);\n// nfa.\n// let nfa = new DFA (\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: true},\n//\n//\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: true},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//             // {id: 0, isAdmit: false},\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//\n//         ],\n//         edges: [\n//\n//             {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //youtube\n//             // {from: 1, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 4, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 2, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//\n//\n//             // {from: 0, to: 1, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 0, to: 3, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: '0'}, {title: '1'}] ])},\n//             // {from: 3, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 3, to: 4, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //refference\n//             // {from: 0, to: 1, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 0, to: 2, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 1, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 3, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 6, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//\n//         ]\n//     }, [{id: 1, isAdmit: false}], [],\n// )\n// console.log(nfa.minimizeDfa().start)\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar NFA = /** @class */ (function (_super) {\n    __extends(NFA, _super);\n    function NFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        if (_this.haveEpsilon()) {\n            throw new Error('Epsilon Transitions');\n        }\n        return _this;\n    }\n    return NFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.NFA = NFA;\n//\n// let nfa = new NFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 0, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: '1'}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}], [],\n// )\n// nfa.nfaToDfa()\n// nfa.nfaToDfa().nodes.forEach((v) => console.log(v.id))\n// nfa.nfaToDfa().edges.forEach((v) => console.log(v.from, v.to))\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\nvar PDA_1 = require(\"./PDA\");\nvar Computer_1 = require(\"./Computer\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar TMMemory = /** @class */ (function () {\n    function TMMemory() {\n        this.storage = ['_'];\n        this.pointer = 0;\n    }\n    TMMemory.prototype.getPointer = function () {\n        return this.pointer;\n    };\n    TMMemory.prototype.reset = function () {\n        this.storage = ['_'];\n        this.pointer = 0;\n    };\n    TMMemory.prototype.lookUp = function () {\n        return this.storage[this.pointer];\n    };\n    TMMemory.prototype.initialize = function (init) {\n        var _this = this;\n        init.forEach(function (value) { return _this.mvRight('_', value); });\n        this.pointer = 0;\n    };\n    TMMemory.prototype.mvRight = function (curr, upd) {\n        if (this.storage[this.pointer] === curr) {\n            this.storage[this.pointer] = upd;\n            this.pointer++;\n        }\n        if (this.pointer === this.storage.length) {\n            this.storage.push('_');\n        }\n    };\n    TMMemory.prototype.mvLeft = function (curr, upd) {\n        if (this.pointer === 0) {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer = 0;\n            }\n            var tmp_1 = ['_'];\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\n            this.storage = tmp_1;\n        }\n        else {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer--;\n            }\n        }\n    };\n    TMMemory.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return TMMemory;\n}());\nexports.TMMemory = TMMemory;\nvar TM = /** @class */ (function (_super) {\n    __extends(TM, _super);\n    function TM(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.mem = new TMMemory();\n        _this.__step = function (counter, tr, histori) {\n            var byLetter = [];\n            var from = _this.curPosition[0].stmt;\n            var mv;\n            var by = \"\";\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\n                if (value.stackDown === _this.mem.lookUp()) {\n                    if (value.move === IGraphTypes_1.Move.R) {\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    if (value.move === IGraphTypes_1.Move.L) {\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\n                }\n            });\n            histori.push({\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                by: by\n                // this.input[counter].value\n            });\n            counter++;\n            byLetter.push({\n                id: _this.curPosition[0].stmt.id,\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                by: by,\n                from: from,\n                cur: _this.curPosition[0].stmt,\n                move: mv\n            });\n            return {\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                counter: counter,\n                history: histori,\n                memory: _this.mem.getStorage(),\n                pointer: _this.mem.getPointer(),\n                byLetter: byLetter\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.mem.reset();\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n        };\n        _this.mtTrun = function () {\n            throw Error(\"TM run\");\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            // this.restart()\n            _this.mem.reset();\n            _this.mem.initialize(input);\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n            console.log(_this.curPosition);\n        };\n        _this.mtStep = function () {\n            console.log(\"STPMT\");\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            if (ret.history[ret.history.length - 1].by === \"\") {\n                ret.nodes = [];\n            }\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\n        };\n        _this.step = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtStep();\n        };\n        _this.run = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtTrun();\n        };\n        _this.checkMemFormat(graph);\n        // if (!this.isDeterministic()) {\n        //     throw Error (\"Not deterministic\")\n        // }\n        _this.mem.initialize(input);\n        _this.curPosition = [{\n                stmt: _this.statements.get(_this.startStatements[0].id)\n            }];\n        console.log(\"MTMTMTMTMTTMMTMTMT::::::::::\");\n        return _this;\n    }\n    TM.prototype.checkMemFormat = function (graph) {\n        var isMtMem = true;\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\n            value1.forEach(function (value2) {\n                var _a, _b;\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n                    isMtMem = false;\n                }\n            });\n        }); });\n        if (!isMtMem) {\n            throw Error(\"Not MT mem\");\n        }\n    };\n    TM.prototype.curMt = function () {\n        return this.curPosition[0];\n    };\n    TM.prototype.assignCurMt = function (newPos) {\n        this.curPosition[0] = newPos;\n    };\n    TM.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var isEquals = function (stPush0, stPush1) {\n                if (!stPush0 || !stPush1) {\n                    return false;\n                }\n                if (stPush0.length !== stPush1.length) {\n                    return false;\n                }\n                return stPush0.reduce(function (acc, v, index) { return acc && stPush0[index] === stPush1[index]; }, true);\n            };\n            var hasDublicates = cells.reduce(function (acc, stmt, index) {\n                return index !== 0 &&\n                    (acc || (stmt.stackDown === fstCell.stackDown && isEquals(stmt.stackPush, fstCell.stackPush)));\n            }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    return TM;\n}(PDA_1.PDA));\nexports.TM = TM;\nvar nfa = new TM({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: Computer_1.EPS, stackDown: '0', stackPush: ['0'], move: IGraphTypes_1.Move.R }, { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'], move: IGraphTypes_1.Move.R }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], ['1']);\nconsole.log(nfa.isDeterministic());\n// let nfa = new TM(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n//             { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n//             { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n//             { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n//             { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n//\n//             // { from: 1, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['V'], move: Move.R} ]]) },\n//             // { from: 2, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['B'], move: Move.R} ]]) },\n//             // { from: 2, to: 1, transitions: new Set([[ { title: 'b', stackDown: 'b', stackPush: ['6'], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: 'с', stackPush: ['['], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: '_', stackPush: [']'], move: Move.R } ]]) },\n//\n//             // {from: 1, to: 1, transitions: new Set([{title: 'a', stackDown: 'a', stackPush: ['A'], move: Move.R}])},\n//             // {from: 1, to: 2, transitions: new Set([{title: 'c', stackDown: 'b', stackPush: ['V'], move: Move.R}])},\n//             // {from: 2, to: 2, transitions: new Set([{title: 'c', stackDown: '_', stackPush: ['V'], move: Move.R}])},\n//\n//\n//\n//         ]\n//     },  [{id: 1, isAdmit: false}], ['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.setInput(['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DPDA = /** @class */ (function (_super) {\n    __extends(DPDA, _super);\n    function DPDA(graph, startStatement, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatement, input, byEmpty) || this;\n        // step = this.pdaStep\n        // run = this.pdaRun\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaRun();\n        };\n        _this.setInput(input);\n        return _this;\n        // if (!super.isDeterministic()) {\n        //     throw new Error(\"Is not determenistic\")\n        // }\n    }\n    return DPDA;\n}(PDA_1.PDA));\nexports.DPDA = DPDA;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Mealy_1 = require(\"./Mealy\");\nvar DMealy = /** @class */ (function (_super) {\n    __extends(DMealy, _super);\n    function DMealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMealy;\n}(Mealy_1.Mealy));\nexports.DMealy = DMealy;\nvar nfa = new DMealy({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Moore_1 = require(\"./Moore\");\nvar DMoore = /** @class */ (function (_super) {\n    __extends(DMoore, _super);\n    function DMoore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMoore;\n}(Moore_1.Moore));\nexports.DMoore = DMoore;\nvar nfa = new DMoore({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\nexports.EPS = 'Epsilon';\nexports.BOTTOM = \"Z0\";\nvar Computer = /** @class */ (function () {\n    function Computer(graph, startStatements) {\n        // this.setStartStatements(graph, startStatements)\n        var _this = this;\n        this.input = [];\n        this.alphabet = new Map();\n        this.statements = new Map();\n        this.startStatements = [];\n        this.edges = [];\n        this.counterSteps = 0;\n        this.counterStepsForResult = 0;\n        this.historiStep = [];\n        this.historiRun = [];\n        this.matrix = [];\n        this.byEmptyStackAdmt = function (isAdmt) {\n            throw new Error(\"PDA attribute\");\n        };\n        this.nfaToDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.minimizeDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.mooreToMealy = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.mealyToMoore = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.getCurrNode = function () {\n            return _this.currentNode.id;\n        };\n        this.getStartStatements = function () {\n            return _this.startStatements;\n        };\n        graph.edges\n            .sort(function (a, b) { return a.from - b.from; })\n            .forEach(function (value) { return _this.edges.push({\n            transitions: value.transitions === undefined ? new Set([[{ title: \"\" }]]) : value.transitions,\n            from: value.from,\n            to: value.to,\n            localValue: []\n        }); });\n        var _loop_1 = function (i) {\n            this_1.edges[i].localValue = [];\n            this_1.edges[i].transitions.forEach(function (value) {\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\n            }\n            //    this.edges[i].localValue!.push(value)\n            );\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.edges.length; i++) {\n            _loop_1(i);\n        }\n        this.getAlphabetFromEdges();\n        this.getStatementsFromNodes(graph.nodes);\n        this.startStatements = startStatements;\n        this.currentNode = startStatements[0];\n        this.nodes = graph.nodes;\n        this.createMatrix();\n    }\n    Computer.prototype.getInput = function () {\n        return this.input;\n    };\n    Computer.prototype.getAlphabetFromEdges = function () {\n        var _this = this;\n        var alphabetSet = new Set();\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\n            this.edges[i_1].localValue.forEach(function (value) {\n                if (value.title !== \"\") {\n                    alphabetSet.add(value.title);\n                }\n            });\n        }\n        var i = 0;\n        alphabetSet.forEach(function (value) {\n            if (value !== \"\") {\n                _this.alphabet.set(value, i);\n                i++;\n            }\n        });\n    };\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.statements.set(nodes[i].id, {\n                id: nodes[i].id,\n                isAdmit: nodes[i].isAdmit,\n                idLogic: i,\n                output: nodes[i].output\n            });\n        }\n    };\n    Computer.prototype.createMatrix = function () {\n        for (var i = 0; i < this.statements.size; i++) {\n            this.matrix[i] = [];\n            for (var j = 0; j < this.alphabet.size; j++) {\n                this.matrix[i][j] = [];\n                //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\n            }\n        }\n        for (var i = 0; i < this.edges.length; i++) {\n            var statementFrom = this.statements.get(this.edges[i].from);\n            var statementTo = this.statements.get(this.edges[i].to);\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\n                // if (letterId === undefined) {\n                //     throw new Error(\"A\")\n                // }\n                if (letterId === undefined) {\n                    continue;\n                }\n                console.log(letterId);\n                console.log(this.edges[i].localValue[j].title);\n                var stDwn = this.edges[i].localValue[j].stackDown;\n                var stPsh = this.edges[i].localValue[j].stackPush;\n                var mv = this.edges[i].localValue[j].move;\n                var output = this.edges[i].localValue[j].output === undefined ? statementTo.output : this.edges[i].localValue[j].output;\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\n                    stDwn = exports.EPS;\n                    stPsh = [exports.EPS];\n                }\n                // console.log(statementTo.move)\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv, output: output }));\n            }\n        }\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\n        this.statements.forEach(function (value) { return console.log(value); });\n        this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n    };\n    Computer.prototype.cellMatrix = function (i, j) {\n        return this.matrix[i][j];\n    };\n    return Computer;\n}());\nexports.Computer = Computer;\n","\"use strict\";\nexports.__esModule = true;\nvar Stack = /** @class */ (function () {\n    function Stack(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Stack.prototype.push = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Stack.prototype.pop = function () {\n        return this.storage.pop();\n    };\n    Stack.prototype.peek = function () {\n        return this.storage[this.size() - 1];\n    };\n    Stack.prototype.size = function () {\n        return this.storage.length;\n    };\n    Stack.prototype.getStorage = function () {\n        var list = [];\n        this.storage.forEach(function (value) { return list.push(value); });\n        return list;\n    };\n    Stack.prototype.cpyTo = function (stack) {\n        this.storage.forEach(function (value) { return stack.push(value); });\n        return stack;\n    };\n    return Stack;\n}());\nexports.Stack = Stack;\n","import React, {AllHTMLAttributes} from \"react\";\nimport \"./ControlWrapper.css\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\n    title: string,\n    visible: boolean\n}\n\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\n    static defaultProps = {\n        visible: true\n    }\n\n    render() {\n        const {visible, title, style, className, children, ...restProps} = this.props;\n\n        return (\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\n                   variant=\"outlined\"\n                   style={style}\n                   {...restProps}\n            >\n                <div className=\"control-wrapper--content\">\n                    <div>\n                        <Typography variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </div>\n\n                    <div className=\"control-wrapper--child\">\n                        {children}\n                    </div>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default ControlWrapper;","import React, { ChangeEvent } from \"react\";\nimport \"./NodeControl.css\";\nimport { node } from \"../../react-graph-vis-types\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\n\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\ninterface nodeControlProps {\n    node: node | null,\n    changeNodeLabel: (id: number, label: string) => void,\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\n    deleteNode: (id: number) => void,\n    reinitComputer: (() => void)\n}\n\ninterface nodeControlState {\n    prevNodeId: number | undefined,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean\n}\n\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\n    constructor(props: nodeControlProps) {\n        super(props);\n\n        this.state = {\n            prevNodeId: this.props.node?.id,\n            label: this.props.node?.label || \"\",\n            isAdmit: this.props.node?.isAdmit || false,\n            isInitial: this.props.node?.isInitial || false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\n        if (this.props.node?.id !== prevState.prevNodeId) {\n            this.setState({\n                label: this.props.node?.label || \"\",\n                    // + ((\" | \" + this.props.node?.output || \"\")) \n                    \n                isAdmit: this.props.node?.isAdmit || false,\n                isInitial: this.props.node?.isInitial || false,\n                prevNodeId: this.props.node?.id\n            });\n        }\n    }\n\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\n            this.setState({ label: event.target.value });\n        }\n    }\n\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\n            this.setState({ isAdmit: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null && !this.props.node.isAdmit) {\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\n            this.setState({ isInitial: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onDeleteClick = (): void => {\n        if (this.props.node !== null) {\n            this.props.deleteNode(this.props.node.id);\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\n                <FormControl>\n\n                    <div className=\"node-control__item\">\n                        <TextField\n                            label=\"Имя\"\n                            size=\"small\"\n                            value={this.state.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isInitial}\n                                    onChange={this.onIsInitialChanged}\n                                />\n                            }\n                            label={\"Начальное\"}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isAdmit}\n                                    onChange={this.onIsAdmitChanged}\n                                />\n                            }\n                            label=\"Допускающее\"\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <Button\n                            onClick={this.onDeleteClick}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </FormControl>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default NodeControl;","import {ComputerInfo, ComputerType, edge, graph, node} from \"./react-graph-vis-types\";\nimport {EPS} from \"./Logic/Computer\";\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\nimport { Elements } from \"./App\";\nimport { DataSet } from \"vis-network/standalone/esm/vis-network\";\nimport { Output } from \"./Logic/Types\";\n\n\nconst epsSubstStr = (epsText: string) => (value: string) => value === EPS ? epsText : value\n\nconst epsSubstStrs = (epsText: string) => (values: string[]) => {\n    return values.map(v =>  epsSubstStr(epsText)(v)).join(\":\")\n}\n\nconst mvStr = (value: Move) => value === 0 ? \"L\" : \"R\"\n\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType ): string => {\n    const maxLength = (): number => {\n        let max: number = 0;\n        if (transitions !== undefined) {\n            transitions.forEach(value => {\n                value.forEach(value1 => {\n                    if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\n                        const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\n                        const ttl: number = value1.title === EPS ? 0 : value1.title.length\n                        const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\n                        max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\n                    }\n                })\n            })\n        }\n        return max\n    }\n\n    let spc = \"\"\n    const pdng_k = 7\n\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\n        spc += \" \"\n    }\n\n    const epsSubst = epsSubstStr(\"ε\")\n    const epsSubsts = epsSubstStrs(\"ε\")\n\n    spc = frmt === 'tm' ? '       ' : spc\n\n    let str = \"\" + spc\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + mvStr(v.move) + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === 'pda' || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \"\\n\" + spc\n                    }\n                })\n            })\n        }\n    }\n    return str\n}\n\n\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType): string => {\n    const epsSubst = epsSubstStr(\"eps\")\n    const epsSubsts = epsSubstStrs(\"eps\")\n\n    let str = \"\"\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + '>' + mvStr(v.move) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"pda\" || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \";\\n\"\n                    }\n                })\n            })\n        }\n    }\n\n    return str\n}\n\nexport const decorateGraph = (elements: Elements, frmt: null | ComputerType) => {\n    elements.edges.forEach((edge) => {\n        elements.edges.update({\n            id: edge.id!,\n            label: transitionsToLabel(edge.transitions, frmt)\n        })\n    })\n\n    elements.nodes.forEach((node) => {\n        const lableTokens =\n            node.label\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split('|')\n        const output = lableTokens[1] !== undefined ? lableTokens[1] : undefined \n        node.output = output \n\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        elements.nodes.update({\n            id: node.id,\n            // label: node.label ,\n            // + (node.output !== undefined ? \" | \" + node.output : \"\"),\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            },\n            borderWidth: node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default,\n            borderWidthSelected: borderWidth.highlight\n        })\n    })\n\n}\n\nexport const graphToElements = (graph: graph): Elements => {\n    let acc: Elements = {nodes: new DataSet<node, \"id\">(), edges: new DataSet<edge, \"id\">()}\n\n    graph.nodes.forEach((node) => {\n        acc.nodes.add(node)\n    })\n    graph.edges.forEach((edge) => {\n        acc.edges.add(edge)\n    })\n\n    return acc\n}\n\nexport const elementsToGraph = (elements: Elements): graph => {\n    let acc: graph = {nodes: [], edges: []}\n\n    elements.nodes.forEach((node) => {\n        acc.nodes.push(node)\n    })\n    elements.edges.forEach((edge) => {\n        acc.edges.push(edge)\n    })\n\n    return acc\n}\n\nexport const getNodeNamePrefix = (graph: graph): string => {\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\n\n    graph.nodes.forEach(node => {\n        let i = 0;\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\n            i++;\n        }\n        prefix = prefix.substring(0, i);\n    });\n\n    return prefix;\n}\n\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\n    dfa: {\n        name: \"ДКА\",\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\n        preview: \"dfa.png\",\n        defaultGraph: {\n            nodes: [\n                // {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                \n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            \n                { id: 1, x: 0, y: 0, label: 'S1', isAdmit: false, isInitial: true, isCurrent: false },\n                { id: 2, x: 100, y: 0, label: 'S2',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 3, x: 100, y: 100, label: 'S3',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 4, x: 200, y: 0, label: 'S4',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 5, x: 200, y: 100, label: 'S5',  isAdmit: true, isInitial: false, isCurrent: false },\n                { id: 6, x: 300, y: 0, label: 'S6',  isAdmit: true, isInitial: false, isCurrent: false },\n                { id: 7, x: 300, y: 100, label: 'S7',  isAdmit: false, isInitial: false, isCurrent: false },\n            ],\n            edges: [\n                // {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                { from: 1, to: 2, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 1, to: 3, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 2, to: 4, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 2, to: 5, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 3, to: 4, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 3, to: 6, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 4, to: 4, transitions: new Set([[{ title: 'a' }, { title: 'b' }]]) },\n\n                { from: 5, to: 5, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 5, to: 7, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 6, to: 6, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 6, to: 7, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 7, to: 7, transitions: new Set([[{ title: 'a' }, { title: 'b' }]]) },\n            \n            ]\n        }\n    },\n    nfa: {\n        name: \"НКА\",\n        description: \"Может находиться в нескольких состояниях одновременно\",\n        preview: \"nfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\n\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\n            ]\n        }\n    },\n    \"nfa-eps\": {\n        name: \"ε-НКА\",\n        description: \"Расширение НКА, в котором используются ε-переходы\",\n        preview: \"nfa-eps.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\n\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 7, transitions: new Set([[{title: '0'}]])},\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n            ]\n        }\n    },\n    pda: {\n        name: \"Автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([\n                        [\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\n                        ]])\n                },\n\n                {\n                    from: 1, to: 2, transitions: new Set([\n                        [\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\n                        ]])\n                },\n                {\n                    from: 2, to: 2, transitions: new Set([\n                        [\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\n                        ]])\n                },\n\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\n            ]\n        }\n    },\n    dpda: {\n        name: \"Детерминированный автомат с магазинной памятью\",\n        description: \"\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([[{title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},]])\n                },\n            ]\n        }\n    },\n    tm: {\n        name: \"Машина Тьюринга\",\n        description: \"Машина Тьюринга с одной лентой\",\n        preview: \"tm.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 0, y: 200, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n            ]\n        }\n    },\n    mealy: {\n        name: \"Автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"Автомат, с выходными символами на ребрах\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n        }\n    },\n    dmealy: {\n        name: \"Детерминированный автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n   }\n    },\n    moore: {\n        name: \"Автомат Мура\",\n        description: \"Автомат, с выходными символами в состояниях\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{ title: '1' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 3, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: '1' }]]) },\n            ]        \n        }\n    },\n    dmoore: {\n        name: \"Детерминированный автомат Мура\",\n        description: \"\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            ],\n            edges: [\n                { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n                { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            ]\n        }\n    },\n\n}\n\nexport const getCookie = (name: string) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n}","import React from \"react\";\nimport {ComputerTypeContext} from \"./App\";\n\nexport const withComputerType = (Component: typeof React.Component) => (\n    (props: any) => (\n        <ComputerTypeContext.Consumer>\n            { context => <Component computerType={context} {...props}/> }\n        </ComputerTypeContext.Consumer>\n    )\n)","import React from \"react\";\nimport {ComputerType, edge} from \"../../react-graph-vis-types\";\nimport {getTransitionsTitles, transitionsToLabel} from \"../../utils\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport Button from \"@mui/material/Button\";\nimport \"./EdgeControl.css\";\nimport Transition from \"./Transition/Transition\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport TextField from \"@mui/material/TextField\";\nimport {withComputerType} from \"../../hoc\";\nimport {EPS} from \"../../Logic/Computer\";\nimport {Move, TransitionParams} from \"../../Logic/IGraphTypes\";\nimport { TextareaAutosize } from \"@mui/material\";\n\n\ninterface EdgeControlProps {\n    edge: edge | null,\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\n    deleteEdge: (id: string) => void,\n    computerType: ComputerType | null\n    reinitComputer: (() => void)\n}\n\ninterface Rule{\n    id: number\n    value: string\n}\n\ninterface EdgeControlState {\n    prevEdgeId: string | undefined,\n    transitions: Set<TransitionParams[]>,\n    transitionsText: string,\n    displayedTransitionText: string,\n    activeTransition: TransitionParams[] | null,\n    editMode: boolean,\n    countRules?: number, \n    rules: Rule[],\n}\n\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\n    constructor(props: EdgeControlProps) {\n        super(props);\n\n        this.state = {\n            prevEdgeId: this.props.edge?.id,\n            transitions: this.props.edge?.transitions || new Set(),\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            activeTransition: null,\n            editMode: false,\n            countRules: 1,\n            rules: [\n                {id: 1, value: ' '}\n            ]\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\n\n            this.setState({\n                transitions: this.props.edge?.transitions || new Set(),\n                prevEdgeId: this.props.edge?.id,\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n                activeTransition: null,\n                editMode: false\n            });\n\n        }\n    }\n\n    selectTransition = (transition: TransitionParams[] | null): void => {\n        if (this.state.activeTransition === transition) {\n            this.setState({activeTransition: null});\n        } else {\n            this.setState({activeTransition: transition});\n        }\n    }\n\n    changeTransitions = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        this.setState({transitionsText: value});\n\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined }[] = []\n        let acc: TransitionParams[] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth })\n                })\n\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: snd, trd: undefined, fth: undefined })\n            })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            output: value.snd\n                        }\n                    )\n                }\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined })\n                })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            stackDown: value.snd === 'eps' ? EPS : value.snd,\n                            stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                            move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n                        }\n                    )\n                }\n            })\n        }\n\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\n        console.log(\"ALLLOO\")\n        /////\n        // await this.props.reinitComputer()\n        ///\n        this.setState({transitionsText: value\n            , transitions: transitions\n        }, () => this.props.reinitComputer());\n    }\n\n    deleteEdge = async (): Promise<void> => {\n        if (this.props.edge !== null) {\n            this.props.deleteEdge(this.props.edge.id!);\n        }\n        await this.props.reinitComputer()\n\n    }\n    \n    private addInstruction(value: string) {\n        let newRow = {id: this.state.rules.length, value: value};\n        this.setState({rules: this.state.rules.concat(newRow)});\n    }\n    \n    changeEditMode = () => {\n         this.setState({editMode: !this.state.editMode});\n         this.updateTransitions();\n\n    }\n    \n    updateTransitions = async () => {\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined \n            out: string | undefined\n        } [] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth, out: undefined })\n                })\n\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: undefined, trd: undefined, fth: undefined, out: snd })\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined, out: undefined })\n                })\n        }\n\n\n        let acc: TransitionParams[] = []\n        accumulator.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                        move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined,\n                        output: value.out,\n                        \n                    }\n                )\n            }\n        })\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.setState({\n            transitionsText: getTransitionsTitles(transitions, this.props.computerType),\n            transitions: transitions\n        })\n        ///\n        await this.props.reinitComputer()\n        ///\n    }\n\n    deleteTransition = (): void => {\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\n            const transitions = this.state.transitions;\n            transitions.delete(this.state.activeTransition);\n\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\n            this.setState({transitions: transitions, transitionsText: getTransitionsTitles(transitions, this.props.computerType)});\n        }\n    }\n\n\n\n    render() {\n        return (\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\n                <div className=\"edge-control__container\">\n                    <div className=\"edge-control__item edge-control__transitions\">\n                        {\n                                <TextField\n                                    id=\"filled-multiline-static\"\n                                    multiline\n                                    rows={3}\n                                    variant=\"standard\"\n                                    label=\"Переходы\"\n                                    size=\"small\"\n                                    value={this.state.transitionsText}\n                                    onChange={this.changeTransitions}\n                                    helperText={this.props.computerType === \"nfa-eps\" || \"pda\"|| \"dpda\" ? 'Список символов или \"eps\" через запятую' : \"Список символов через запятую\"}\n                                    onBlur={this.updateTransitions}\n                                />\n                        }\n\n                        <div className=\"edge-control__edit-transitions\"\n                             onClick={this.changeEditMode}>\n                            <EditIcon/>\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"edge-control__item\">\n                        <Button\n                            onClick={this.deleteEdge}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </div>\n            </ControlWrapper>\n            );\n        }\n}\n\nexport default withComputerType(EdgeControl);","import React, { ChangeEvent } from \"react\";\n\nimport { node } from \"../../react-graph-vis-types\";\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\n\nexport const History = (props: {\n    startNode: node, history: {\n        node: node;\n        note: string[] | undefined;\n    }[][], historyEndRef: any\n}) => {\n    return (\n        <div className=\"run-control__item run-control__history\">\n            <div className=\"run-control__history__header\">\n                <Typography variant=\"h6\">История</Typography>\n            </div>\n            {\n                props.history.length !== 0 ?\n                    <div className=\"run-control__history__scroll\">\n\n\n                        {\n                            props.startNode !== undefined\n                                ?\n                                <div className=\"run-control__history__row\" key={0}>\n                                    <span className=\"run-control__history__index\">{0}</span>\n                                    {\n                                        <Tooltip\n                                            title={<Typography className=\"display-linebreak\">{\"~\"}</Typography>}>\n                                            <div\n                                                className=\"run-control__history__node\"\n                                                style={{ border: `${props.startNode.isInitial ? \"#0041d0\" : props.startNode.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                            >\n                                                {props.startNode!.label}\n\n                                            </div>\n                                        </Tooltip>\n                                    }\n\n                                </div>\n                                : <div />\n                        }\n\n                        {\n                            props.history.map((nodes, index) => (\n                                <div className=\"run-control__history__row\" key={index}>\n                                    <span className=\"run-control__history__index\">{index + 1}</span>\n                                    {\n                                        nodes.map((node, index) => (\n                                            <Tooltip\n                                                title={<Typography className=\"display-linebreak\">{node.note !== undefined ? node.note.join('\\n') : ''}</Typography>}>\n                                                <div\n                                                    className=\"run-control__history__node\"\n                                                    style={{ border: `${node.node.isInitial ? \"#0041d0\" : node.node.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                                >\n                                                    {node.node.label}\n\n                                                </div>\n                                            </Tooltip>\n                                        ))\n                                    }\n\n                                </div>\n                            ))\n\n                        }\n                        <div>\n                            <div ref={props.historyEndRef} />\n                        </div>\n\n                    </div>\n                    :\n                    <div className=\"run-control__history__placeholder\">\n                        Используйте пошаговый запуск, чтобы наблюдать за историей\n\n                    </div>\n            }\n\n\n        </div>)\n}\n","import React, { ChangeEvent } from \"react\";\nimport { ComputerType, graph, histNode, node } from \"../../react-graph-vis-types\";\nimport { DFA } from \"../../Logic/DFA\";\nimport { isEqual } from \"lodash\";\nimport { withComputerType } from \"../../hoc\";\nimport { Computer, EPS } from \"../../Logic/Computer\";\nimport { NFA } from \"../../Logic/NFA\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport \"./RunControl.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { EpsilonNFA } from \"../../Logic/EpsilonNFA\";\nimport { PDA } from \"../../Logic/PDA\";\nimport { TM } from \"../../Logic/TM\";\nimport { Elements } from \"../../App\";\nimport { decorateGraph, elementsToGraph, graphToElements } from \"../../utils\";\nimport { HistUnit, Output, Step } from \"../../Logic/Types\";\nimport { GraphEval, GraphEvalMultiStart, Move, NodeCore } from \"../../Logic/IGraphTypes\";\nimport { Mealy } from \"../../Logic/Mealy\";\nimport { Moore } from \"../../Logic/Moore\";\nimport { start } from \"repl\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nimport { NonDeterministic, NonMinimizable } from \"../../Logic/Exceptions\";\nimport { DPDA } from \"../../Logic/DPDA\";\nimport { DMealy } from \"../../Logic/DMealy\";\nimport { DMoore } from \"../../Logic/DMoore\";\nimport { isAbsolute } from \"path\";\nimport { History } from \"./History\"\n\ninterface runControlProps {\n    computerType: ComputerType,\n    elements: Elements,\n    treeElems: Elements,\n    historyEndRef: React.RefObject<HTMLDivElement>,\n    byEmptyStack: boolean,\n    changerStack: () => void,\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\n    updMem: (mem: string[] | undefined, ptr: number | undefined) => void\n    network: any\n    createHistNode: (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => void\n    createHistEdge: (from: number, to: number, by: any) => void\n    getLastHistNodeId: () => number\n    resetHistTree: () => void\n    setInit: (f: () => void) => void\n    setNfaToDfa: (f: () => void) => void\n    setMinimizeDfa: (f: () => void) => void\n    setMooreToMealy: (f: () => void) => void\n    setMealyToMoore: (f: () => void) => void\n    setChangerByStack: (f: () => void) => void\n    setRun: (f: () => void) => void\n    setStep: (f: () => void) => void\n    setReset: (f: () => void) => void\n    setHistory: (jsx: () => JSX.Element) => void\n    updateElements: (elements: Elements) => void\n    setComputerType: (type: null | ComputerType) => void\n    setResettedStatus: (status: boolean) => void\n    setByEmptyStack: (byEmptyStack: boolean) => void\n    setIsNonDetermenistic: (v: boolean) => void\n    setIsNonMinimizable: (v: boolean) => void\n    treeContextInfo: () => string\n    treeVisible: () => boolean\n}\n\ninterface runControlState {\n    input: string,\n    result?: boolean,\n    computer: Computer | undefined,\n    editMode: boolean,\n    currentInputIndex: number,\n    history: { node: node, note: string[] | undefined }[][],\n    byEmptyStack: boolean,\n    wasRuned: boolean,\n    memory: string[] | undefined,\n    gElements: graph,\n    startNode: node | undefined,\n    lastHistUnits: nodeTree[],\n    startStatements: NodeCore[]\n}\n\ntype ButtonSource = { name: () => string, onClick: () => void }\n\nconst creatButtons = (buttons: ButtonSource[][]) => {\n    const buttonsComp = buttons.reduce((acc: any[], buttons) => {\n        acc.push(\n            <div className=\"run-control__item run-control__buttons\">\n                {\n                    buttons.map((button) =>\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={\n                                    () => { button.onClick() }\n                                }\n                            >\n                                {button.name()}\n                            </Button>\n                        </div>\n                    )\n\n                }\n            </div>\n        )\n\n        return acc\n    }, [])\n    return (\n        <div>\n            {buttonsComp}\n        </div>\n    )\n}\n\ntype nodeTree = {\n    id: number,\n    idd: number,\n    stack?: string[],\n    move?: Move,\n    by?: string,\n    from?: NodeCore,\n    stackDown?: string,\n    output?: Output,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean,\n    isCurrent: boolean\n}\n\nclass RunControl extends React.Component<runControlProps, runControlState> {\n\n    constructor(props: runControlProps) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            result: undefined,\n            computer: undefined,\n            editMode: true,\n            currentInputIndex: -1,\n            history: [],\n            byEmptyStack: false,\n            wasRuned: false,\n            memory: undefined,\n            gElements: elementsToGraph(this.props.elements),\n            startNode: undefined,\n            lastHistUnits: [],\n            startStatements: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.setInit(() => {\n            let haveEmpty = false\n            this.props.elements.edges.forEach(edge => {\n                if (edge.label === \"\") {\n                    haveEmpty = true\n                }\n            })\n            if (!haveEmpty) {\n                return this.initializeComputer()\n            }\n        })\n        this.props.setNfaToDfa(this.nfaToDfa)\n        this.props.setMinimizeDfa(this.minimizeDfa)\n        this.props.setMooreToMealy(this.mooreToMealy)\n        this.props.setMealyToMoore(this.mealyToMoore)\n        this.props.setChangerByStack(this.admitByStack)\n        this.props.setRun(this.run)\n        this.props.setStep(this.step)\n        this.props.setReset(this.reset)\n        this.props.setHistory(() =>\n            <History\n                startNode={this.state.startNode!}\n                history={this.state.history!}\n                historyEndRef={this.props.historyEndRef}\n            />)\n        this.initializeComputer()\n    }\n\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\n        if (this.computerShouldBeUpdated(elementsToGraph(prevProps.elements), elementsToGraph(this.props.elements))) {\n            this.initializeComputer();\n        }\n\n    }\n\n    computerShouldBeUpdated = (prev: graph, current: graph): boolean => {\n        const compareNodes = (): boolean => {\n            if (prev.nodes.length !== current.nodes.length) {\n                return true;\n            }\n\n            return prev.nodes.some((prev, index) => {\n                const curr = current.nodes[index];\n                return prev.id !== curr.id ||\n                    prev.isAdmit !== curr.isAdmit ||\n                    prev.isInitial !== curr.isInitial;\n            })\n        }\n\n        const compareEdges = (): boolean => {\n            if (prev.edges.length !== current.edges.length) {\n                return true;\n            }\n\n            return prev.edges.some((prev, index) => {\n                const curr = current.edges[index];\n                return prev.id !== curr.id ||\n                    prev.from !== curr.from ||\n                    prev.to !== curr.to ||\n                    !isEqual(curr.transitions, prev.transitions)\n            });\n        }\n        return compareEdges() || compareNodes()\n    }\n\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node[], input: string[]): Computer | undefined => {\n        switch (computerType) {\n            case \"dfa\":\n                try {\n                    return new DFA(graph, initialNode, input);\n                } catch (e) {\n                    return undefined;\n                }\n            case \"nfa\":\n                return new NFA(graph, initialNode, input);\n            case \"nfa-eps\":\n                return new EpsilonNFA(graph, initialNode, input);\n            case \"pda\":\n                return new PDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"dpda\":\n                return new DPDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"tm\":\n                return new TM(graph, initialNode, input);\n            case \"mealy\":\n                return new Mealy(graph, initialNode, input);\n            case \"dmealy\":\n                return new DMealy(graph, initialNode, input);\n            case \"moore\":\n                return new Moore(graph, initialNode, input);\n            case \"dmoore\":\n                return new DMoore(graph, initialNode, input);\n        }\n\n    }\n\n    initializeComputer = () => {\n        console.warn(\"Reinitializing computer\");\n\n        this.setState({ gElements: elementsToGraph(this.props.elements) }, () => {\n            this.props.resetHistTree()\n\n            const initialNode: node[] = elementsToGraph(this.props.elements).nodes.filter(node => node.isInitial);\n            const input = this.state.input.split(\"\");\n\n            if (initialNode === undefined) {\n                console.warn(\"There is no initial node. Computer will not be initialized\");\n                return;\n            }\n\n            this.setState({\n                computer: this.getComputer(this.props.computerType, this.state.gElements, initialNode, input),\n                result: undefined\n            }, async () => {\n\n                const tmp: nodeTree[] = []\n\n                const startStmts = this.state.computer !== undefined\n                    ? this.state.computer.getStartStatements()\n                    : []\n\n                startStmts.forEach((v, index) => {\n                    const paddingTreeId = index + 1\n\n                    tmp.push({\n                        stack: v.stack ? [...v.stack] : [],\n                        from: v.from!,\n                        by: v.by,\n                        stackDown: v.stackDown,\n                        label: `${v.id}`,\n                        isAdmit: v.isAdmit,\n                        isInitial: false,\n                        isCurrent: false,\n                        id: this.props.getLastHistNodeId() + paddingTreeId,\n                        idd: v.id\n                    })\n                })\n\n                if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        const label = gNode?.label + '\\n―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                        // + '\\n' + `${(this.props.getLastHistNodeId() + 1)}` + \n                        this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                } else {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                }\n                await this.setState({ lastHistUnits: tmp })\n            });\n\n        })\n\n    }\n\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        const input = event.target.value;\n\n        this.reset();\n        this.state.computer?.setInput(input.split(\"\"));\n\n        this.setState({ input: input });\n    }\n\n\n\n    drawTreeLayot = (nodes: NodeCore[], pred: nodeTree[], tmp: nodeTree[]) => {\n        nodes.forEach((v, index) => {\n            const paddingTreeId = index + 1\n            const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.id)\n\n            tmp.push({\n                stack: v.stack ? [...v.stack] : [],\n                from: v.from!,\n                by: v.by,\n                stackDown: v.stackDown,\n                move: v.move,\n                output: v.output,\n                label: `${v.id}`,\n                isAdmit: v.isAdmit,\n                isInitial: gNode!.isInitial,\n                isCurrent: gNode!.isCurrent,\n                id: this.props.getLastHistNodeId() + paddingTreeId,\n                idd: v.id\n            })\n        })\n\n        if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                const label = gNode?.label + '\\n' + '―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        } else {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        }\n\n\n        const letter = (l: any) => l === EPS ? 'ε' : l\n\n        const stackDwn = (stDwn: any) => this.props.computerType === 'pda' || this.props.computerType === 'dpda'\n            ? ', ' + letter(stDwn)\n            : ''\n\n        const move = (mv: Move | undefined) => this.props.computerType === 'tm'\n            ? mv === Move.L ? ', L' : \", R\"\n            : ''\n\n        const output = (out: any) => this.props.computerType === 'mealy' || this.props.computerType === 'dmealy'\n            ? ', ' + out\n            : ''\n\n        const txt = (l: any, stDwn: any, mv: any, out: any) => letter(l) + stackDwn(stDwn) + move(mv) + output(out)\n\n        const bySymbRules = tmp.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const from = () => {\n                switch (this.props.computerType) {\n                    case 'tm':\n                    case 'moore':\n                    case 'dmoore':\n                    case 'mealy':\n                    case 'dmealy':\n                        return pred.filter((p) => v.from && p.idd === v.from?.id)[0].id;\n                    default:\n                        return pred.filter((p) => v.from && p.idd === v.from?.id && p.stack?.toString === v.from.stack?.toString)[0].id\n                }\n            }\n            acc.push({ from: from(), to: [v.id], by: txt(v.by, v.stackDown, v.move, v.output) })\n            return acc\n        }, [])\n\n        console.log('\\n\\n\\n')\n\n        bySymbRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        this.setState({ lastHistUnits: tmp })\n\n    }\n\n    treeEps = (byEpsPred: NodeCore[], byLetter: NodeCore[], byEpsAfter: NodeCore[]) => {\n        console.log('\\n')\n        console.log('EPS>>>', byEpsPred)\n        console.log('LTR>>>', byLetter)\n        console.log('EPS>>>', byEpsAfter)\n        console.log('\\n')\n\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byEpsPred, this.state.lastHistUnits, tmp)\n        const tmp1: nodeTree[] = []\n        this.drawTreeLayot(byLetter, tmp, tmp1)\n        const tmp2: nodeTree[] = []\n        this.drawTreeLayot(byEpsAfter, tmp1, tmp2)\n    }\n\n    tree = (byLetter: NodeCore[]) => {\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n    }\n\n    step = async () => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        this.props.setResettedStatus(true)\n\n\n        if (this.state.wasRuned) {\n            this.setState({ wasRuned: false });\n            this.reset();\n            await this.props.resetHistTree()\n        }\n\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\n\n        try {\n            const stepResult: Step = this.state.computer.step()\n\n            if (stepResult.nodes.length === 0) return;\n\n            this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\n            this.props.updMem(stepResult.memory, stepResult.pointer)\n\n            let result = undefined;\n            if (stepResult.counter === this.state.input.length) {\n                result = stepResult.isAdmit\n            } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\n                result = false;\n            }\n\n            const nodes = stepResult.nodes\n                .map(nodeCore => this.state.gElements.nodes.find(node => node.id === nodeCore.id))\n                .filter((node): node is node => node !== undefined);\n\n            const byEpsPred = stepResult.byEpsPred ? stepResult.byEpsPred : []\n\n            const byLetter = stepResult.byLetter ? stepResult.byLetter : []\n\n            const byEpsAfter = stepResult.byEpsAfter ? stepResult.byEpsAfter : []\n\n            if (this.props.computerType !== 'tm' && this.state.computer.haveEpsilon()) {\n                console.log('byEpsAfter>>>', byEpsAfter)\n                this.treeEps(byEpsPred, byLetter, byEpsAfter)\n            } else {\n                console.log('byLetter', byLetter)\n                const tmp: nodeTree[] = []\n                this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n            }\n\n            const _nodes = nodes.map((e, i) => {\n                const stack = stepResult.nodes[i].stack\n                return {\n                    node: e,\n                    note: stack !== undefined\n                        ? stack.reverse()\n                        : stepResult.output !== undefined\n                            ? stepResult.output!\n                            : undefined\n                }\n            })\n\n            this.setState({\n                result: result,\n                currentInputIndex: this.state.currentInputIndex + 1,\n                history: [...this.state.history, _nodes],\n                memory: stepResult.memory,\n            }, () => {\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n            });\n\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n            else {\n                console.log(e)\n            }\n        }\n\n    }\n\n    reset = (): void => {\n        this.state.computer?.restart();\n        this.props.changeStateIsCurrent([], true);\n        this.setState({\n            result: undefined,\n            currentInputIndex: -1,\n            history: [],\n        },\n            () => {\n                this.initializeComputer()\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n            }\n        );\n        this.state.computer?.setInput(this.state.input.split(\"\"))\n        this.props.setResettedStatus(false)\n        this.props.resetHistTree()\n    }\n\n    run = async (): Promise<void> => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        await this.reset();\n\n        try {\n            const result = this.state.computer.run();\n\n            const histTrace = result.histTrace ? result.histTrace : []\n\n            histTrace.forEach(async (histStep) => {\n                const byEpsPred = histStep.byEpsPred ? histStep.byEpsPred : []\n\n                const byLetter = histStep.byLetter ? histStep.byLetter : []\n\n                const byEpsAfter = histStep.byEpsAfter ? histStep.byEpsAfter : []\n\n                if (this.state.computer && this.state.computer.haveEpsilon()) {\n                    this.treeEps(byEpsPred, byLetter, byEpsAfter)\n                } else {\n                    this.tree(byLetter)\n                }\n            })\n\n            this.setState({ result: result.isAdmit, currentInputIndex: -1, history: [] });\n            this.setState({ wasRuned: true })\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    nfaToDfa = (): void => {\n        const nfaToDfa = this.state.computer!.nfaToDfa()\n        const nodes = nfaToDfa.nodes.map((v, it) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: v.id.toString(),\n            isInitial: it === 0,\n            isCurrent: false\n        }))\n        const edges = nfaToDfa.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"dfa\")\n        })\n    }\n\n    admitByStack = (): void => {\n        const curStbyEmp = this.state.byEmptyStack;\n        this.setState({ byEmptyStack: !curStbyEmp });\n        this.props.setByEmptyStack(!curStbyEmp)\n        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\n        this.reset();\n    }\n\n    minimizeDfa = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        try {\n            const miniDFA: GraphEval = this.state.computer!.minimizeDfa()\n            const nodes = miniDFA.graphcore.nodes.map((v) => ({\n                id: v.id,\n                isAdmit: v.isAdmit,\n                label: 'G' + v.id.toString(),\n                isInitial: v.id === miniDFA.start.id,\n                isCurrent: false\n            }))\n            const edges = miniDFA.graphcore.edges\n            const gElements = {\n                nodes: nodes,\n                edges: edges\n            }\n\n            this.setState({\n                gElements: gElements\n            }, () => {\n                this.props.updateElements(graphToElements(gElements))\n            })\n        } catch (e) {\n            if (e instanceof NonMinimizable) {\n                this.props.setIsNonMinimizable(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    mooreToMealy = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const mealy: GraphEvalMultiStart = this.state.computer!.mooreToMealy()\n\n        const starts = mealy.start.map((v) => v.id)\n\n        const nodes = mealy.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString(),\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = mealy.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"mealy\")\n        })\n    }\n\n    mealyToMoore = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const miniDFA: GraphEvalMultiStart = this.state.computer!.mealyToMoore()\n\n        const starts = miniDFA.start.map(v => v.id)\n\n        const nodes = miniDFA.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString() + ' | ' + v.output,\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = miniDFA.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"moore\")\n        })\n    }\n\n    private defaultButtonsLine: ButtonSource[] = [\n        { name: () => 'Шаг', onClick: () => this.step() },\n        { name: () => 'Запуск', onClick: () => this.run() },\n        { name: () => 'Сбросить', onClick: () => this.reset() },\n    ]\n\n    private defaultButtons: ButtonSource[][] = [this.defaultButtonsLine]\n\n    private buttonsTree: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonNfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => 'ДКА', onClick: () => this.nfaToDfa() }],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n    ]\n\n\n    private buttonDfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => 'Минимизировать', onClick: () => this.minimizeDfa() }],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n    ]\n\n\n    private buttonMealy: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n        [{ name: () => 'Мур', onClick: () => this.mealyToMoore() }],\n    ]\n\n    private buttonMoore: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n        [{ name: () => 'Мили', onClick: () => this.mooreToMealy() }],\n    ]\n\n    private buttonsByStackByState: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [\n            { name: () => this.props.byEmptyStack ? \"По стеку\" : \"По состоянию\", onClick: () => this.props.changerStack() },\n            { name: this.props.treeContextInfo, onClick: this.props.treeVisible }\n        ],\n    ]\n\n    private buttonsNoRun: ButtonSource[][] = [\n        [\n            { name: () => 'Шаг', onClick: () => this.step() },\n            { name: () => 'Сбросить', onClick: () => this.reset() }\n        ],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private getButtons = () => {\n        switch (this.props.computerType) {\n            case \"dfa\":\n                return creatButtons(this.buttonDfa)\n            case \"nfa\": \n                return creatButtons(this.buttonNfa)\n            case \"nfa-eps\":\n                return creatButtons(this.buttonsTree)\n            case \"tm\":\n                return creatButtons(this.buttonsNoRun)\n            case \"pda\":\n            case \"dpda\":\n                return creatButtons(this.buttonsByStackByState)\n            case \"mealy\":\n            case \"dmealy\": \n                return creatButtons(this.buttonMealy)\n            case \"moore\":\n            case \"dmoore\":\n                return creatButtons(this.buttonMoore)\n            default:\n                return creatButtons(this.buttonsTree)\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title={\"Запуск\"}>\n                <div>\n\n                    <div className=\"run-control__item run-control__input__row\">\n                        {\n                            this.state.editMode\n                                ?\n                                <TextField\n                                    label=\"Входная строка\"\n                                    size=\"small\"\n                                    value={this.state.input}\n                                    onChange={this.onInputChanged}\n                                    onBlur={() => {\n                                        this.state.input.length && this.setState({ editMode: false }, () => this.initializeComputer())\n                                    }}\n                                />\n                                :\n                                <div\n                                    className=\"run-control__input-value\"\n                                    onClick={() => {\n                                        this.setState({ editMode: true });\n                                    }}\n                                >\n                                    {\n                                        Array.from(this.state.input).map((char, index) => (\n                                            <span\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\n                                                key={index}\n                                            >\n                                                {char}\n                                            </span>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"run-control__result\">\n                            {\n                                this.state.result === undefined ? null :\n                                    this.state.result\n                                        ? <DoneIcon style={{ color: \"var(--commerce)\" }} />\n                                        : <CloseIcon style={{ color: \"var(--destructive)\" }} />\n                            }\n                        </div>\n\n                    </div>\n                    {this.getButtons()}\n\n\n                </div>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nconst itemName = \"saves\";\n\nexport default class BrowserSavesManager implements SavesManager {\n    getSavesMeta(): Promise<SaveMeta[]> {\n        let saves = BrowserSavesManager.getSaves();\n\n        return new Promise<SaveMeta[]>(function (resolve) {\n                resolve(saves);\n            }\n        )\n    }\n\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        let saves = BrowserSavesManager.getSaves();\n\n        let save = saves.find(save => save.id == saveMeta.id);\n\n        return new Promise(function (resolve) {\n            resolve(save || null);\n        });\n    }\n\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        const saves = BrowserSavesManager.getSaves();\n        const next_id = (Math.max(...saves.map(save => Number(save.id))) + 1).toString();\n        const save_index = saves.findIndex(save => save.name == name);\n        const save = {id: \"0\", name: name, save: {graph: graph, type: type}};\n\n        if (save_index == -1) {\n            save.id = next_id;\n            saves.push(save);\n        } else {\n            save.id = saves[save_index].id;\n            saves[save_index] = save;\n        }\n\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        localStorage.setItem(itemName, saves_json);\n\n        return new Promise(function (resolve) {\n            resolve();\n        });\n    }\n\n    private static getSaves(): Save[] {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        let saves: Save[] = [];\n\n        try {\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\n        } catch (error) {\n            console.warn(\"Invalid saves in local storage: \" + error);\n            return [];\n        }\n\n        return saves;\n    }\n}","import {getCookie} from \"../utils\";\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\";\n\nexport function getAuthHeaders(): Headers {\n    const headers = new Headers();\n\n    headers.set(\"Authorization\", `Bearer ${getCookie(\"jwt\")}`);\n\n    return headers;\n}\n\nexport function getParams(headers: Headers): RequestInit {\n    return {\n        method: \"GET\",\n        headers: headers,\n    };\n}\n\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\n    headers.set(\"Content-Type\", \"application/json\");\n\n    return {\n        method: \"POST\",\n        headers: headers,\n        body: body,\n    };\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport {SaveModel} from \"../Models/SaveModel\";\n\nexport default function ApiGetSaves(onAuthFailed: () => void): Promise<SaveModel[]> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type GetSaveRequest = {\n    id: string,\n};\n\nexport type GetSaveResponse = {\n    id: string,\n    name: string,\n    data: string,\n};\n\nexport default function ApiGetSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${request.id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\n\nexport type SaveRequest = {\n    name: string,\n    data: string,\n};\n\nexport default function ApiSave(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const body = JSON.stringify(request);\n        const headers = getAuthHeaders();\n        const params = postParams(headers, body);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nimport ApiGetSaves from \"../Api/apiGetSaves\";\nimport ApiGetSave, {GetSaveRequest} from \"../Api/apiGetSave\";\nimport ApiSave, {SaveRequest} from \"../Api/apiSave\";\nimport {SaveModel} from \"../Models/SaveModel\";\n\nexport default class CloudSavesManager implements SavesManager {\n    private readonly onAuthFailed;\n\n    constructor(onAuthFailed: () => void) {\n        this.onAuthFailed = onAuthFailed;\n    }\n\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        const request: GetSaveRequest = {\n            id: saveMeta.id\n        };\n\n        let save = null;\n\n        try {\n            const response = await ApiGetSave(request, this.onAuthFailed);\n\n            save = {\n                id: response.id,\n                name: response.name,\n                save: JSON.parse(response.data),\n            };\n        } catch (error) {\n            console.error(error);\n        }\n\n        return save;\n    }\n\n    async getSavesMeta(): Promise<SaveMeta[]> {\n        let saves: SaveModel[] = [];\n\n        try {\n            saves = await ApiGetSaves(this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n\n        return saves.map(x => {\n            const saveMeta: SaveMeta = {\n                id: x.id,\n                name: x.name\n            };\n            return saveMeta;\n        });\n    }\n\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        const serialized_save = JSON.stringify({\n            graph: graph,\n            type: type\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        const request: SaveRequest = {\n            name: name,\n            data: serialized_save\n        };\n\n        try {\n            await ApiSave(request, this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\nimport {computersInfo} from \"../../utils\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nimport \"./WelcomePopout.css\";\nimport {IconButton} from \"@mui/material\";\n\nexport interface WelcomePopoutProps {\n    open: boolean,\n    onClose: () => void,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n}\n\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\n    {\n        open,\n        onClose,\n        onAuthFailed,\n        changeComputerType\n    }) => {\n    const browserSavesManager = new BrowserSavesManager();\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onCreateTemplateClicked = (type: ComputerType) => {\n        changeComputerType(type, null);\n        onClose();\n    }\n\n    const onCreateEmptyClicked = (type: ComputerType) => {\n        changeComputerType(type, {nodes: [], edges: []});\n        onClose();\n    }\n\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await cloudSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await browserSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const updateCloudSavesMeta = async () => {\n        setLoadingCloudSavesMeta(true);\n\n        const savesMeta = await cloudSavesManager.getSavesMeta();\n        setCloudSavesMeta(savesMeta);\n\n        setLoadingCloudSavesMeta(false);\n    }\n\n    const updateBrowserSavesMeta = async () => {\n        const savesMeta = await browserSavesManager.getSavesMeta();\n        setBrowserSavesMeta(savesMeta);\n    }\n\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\n\n    useEffect(() => {\n        if (open) {\n            updateBrowserSavesMeta();\n            updateCloudSavesMeta();\n        }\n    }, [open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <p>Симулятор автоматов</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <Paper\n                    className=\"welcome-popout__body\"\n                    variant=\"outlined\"\n                >\n                    <List dense>\n                        {\n                            cloudSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в облаке\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            loadingCloudSavesMeta\n                                ?\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n                                </div>\n                                :\n                                cloudSavesMeta.length !== 0 ?\n                                    cloudSavesMeta.map(saveMeta => (\n                                        <ListItem\n                                            key={saveMeta.id}\n                                            secondaryAction={\n                                                <Button\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\n                                                >\n                                                    Открыть\n                                                </Button>\n                                            }\n                                        >\n                                            <ListItemText>\n                                                {saveMeta.name}\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))\n                                    : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в браузере\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                browserSavesMeta.map(saveMeta => (\n                                    <ListItem\n                                        key={saveMeta.id}\n                                        secondaryAction={\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\n                                            >\n                                                Открыть\n                                            </Button>\n                                        }\n                                    >\n                                        <ListItemText>\n                                            {saveMeta.name}\n                                        </ListItemText>\n                                    </ListItem>\n                                ))\n                                : null\n                        }\n\n                        <ListSubheader>\n                            Создать новый вычислитель\n                        </ListSubheader>\n                        {\n                            Object.entries(computersInfo).map(entry => (\n                                <ListItem\n                                    key={entry[1].name}\n                                    secondaryAction={\n                                        <div>\n                                            <Button\n                                                className=\"welcome-popout__create-empty-button\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать пустым\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать\n                                            </Button>\n                                        </div>\n                                    }\n                                >\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Paper>\n\n                <div className=\"welcome-popout__footer\">\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\n                    </IconButton>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default WelcomePopout;\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport \"./SavingPopout.css\";\n\nexport interface SavingPopoutProps {\n    open: boolean,\n    onClose: () => void,\n    isLogin: boolean,\n    onAuthFailed: () => void,\n\n    computerType: ComputerType,\n    graph: graph,\n}\n\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\n    {\n        open,\n        onClose,\n        isLogin,\n        onAuthFailed,\n        graph,\n        computerType\n    }) => {\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\n        value = value || savesOrigin;\n        setSavesOrigin(value);\n    }\n\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\n        setSaveName(saveMeta.name);\n    }\n\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSaveName(value);\n    }\n\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\n        switch (savesOrigin) {\n            case \"cloud\":\n                cloudSavesManager.save(saveName, graph, computerType);\n                break;\n            case \"browser\":\n                browserSavesManager.save(saveName, graph, computerType);\n                break;\n            default:\n                break;\n        }\n\n        updateNames();\n        onClose();\n    }\n\n    const updateNames = async () => {\n        setLoadingSavesMeta(true);\n\n        let savesMeta: SaveMeta[] = [];\n\n        switch (savesOrigin) {\n            case \"cloud\":\n                savesMeta = await cloudSavesManager.getSavesMeta();\n                break;\n            case \"browser\":\n                savesMeta = await browserSavesManager.getSavesMeta();\n                break;\n            default:\n                setSavesMeta([]);\n                break;\n        }\n\n        setSavesMeta(savesMeta);\n        setLoadingSavesMeta(false);\n    }\n\n    const updateDefaultOrigin = () => {\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\n    }\n\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\n    const [saveName, setSaveName] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (open) {\n            updateDefaultOrigin();\n            updateNames();\n        }\n    }, [open]);\n\n    useEffect(() => {\n        updateNames();\n    }, [savesOrigin]);\n\n    useEffect(() => {\n        setSaveName(\"\");\n    }, [savesOrigin, open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                <p>Сохранение</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <div className=\"saving-popout__body\">\n                    <div className=\"saving-popout__body__sidebar\">\n                        <ToggleButtonGroup\n                            orientation=\"vertical\"\n                            exclusive\n                            value={savesOrigin}\n                            onChange={onSavesOriginChanged}\n                        >\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n\n                    <div className=\"saving-popout__body__main\">\n                        <Paper\n                            className=\"saving-popout__body__main__paper\"\n                            variant=\"outlined\"\n                        >\n                            {\n                                loadingSavesMeta\n                                    ?\n                                    <div className=\"saving-popout__body__main__skeleton\">\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n                                    </div>\n                                    :\n                                    <List dense>\n                                        {\n                                            savesMeta.map(saveMeta => (\n                                                <ListItem\n                                                    key={saveMeta.id}\n                                                    disablePadding\n                                                >\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\n                                                        <ListItemText primary={saveMeta.name}/>\n                                                    </ListItemButton>\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                            }\n\n                        </Paper>\n                    </div>\n                </div>\n\n                <TextField\n                    className=\"saving-popout__save-name-input\"\n                    variant=\"standard\"\n                    size=\"small\"\n                    label=\"Имя сохранения\"\n                    value={saveName}\n                    onChange={onSaveNameChanged}\n                />\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onSaveClicked}\n                    >\n                        Сохранить\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        Отмена\n                    </Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default SavingPopout;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignInRequest = {\n    email: string,\n    password: string,\n};\n\nexport default function ApiSignIn(request: ApiSignInRequest): Promise<string> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signin\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"manual\",\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.text();\n                } else {\n                    reject();\n                }\n            })\n            .then(text => {\n                if (!text) {\n                    reject();\n                } else {\n                    resolve(text);\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./LoginPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignIn from \"../../../Api/apiSignIn\";\n\ninterface LoginPageProps {\n}\n\nconst LoginPage: FC<LoginPageProps> = ({}) => {\n    const authEndpoint = process.env.REACT_APP_BACKEND_BASE_URL + \"/auth\";\n\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onLoginClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n        };\n\n        await ApiSignIn(request)\n            .then(jwt => navigate(`/success-login?jwt=${jwt}`))\n            .catch(e => setError(`Не удалось войти в аккаунт (${e})`));\n    }\n\n    const onRegisterClicked = () => {\n        navigate('/register');\n    }\n\n    const onSignInWithExternalProviderClicked = (provider: string) => {\n        window.location.href = authEndpoint + `/external/signin?provider=${provider}`;\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Вход в аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}/>\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}/>\n\n                    <Button variant=\"contained\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Google\")}\n                    >\n                        Войти через аккаунт Google\n                    </Button>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Yandex\")}\n                    >\n                        Войти через аккаунт Яндекс\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default LoginPage;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignUpRequest = {\n    email: string,\n    password: string,\n    about: string,\n};\n\nexport default function ApiSignUp(request: ApiSignUpRequest): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signup\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (response.ok) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./RegisterPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignUp from \"../../../Api/apiSignUp\";\n\ninterface RegisterPageProps {\n}\n\nconst RegisterPage: FC<RegisterPageProps> = ({}) => {\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [about, setAbout] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setAbout(value);\n    }\n\n    const onRegisterClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n            about: about,\n        };\n\n        await ApiSignUp(request)\n            .then(() => navigate(\"/registered\"))\n            .catch(() => setError(\"Не удалось зарегистрировать нового пользователя\"));\n    }\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password, about]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Новый аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}\n                    />\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}\n                    />\n\n                    <TextField label=\"О себе\"\n                               type=\"text\"\n                               multiline\n                               rows={3}\n                               value={about}\n                               onChange={onAboutChanged}\n                    />\n\n                    <Button variant=\"contained\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisterPage;","import React from \"react\";\n\nimport {useNavigate} from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport \"./AppHeader.css\";\n\nexport interface AppHeaderProps {\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\n    onLogoutButtonClicked: () => void,\n    isLogin: boolean,\n}\n\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\n    {\n        onMenuButtonClicked,\n        onSaveButtonClicked,\n        onLogoutButtonClicked,\n        isLogin,\n    }) => {\n    const navigate = useNavigate();\n\n    const onSignInButtonClicked = () => {\n        navigate(\"/login\");\n    }\n\n    const onSignOutButtonClicked = () => {\n        document.cookie = \"jwt=; path=/; secure; max-age=-99999999\";\n        onLogoutButtonClicked();\n    }\n\n    const onProfileButtonClicked = () => {\n        navigate(\"/me\");\n    }\n\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar variant=\"dense\">\n                <div className=\"app__header__left\">\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={onMenuButtonClicked}\n                    >\n                        Меню\n                    </Button>\n\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={onSaveButtonClicked}\n                    >\n                        Сохранить\n                    </Button>\n                </div>\n\n                <div className=\"app__header__right\">\n                    {\n                        isLogin &&\n                        <Button className=\"app__header__button\"\n                                color=\"inherit\"\n                                onClick={onProfileButtonClicked}\n                        >\n                            Профиль\n                        </Button>\n                    }\n\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\n                    >\n                        {isLogin ? \"Выйти\" : \"Войти\"}\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import React, {useEffect, useState} from \"react\";\n\nimport {useSearchParams} from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport \"./SuccessLoginPage.css\";\nimport {Alert, Container, Stack, Typography} from \"@mui/material\";\n\nexport interface SuccessLoginPageProps {\n    updateCurrentUser: () => void,\n}\n\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({updateCurrentUser}) => {\n    const [error, setError] = useState<string | null>(null);\n\n    const navigate = useNavigate();\n\n    const updateAuth = async () => {\n        const jwt = searchParams.get('jwt');\n\n        if (!jwt) {\n            setError(\"Не удалось войти в аккаунт\");\n            return;\n        }\n\n        console.log(`Jwt = ${jwt}`);\n\n        document.cookie = `jwt=${jwt}; path=/; secure; max-age=2592000`;\n\n        await updateCurrentUser();\n\n        // window.location.href = \"/\";\n        navigate(\"/\");\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, []);\n\n    const [searchParams] = useSearchParams();\n\n    return (\n        <div className=\"success-login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Входим в аккаунт...</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default SuccessLoginPage;","import React, {FC} from \"react\";\nimport \"./RegisteredPage.css\";\nimport {Button, Container, Stack, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface RegisteredPageProps {\n}\n\nconst RegisteredPage: FC<RegisteredPageProps> = ({}) => {\n\n    const navigate = useNavigate();\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    return (\n        <div className=\"registered-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>\n                        Новый аккаунт создан\n                    </Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisteredPage;","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    // DataSet,\n    Network,\n    Options,\n    Data, \n} from \"vis-network/peer\";\nimport { DataSet } from \"vis-data/peer\";\nimport { Timeline } from \"vis-timeline/peer\";\n// vis-network/standalone/esm/vis-network\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\n// import { Timeline } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const VisNetwork = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        // interaction: {\n        //     dragView: false,\n        //     keyboard: false,\n        //     dragNodes: false,\n        // },\n        layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"circle\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n  // DOM element where the Timeline will be attached\n  const [container, _co] = useState(useRef<HTMLDivElement>(null)) ;\n//   document.getElementById(\"visualization\");\n\n  // Create a DataSet (allows two way data-binding)\n  const items = new DataSet([\n    { id: 1, content: \"item 1\", start: \"2014-04-20\" },\n    { id: 2, content: \"item 2\", start: \"2014-04-14\" },\n    { id: 3, content: \"item 3\", start: \"2014-04-18\" },\n    { id: 4, content: \"item 4\", start: \"2014-04-16\", end: \"2014-04-19\" },\n    { id: 5, content: \"item 5\", start: \"2014-04-25\" },\n    { id: 6, content: \"item 6\", start: \"2014-04-27\", type: \"point\" }\n  ]);\n\n  // Configuration for the Timeline\n  const timeLineOptions = {};\n\n  // Create a Timeline\n\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n    const timeline = React.createRef<Timeline | null>();\n    // const timeline\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            // timeline = new Timeline(container, items, options)\n            // timeline.current = new Timeline(container.current, items, timeLineOptions);\n\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"network\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useEffect } from 'react';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const NonDetermenisticModal = (props: { isNonDetermenistic: boolean, setIsNonDetermenistic: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonDetermenistic) {\n            setOpen(props.isNonDetermenistic)\n            props.setIsNonDetermenistic(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Недетерменизм\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n\nexport const NonMinimizableModal = (props: { isNonMinimizable: boolean, setIsNonMinimizable: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonMinimizable) {\n            setOpen(props.isNonMinimizable)\n            props.setIsNonMinimizable(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Невозможно минимизровать\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\nimport { network } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const TreeHistory = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        interaction: {\n            // dragView: false,\n            keyboard: false,\n            dragNodes: true,\n        },\n        layout: {\n         hierarchical: {\n        //  direction: directionInput,\n         treeSpacing:200,\n         direction: 'LR',\n         parentCentralization: false,\n         sortMethod: 'directed',\n         shakeTowards: 'roots'\n        //  directed\n      },\n    },\n        // layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"box\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"vnc\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\n\nexport type RemoveSaveRequest = {\n    id: string\n};\n\nexport default function ApiRemoveSave(request: RemoveSaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${request.id}`;\n\n        const headers = getAuthHeaders();\n\n        fetch(url, {\n            method: \"DELETE\",\n            headers: headers,\n        })\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    reject();\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders} from \"./apiBase\";\n\nexport type UpdateSaveRequest = {\n    isShared?: boolean,\n    name?: string,\n};\n\nexport default function ApiUpdateSave(id: string, request: UpdateSaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${id}`;\n\n        const headers = getAuthHeaders();\n        headers.set(\"Content-Type\", \"application/json\");\n        const body = JSON.stringify(request);\n\n        fetch(url, {\n            method: \"PUT\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    reject();\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import { UserModel } from \"../Models/UserModel\";\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\n\nexport type UpdateUserRequest = {\n    about: string,\n};\n\nexport default function ApiUpdateUser(request: UpdateUserRequest): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/user`;\n\n        const headers = getAuthHeaders();\n        headers.set(\"Content-Type\", \"application/json\");\n        const body = JSON.stringify(request);\n\n        fetch(url, {\n            method: \"PUT\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, { FC, useEffect, useState } from \"react\";\nimport \"./MePage.css\";\nimport {\n    Container,\n    Stack,\n    Typography,\n    IconButton,\n    TableContainer,\n    Table, TableHead, TableRow, TableCell, TableBody, DialogContentText, DialogContent, Button,\n    InputAdornment,\n    OutlinedInput,\n    Alert,\n    Box,\n    TextField,\n    DialogActions,\n} from \"@mui/material\";\nimport { UserModel } from \"../../../Models/UserModel\";\nimport LaunchOutlinedIcon from '@mui/icons-material/LaunchOutlined';\nimport DeleteOutlineRoundedIcon from '@mui/icons-material/DeleteOutlineRounded';\nimport ApiGetSaves from \"../../../Api/apiGetSaves\";\nimport { SaveModel } from \"../../../Models/SaveModel\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport ApiRemoveSave, { RemoveSaveRequest } from \"../../../Api/apiRemoveSave\";\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiUpdateSave, { UpdateSaveRequest } from \"../../../Api/apiUpdateSave\";\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\nimport ApiUpdateUser, { UpdateUserRequest } from \"../../../Api/apiUpdateUser\";\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\n\ninterface MePageProps {\n    user: UserModel | null,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n    setUser: (user: UserModel) => void,\n}\n\nconst MePage: FC<MePageProps> = ({ user, onAuthFailed, changeComputerType, setUser }) => {\n    const [saves, setSaves] = useState<SaveModel[]>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [shareDialogOpen, setShareDialogOpen] = useState<boolean>(false);\n    const [saveToRemoveId, setSaveToRemoveId] = useState<string | null>(null);\n    const [editAccountMode, setEditAccountMode] = useState<boolean>(false);\n    const [editedAbout, setEditedAbout] = useState<string>(user?.about ?? \"\");\n    const [editSaveDialogOpen, setEditSaveDialogOpen] = useState<boolean>(false);\n    const [saveToEditId, setSaveToEditId] = useState<string | null>(null);\n    const [editedSaveName, setEditedSaveName] = useState<string | null>(null);\n\n    const navigate = useNavigate();\n\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onRemoveButtonClicked = (id: string) => {\n        setSaveToRemoveId(id);\n        setOpen(true);\n    }\n\n    const onRemoveConfirmClicked = async () => {\n        if (saveToRemoveId) {\n            await removeSave(saveToRemoveId);\n        }\n        await updateSaves();\n        closeDialog();\n    }\n\n    const onRemoveCancelClicked = () => {\n        closeDialog();\n    }\n\n    const onOpenClicked = async (id: string, name: string) => {\n        const save = await cloudSavesManager.getSave({ id: id, name: name });\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            navigate(\"/\");\n        }\n    }\n\n    const onShareClicked = (id: string, isShared: boolean) => {\n        setSaveShareState(id, !isShared).then(updateSaves);\n        if (!isShared) {\n            setShareDialogOpen(true);\n        }\n    }\n\n    const onCopyShareLinkClicked = () => {\n        navigator.clipboard.writeText(`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user?.id}`);\n    }\n\n    const onEditAccountClicked = async () => {\n        if (!editAccountMode) {\n            setEditAccountMode(true);\n        } else {\n            await saveAccountChanges();\n            setEditAccountMode(false);\n        }\n    }\n\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEditedAbout(value);\n    }\n\n    const onEditSaveClicked = (id: string, name: string) => {\n        setSaveToEditId(id);\n        setEditedSaveName(name);\n        setEditSaveDialogOpen(true);\n    }\n\n    const onEditedSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEditedSaveName(value);\n    }\n\n    const onSaveEditConfirmed = () => {\n        const request: UpdateSaveRequest = {\n            name: editedSaveName!,\n        };\n\n        ApiUpdateSave(saveToEditId!, request, () => {}).then(async () =>{ await updateSaves(); closeEditSaveDialog()});\n    }\n\n    const saveAccountChanges = async () => {\n        if (editedAbout != user?.about) {\n            var request: UpdateUserRequest = {\n                about: editedAbout,\n            }\n\n            ApiUpdateUser(request).then(updatedUser => {\n                setUser(updatedUser);\n            });\n        }\n    }\n\n    const closeDialog = () => {\n        setOpen(false);\n    }\n\n    const closeShareDialog = () => {\n        setShareDialogOpen(false);\n    }\n\n    const closeEditSaveDialog = () => {\n        setEditSaveDialogOpen(false);\n    }\n\n    const updateSaves = async () => {\n        await ApiGetSaves(onAuthFailed)\n            .then(saves => setSaves(saves))\n            .catch(() => setSaves([]));\n    }\n\n    const removeSave = async (id: string) => {\n        const request: RemoveSaveRequest = {\n            id: id,\n        };\n\n        await ApiRemoveSave(request, onAuthFailed);\n    }\n\n    const setSaveShareState = async (id: string, shareState: boolean) => {\n        const request: UpdateSaveRequest = {\n            isShared: shareState,\n        }\n\n        await ApiUpdateSave(id, request, onAuthFailed);\n    }\n\n    useEffect(() => {\n        updateSaves();\n    }, [])\n\n    useEffect(() => {\n        setEditedAbout(user?.about ?? \"\");\n    }, [user])\n\n    return (\n        user &&\n        <div className=\"me-page\">\n            <Dialog open={open} onClose={closeDialog}>\n                <DialogTitle>Удаление сохранения</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Вы уверены, что хотите удалить выбранное сохранение?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => onRemoveConfirmClicked()}>Удалить</Button>\n                    <Button onClick={() => onRemoveCancelClicked()}>Не удалять</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={shareDialogOpen} onClose={closeShareDialog} maxWidth=\"md\" fullWidth>\n                <DialogTitle>Настройки доступа</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Доступно всем пользователям по ссылке. Закрыть доступ можно в профиле пользователя.\n                    </DialogContentText>\n                    <OutlinedInput\n                        sx={{ mt: 2 }}\n                        readOnly\n                        fullWidth\n                        value={`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user.id}`}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton onClick={onCopyShareLinkClicked} edge=\"end\">\n                                    <ContentCopyOutlinedIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => closeShareDialog()}>Ок</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={editSaveDialogOpen} onClose={closeEditSaveDialog} maxWidth=\"sm\" fullWidth>\n                <DialogTitle>Редактирование сохранения</DialogTitle>\n                <DialogContent>\n                    <TextField sx={{ mt: 1 }} label=\"Название\" fullWidth size=\"small\" value={editedSaveName} onChange={onEditedSaveNameChanged}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onSaveEditConfirmed()}>Сохранить</Button>\n                    <Button onClick={() => closeEditSaveDialog()}>Отменить</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Container>\n                <Stack spacing={4}>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Аккаунт</Typography>\n                        <Stack>\n                            <Typography variant=\"body1\">Имя пользователя: {user.userName}</Typography>\n                            {\n                                !editAccountMode &&\n                                <Typography variant=\"body1\">О себе: {user.about}</Typography>\n                            }\n                            {\n                                editAccountMode &&\n                                <TextField sx={{ mt: 1 }} size=\"small\" label=\"О себе\" value={editedAbout} onChange={onAboutChanged} />\n                            }\n                        </Stack>\n                        <Box>\n                            <Button size=\"small\" onClick={() => onEditAccountClicked()}>\n                                {editAccountMode ? \"Сохранить\" : \"Редактировать\"}\n                            </Button>\n                        </Box>\n                    </Stack>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Сохранения</Typography>\n                        {\n                            saves.length > 0 &&\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Название</TableCell>\n                                            <TableCell>Время создания</TableCell>\n                                            <TableCell>Время изменения</TableCell>\n                                            <TableCell>Поделиться</TableCell>\n                                            <TableCell>Открыть</TableCell>\n                                            <TableCell>Редактировать</TableCell>\n                                            <TableCell>Удалить</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            saves.map(save => (\n                                                <TableRow key={save.id}>\n                                                    <TableCell>\n                                                        {save.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Button size=\"small\" onClick={() => onShareClicked(save.id, save.isShared)}>\n                                                            {save.isShared ? \"Закрыть доступ\" : \"Поделиться\"}\n                                                        </Button>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onOpenClicked(save.id, save.name)}>\n                                                            <LaunchOutlinedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onEditSaveClicked(save.id, save.name)}>\n                                                            <EditOutlinedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onRemoveButtonClicked(save.id)}>\n                                                            <DeleteOutlineRoundedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        }\n                        {\n                            saves.length === 0 &&\n                            <Alert severity=\"warning\" icon={false}>\n                                Сохранённых вычислетелей ещё нет\n                            </Alert>\n                        }\n                    </Stack>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default MePage;","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport {UserModel} from \"../Models/UserModel\";\nimport {getCookie} from \"../utils\";\n\nexport default function ApiGetUserById(id: string): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/user/${id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport { SaveModel } from \"../Models/SaveModel\";\n\nexport default function ApiGetUserSaves(id: string): Promise<SaveModel[]> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/user/${id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import { SaveModel } from \"../Models/SaveModel\";\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\n\n\nexport default function ApiCloneSave(id: string): Promise<SaveModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/clone/${id}`;\n\n        const headers = getAuthHeaders();\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, { FC, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ApiGetUserById from \"../../../Api/apiGetUserById\";\nimport ApiGetUserSaves from \"../../../Api/apiGetUserSaves\";\nimport { UserModel } from \"../../../Models/UserModel\";\nimport { SaveModel } from \"../../../Models/SaveModel\";\nimport \"./UserPage.css\";\nimport { Alert, Button, Container, Dialog, DialogContent, DialogContentText, DialogTitle, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\nimport ApiCloneSave from \"../../../Api/apiCloneSave\";\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\n\n\n\ninterface UserPageProps {\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void\n}\n\n\nconst UserPage: FC<UserPageProps> = ({ changeComputerType }) => {\n    const [user, setUser] = useState<UserModel | null>(null);\n    const [saves, setSaves] = useState<SaveModel[]>([]);\n    const [cloneDialogOpen, setCloneDialogOpen] = useState<boolean>(false);\n    const [saveToCloneId, setSaveToCloneId] = useState<string | null>(null);\n    const [clonedSave, setClonedSave] = useState<SaveModel | null>(null);\n\n    const { userId } = useParams();\n\n    const cloudSavesManager = new CloudSavesManager(() => { });\n\n    const navigate = useNavigate();\n\n\n    const onCloneClicked = (id: string) => {\n        setSaveToCloneId(id);\n        setCloneDialogOpen(true);\n    }\n\n    const onCloneDialogClose = () => {\n        setCloneDialogOpen(false);\n    }\n\n    const onCloneConfirmed = () => {\n        cloneSave(saveToCloneId!);\n    }\n\n    const getUser = async () => {\n        await ApiGetUserById(userId!)\n            .then(user => { console.log(user); setUser(user) });\n    }\n\n    const getSaves = async () => {\n        await ApiGetUserSaves(userId!)\n            .then(saves => { console.log(saves); setSaves(saves) });\n    }\n\n    const cloneSave = async (id: string) => {\n        await ApiCloneSave(id).then(async (response) => {\n            const save = await cloudSavesManager.getSave({ id: response.id, name: response.name });\n\n            if (save) {\n                changeComputerType(save.save.type, save.save.graph);\n                navigate(\"/\");\n            }\n        })\n    }\n\n    useEffect(() => { getUser(); getSaves(); }, []);\n\n    return (\n        user &&\n        <div className=\"me-page\">\n            <Dialog open={cloneDialogOpen} onClose={onCloneDialogClose}>\n                <DialogTitle>Клонирование сохранения</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Копия сохранения появится в списке сохранений. Вы сможете изменять его независимо. Хотите продолжить?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => onCloneConfirmed()}>Да, клонировать</Button>\n                    <Button onClick={() => onCloneDialogClose()}>Нет</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Container>\n                <Stack spacing={4}>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Аккаунт</Typography>\n                        <Stack>\n                            <Typography variant=\"body1\">О себе: {user.about}</Typography>\n                        </Stack>\n                    </Stack>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Сохранения</Typography>\n                        {\n                            saves.length > 0 &&\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Название</TableCell>\n                                            <TableCell>Время создания</TableCell>\n                                            <TableCell>Время изменения</TableCell>\n                                            <TableCell>Клонирование</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            saves.map(save => (\n                                                <TableRow key={save.id}>\n                                                    <TableCell>\n                                                        {save.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Button size=\"small\" onClick={() => onCloneClicked(save.id)}>\n                                                            Клонировать себе\n                                                        </Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        }\n                        {\n                            saves.length === 0 &&\n                            <Alert severity=\"warning\" icon={false}>\n                                Пользователь ещё не поделился своими сохранениями\n                            </Alert>\n                        }\n                    </Stack>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default UserPage;","import React, { ReactNode } from 'react';\nimport \"./App.css\"\nimport {\n    ComputerType,\n    edge,\n    graph,\n    histNode,\n    node\n} from \"./react-graph-vis-types\";\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\nimport {\n    computersInfo, decorateGraph, elementsToGraph, getNodeNamePrefix, getTransitionsTitles,\n    graphToElements, transitionsToLabel\n} from \"./utils\";\nimport RunControl from \"./Components/RunControl/RunControl\";\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\nimport Paper from \"@mui/material/Paper\";\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\nimport {Route, Routes, HashRouter} from \"react-router-dom\";\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./Components/Pages/RegisterPage/RegisterPage\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport { TransitionParams } from \"./Logic/IGraphTypes\";\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\nimport RegisteredPage from \"./Components/Pages/RegisteredPage/RegisteredPage\";\nimport { VisNetwork } from './VisNetwork';\nimport {\n    DataSet,\n    Network,\n} from \"vis-network/standalone/esm/vis-network\";\nimport {Output} from './Logic/Types';\nimport {NonDetermenisticModal, NonMinimizableModal} from './ErrorModal';\nimport {TreeHistory} from './TreeHistory';\nimport MePage from \"./Components/Pages/MePage/MePage\";\nimport {UserModel} from \"./Models/UserModel\";\nimport ApiGetUser from \"./Api/apiGetUser\";\nimport UserPage from './Components/Pages/UserPage/UserPage';\n\n// import {ContextMenu, MenuItem as CotextMenuItem, ContextMenuTrigger} from \"react-contextmenu\";\n\ninterface appProps {\n}\n\nexport type Elements = {\n    nodes: DataSet<node, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\nexport type HistElements = {\n    nodes: DataSet<histNode, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\ninterface appState {\n    computerType: null | ComputerType,\n    selectedNode: node | null,\n    selectedEdge: edge | null,\n    inEdgeMode: boolean,\n    elements: Elements,\n    treeElems: HistElements,\n    options: any,\n    initiallyStabilized: boolean,\n    popout: ReactNode | null,\n    savePopoutOpen: boolean,\n    welcomePopoutOpen: boolean,\n    isLogin: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined,\n    wasComputerResetted: boolean,\n    byEmptyStack: boolean,\n    errIsNonDetermenistic: boolean,\n    errIsNonMinimizable: boolean,\n    showTree: boolean,\n    History: (() => JSX.Element),\n    user: UserModel | null,\n}\n\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\n\nexport const computerAction = {\n    init: (() => { }),\n    nfaToDfa: (() => { }),\n    minimizeDfa: (() => { }),\n    mooreToMealy: (() => { }),\n    mealyToMoore: (() => { })\n}\n\nexport const controlAction = {\n    changerByStack: (() => { }),\n    run: (() => { }),\n    step: (() => { }),\n    reset: (() => { }),\n}\n\n\n\ninterface RibbonProps {\n    computerType: null | ComputerType,\n    wasComputerResetted: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined\n    memRef: React.RefObject<HTMLDivElement>\n}\n\nexport const Ribbon = (props: RibbonProps) => {\n    return (\n        props.computerType === \"tm\" && props.wasComputerResetted\n            ?\n            <div className=\"app__mem_ribbon\">\n                {\n                    props.mem?.map((value, index) =>\n                        <div\n                            className=\"app__mem_cell\"\n                            style={{ border: `${index === props.ptr ? \"#0041d0\" : \"#000000\"} 2px solid` }}\n                        >\n                            {Math.abs(Math.abs(index) - Math.abs(props.ptr!)) <= 5\n                                ? <div ref={props.memRef} />\n                                : <div />\n                            }\n                            {value}\n                            {props.memRef?.current?.scrollIntoView({ behavior: 'smooth' })}\n                        </div>\n                    )\n                }\n            </div>\n            : <div />\n    )\n}\n\nclass App extends React.Component<appProps, appState> {\n\n    memRef = React.createRef<HTMLDivElement>();\n    network = React.createRef<Network | null>();\n    networkTST = React.createRef<Network | null>();\n\n    constructor(props: appProps) {\n        super(props);\n\n        this.state = {\n            computerType: null,\n\n            selectedNode: null,\n            selectedEdge: null,\n            inEdgeMode: false,\n            elements: { nodes: new DataSet<node>(), edges: new DataSet<edge>() },\n            treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() },\n            options: {\n                edges: {\n                    smooth: {\n                        enabled: true,\n                        type: \"discrete\",\n                        roundness: 0.5\n                    },\n                    length: 200\n                },\n                nodes: {\n                    shape: \"box\",\n                    font: \"18px Roboto black\",\n                    labelHighlightBold: false,\n                    widthConstraint: 40,\n                    color: \"red\",\n                    heightConstraint: 40\n                },\n                physics: {\n                    enabled: false\n                }\n            },\n            initiallyStabilized: false,\n            popout: null,\n            savePopoutOpen: false,\n            welcomePopoutOpen: false,\n            isLogin: true,\n            mem: undefined,\n            ptr: undefined,\n            wasComputerResetted: false,\n            byEmptyStack: false,\n\n            errIsNonDetermenistic: false,\n            errIsNonMinimizable: false,\n\n            showTree: false,\n            History: () => ( <div></div> ),\n            user: null\n        };\n    }\n\n    setIsNonDetermenistic = (v: boolean) => this.setState({ errIsNonDetermenistic: v })\n\n    setIsNonMinimizable = (v: boolean) => this.setState({ errIsNonMinimizable: v })\n\n    async componentDidMount() {\n        await this.updateCurrentUser();\n\n        this.updateGraph();\n        this.subscribeToShortcuts();\n        this.openWelcomePopout();\n    }\n\n    lastNodeId = 0;\n\n    subscribeToShortcuts = () => {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            if (event.key === \"s\" && event.ctrlKey) {\n                event.preventDefault();\n                this.openSavePopout();\n            }\n        })\n    }\n\n    openSavePopout = () => {\n        this.setState({ savePopoutOpen: true });\n    }\n\n    closeSavePopout = () => {\n        this.setState({ savePopoutOpen: false });\n    }\n\n    openWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: true });\n    }\n\n    closeWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: false });\n    }\n\n    logout = () => {\n        document.cookie = `jwt=\"\"; path=/; secure; max-age=-1`;\n        this.setState({isLogin: false});\n        this.updateCurrentUser();\n    }\n\n    updateCurrentUser = async () => {\n        await ApiGetUser()\n            .then(user => this.setState({user: user}))\n            .catch(() => this.setState({user: null}));\n    }\n\n    setUser = (user: UserModel) => {\n        this.setState({ user: user })\n    }\n\n\n    updateGraph = (): void => {\n        decorateGraph(this.state.elements, this.state.computerType)\n    }\n\n    changeNodeLabel = (id: number, label: string): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                const lableTokens =\n                    label\n                        .split('')\n                        .filter(x => x !== \" \" && x !== \"\\n\")\n                        .join('')\n                        .split('|')\n                const output = lableTokens[1] !== undefined ? lableTokens[1] : \"\"\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    label: label,\n                    output: output\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isAdmit: isAdmit\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isInitial: isInitial\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.isCurrent) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: false\n                })\n            }\n        })\n        this.state.elements.nodes.forEach((node) => {\n            if (ids.includes(node.id)) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: isCurrent\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    createNode = (e: { pointer: { canvas: { x: any; y: any; }; }; }) => {\n        this.lastNodeId++;\n        const node = {\n            id: this.lastNodeId,\n            label: 'S' + (this.lastNodeId),\n            x: e.pointer.canvas.x,\n            y: e.pointer.canvas.y,\n            isAdmit: false,\n            isInitial: false,\n            isCurrent: false,\n        }\n        this.state.elements.nodes.add(node);\n    }\n\n    lastHistNodeId = 0\n\n    createHistNode = (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => {\n        this.lastHistNodeId++;\n\n\n        const border = isInitial ? \"#0041d0\" : isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        const node: histNode = {\n            id: this.lastHistNodeId,\n            idd,\n            label,\n            isAdmit,\n            isInitial,\n            isCurrent,\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            }\n        }\n\n        this.state.treeElems.nodes.add(node);\n    }\n\n    createHistEdge = (from: number, to: number, by: any) => {\n        const transitions = new Set([[{ title: by }]])\n\n        this.state.treeElems.edges.add({\n            from: from,\n            to: to,\n            transitions: transitions,\n            label: by\n        })\n    }\n\n    historyEndRef = React.createRef<HTMLDivElement>();\n\n    getLastHistNodeId = () => this.lastHistNodeId\n\n    resetHistTree = () => {\n        for (let i = 0; i <= this.lastHistNodeId; i++) {\n            this.state.treeElems.nodes.remove(i)\n        }\n        this.state.treeElems.edges.forEach((e) => this.state.treeElems.edges.remove(e.id!))\n        this.lastHistNodeId = 0;\n    }\n\n    selectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        const selectedNodes = this.state.elements.nodes.get(nodesIDs);\n        this.setState({ selectedNode: selectedNodes[0] });\n    }\n\n\n    deselectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        if (nodesIDs.length === 0) {\n            this.setState({ selectedNode: null });\n        }\n    }\n\n    deleteNode = (id: number): void => {\n        this.state.elements.nodes.remove(id)\n\n        let rmEdges: string[] = []\n        this.state.elements.edges.forEach((edge) => {\n            if (edge.from === id || edge.to === id) {\n                rmEdges.push(edge.id!)\n            }\n        })\n        this.state.elements.edges.remove(rmEdges)\n    }\n\n    selectEdge = (e: { edges: any; }): void => {\n        const edgesIDs: number[] = e.edges;\n        const selectedEdges = this.state.elements.edges.get(edgesIDs);\n        this.setState({ selectedEdge: selectedEdges[0] });\n        console.log('click1  = selectEdge')\n    }\n\n    deselectEdge = (e: { edges: number[]; }): void => {\n        const edgesIDs: number[] = e.edges;\n        if (edgesIDs.length === 0) {\n            this.setState({ selectedEdge: null });\n        }\n    }\n\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\n        this.state.elements.edges.update({\n            id: id,\n            label: transitionsToLabel(transitions, this.state.computerType),\n            transitions: transitions\n        })\n    }\n\n    deleteEdge = (id: string): void => {\n        this.state.elements.edges.remove(id)\n    }\n\n    updMem = (mem: string[], ptr: number): void => {\n        this.setState({ mem: mem, ptr: ptr });\n    }\n\n    NFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.nfaToDfa}\n                    >\n                        {\"НКА->ДКА\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    treeVisible = () => {\n        this.setState({ showTree: !this.state.showTree})\n        return !this.state.showTree\n    }\n\n    treeContextInfo = () => (this.state.showTree ? \"Закрыть\" : \"Открыть\") + \" дерево вычислений\"\n\n    DFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.minimizeDfa}\n                    >\n                        {\"Минимизровать\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MealyContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mealyToMoore}\n                    >\n                        {\"Мур\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MooreContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mooreToMealy}\n                    >\n                        {\"Мили\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    PDAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.changerByStack}\n\n                    >\n                        {this.state.byEmptyStack ? \"По стеку\" : \"По состоянию\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    AnotherContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    ContextMenu = (computerType: null | ComputerType) => {\n        switch (computerType) {\n            case \"nfa\": {\n                return this.NFAContextMenu\n            }\n            case \"dfa\": {\n                return this.DFAContextMenu\n            }\n            case \"mealy\":\n            case \"dmealy\": {\n                return this.MealyContextMenu\n            }\n            case \"moore\":\n            case \"dmoore\": {\n                return this.MooreContextMenu\n            }\n            case \"pda\":\n            case \"dpda\": {\n                return this.PDAContextMenu\n            }\n            default: {\n                return this.AnotherContextMenu\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/login\" element={\n                        <LoginPage/>\n                    }/>\n                    <Route path=\"/register\" element={\n                        <RegisterPage/>\n                    }/>\n                    <Route path=\"/registered\" element={\n                        <RegisteredPage/>\n                    }/>\n                    <Route path=\"/success-login\" element={\n                        <SuccessLoginPage updateCurrentUser={this.updateCurrentUser}/>\n                    }/>\n                    <Route path=\"/me\" element={\n                        <MePage user={this.state.user}\n                                onAuthFailed={this.logout}\n                                changeComputerType={(computerType, graph: graph | null) => {\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                    this.lastNodeId = defaultGraph.nodes.length;\n                                    this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                        , () => this.updateGraph()\n                                    );\n                                }\n                                }\n                                setUser={this.setUser}\n                        />\n                    }/>\n                    <Route path=\"/user/:userId\" element={\n                        <UserPage \n                            changeComputerType={\n                                (computerType, graph: graph | null) => {\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                    this.lastNodeId = defaultGraph.nodes.length;\n                                    this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                        , () => this.updateGraph()\n                                    );\n                                }\n                            }\n                        />\n                    }/>\n                    <Route path=\"/\" element={\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\n                            <div className=\"app\">\n                                <WelcomePopout\n                                    open={this.state.welcomePopoutOpen}\n                                    onClose={this.closeWelcomePopout}\n                                    onAuthFailed={this.logout}\n                                    changeComputerType={(computerType, graph: graph | null) => {\n\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n\n                                        console.log(defaultGraph);\n                                        console.log(defaultGraph[\"nodes\"]);\n                                        graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                        this.lastNodeId = defaultGraph.nodes.length;\n                                        this.setState({\n                                                computerType: computerType,\n                                                elements: graphToElements(defaultGraph)\n                                            }\n                                            , () => this.updateGraph()\n                                        );\n                                    }}\n                                />\n\n                                {this.state.popout}\n\n                                <SavingPopout open={this.state.savePopoutOpen}\n                                              onClose={this.closeSavePopout}\n                                              isLogin={this.state.isLogin}\n                                              onAuthFailed={this.logout}\n                                              graph={elementsToGraph(this.state.elements)}\n                                              computerType={this.state.computerType!}/>\n                                <div className=\"history-container\">\n                                    {this.state.History()}\n                                </div>\n                                <div className=\"hint-container\">\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Ctrl+S — сохранить автомат\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Удерживайте Ctrl чтобы создать ребро\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Двойное нажатие чтобы создать вершину\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        ПКМ для открытия контекстного меню\n                                    </Paper>\n                                </div>\n                                <NonDetermenisticModal\n                                    isNonDetermenistic={this.state.errIsNonDetermenistic}\n                                    setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                />\n                                <NonMinimizableModal\n                                    isNonMinimizable={this.state.errIsNonMinimizable}\n                                    setIsNonMinimizable={this.setIsNonMinimizable}\n                                />\n                                <Ribbon\n                                    computerType={this.state.computerType}\n                                    wasComputerResetted={this.state.wasComputerResetted}\n                                    mem={this.state.mem}\n                                    ptr={this.state.ptr}\n                                    memRef={this.memRef}\n                                />\n\n                                <AppHeader\n                                    onMenuButtonClicked={this.openWelcomePopout}\n                                    onSaveButtonClicked={this.openSavePopout}\n                                    onLogoutButtonClicked={this.logout}\n                                    isLogin={this.state.isLogin}\n                                />\n\n\n                                <div className=\"field__container\">\n                                    <VisNetwork\n                                        nodes={this.state.elements.nodes}\n                                        edges={this.state.elements.edges}\n                                        data={this.state.elements}\n                                        onDoubleClick={this.createNode}\n                                        onClick1={this.selectEdge}\n                                        onClick2={this.selectNode}\n                                        onClick3={this.deselectNode}\n                                        onClick4={this.deselectEdge}\n                                        network={this.network}\n                                        contextMenu={this.ContextMenu(this.state.computerType)}\n                                    />\n                                </div>\n\n                                {this.state.showTree ?\n                                    <div className=\"eval-tree\">\n                                        <TreeHistory\n                                            nodes={this.state.treeElems.nodes}\n                                            edges={this.state.treeElems.edges}\n                                            data={this.state.treeElems}\n                                            onDoubleClick={this.createNode}\n                                            onClick1={this.selectEdge}\n                                            onClick2={this.selectNode}\n                                            onClick3={this.deselectNode}\n                                            onClick4={this.deselectEdge}\n                                            network={this.networkTST}\n                                            contextMenu={this.ContextMenu(this.state.computerType)}\n                                        />\n                                    </div>\n                                    : <div />}\n                                <div className=\"app__right-menu\">\n                                    <NodeControl\n                                        node={this.state.selectedNode}\n                                        changeNodeLabel={this.changeNodeLabel}\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\n                                        changeStateIsInitial={this.changeStateIsInitial}\n                                        deleteNode={this.deleteNode}\n                                        reinitComputer={computerAction.init}\n\n                                    />\n                                    <EdgeControl\n                                        edge={this.state.selectedEdge}\n                                        changeEdgeTransitions={this.changeEdgeTransition}\n                                        deleteEdge={this.deleteEdge}\n                                        computerType={this.state.computerType}\n                                        reinitComputer={computerAction.init}\n                                    />\n\n                                    <RunControl\n                                        updMem={this.updMem}\n                                        elements={this.state.elements}\n                                        treeElems={this.state.treeElems}\n                                        createHistNode={this.createHistNode}\n                                        byEmptyStack={this.state.byEmptyStack}\n                                        createHistEdge={this.createHistEdge}\n                                        getLastHistNodeId={this.getLastHistNodeId}\n                                        resetHistTree={this.resetHistTree}\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\n                                        network={this.network}\n                                        changerStack={controlAction.changerByStack}\n                                        setInit={(f: () => void) => computerAction.init = f}\n                                        setNfaToDfa={(f: () => void) => computerAction.nfaToDfa = f}\n                                        setMinimizeDfa={(f: () => void) => computerAction.minimizeDfa = f}\n                                        setMooreToMealy={(f: () => void) => computerAction.mooreToMealy = f}\n                                        setMealyToMoore={(f: () => void) => computerAction.mealyToMoore = f}\n                                        updateElements={(elements: Elements) => this.setState({ elements: elements }, () => this.updateGraph())}\n                                        setComputerType={(type: null | ComputerType) => this.setState({ computerType: type })}\n                                        setResettedStatus={(status: boolean) => this.setState({ wasComputerResetted: status })}\n                                        setByEmptyStack={(byEmptyStack: boolean) => this.setState({ byEmptyStack: byEmptyStack })}\n                                        setChangerByStack={(f: () => void) => controlAction.changerByStack = f}\n                                        setRun={(f: () => void) => controlAction.run = f}\n                                        setStep={(f: () => void) => controlAction.step = f}\n                                        setReset={(f: () => void) => controlAction.reset = f}\n                                        setHistory={(jsx: () => JSX.Element) => this.setState({ History: jsx },\n                                            () => this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' }) )}\n                                        historyEndRef={this.historyEndRef}\n                                        setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                        setIsNonMinimizable={this.setIsNonMinimizable}\n                                        treeContextInfo={this.treeContextInfo}\n                                        treeVisible={this.treeVisible}\n                                    />\n\n                                </div>\n\n                            </div>\n                        </ComputerTypeContext.Provider>\n                    }/>\n                </Routes>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default App;","import {BASE_URL, getParams} from \"./apiBase\";\nimport {UserModel} from \"../Models/UserModel\";\nimport {getCookie} from \"../utils\";\n\nexport default function ApiGetUser(): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/user\";\n\n        const jwt = getCookie(\"jwt\");\n\n        if (!jwt) {\n            reject();\n        }\n\n        const headers = new Headers();\n        headers.set(\"Authorization\", `Bearer ${jwt}`);\n\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, {createRef, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","\"use strict\";\nexports.__esModule = true;\nvar Move;\n(function (Move) {\n    Move[Move[\"L\"] = 0] = \"L\";\n    Move[Move[\"R\"] = 1] = \"R\";\n})(Move = exports.Move || (exports.Move = {}));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar NonDeterministic = /** @class */ (function (_super) {\n    __extends(NonDeterministic, _super);\n    function NonDeterministic() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonDeterministic';\n        Object.setPrototypeOf(_this, NonDeterministic.prototype);\n        return _this;\n    }\n    return NonDeterministic;\n}(Error));\nexports.NonDeterministic = NonDeterministic;\nvar NonMinimizable = /** @class */ (function (_super) {\n    __extends(NonMinimizable, _super);\n    function NonMinimizable() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonMinimizable';\n        Object.setPrototypeOf(_this, NonMinimizable.prototype);\n        return _this;\n    }\n    return NonMinimizable;\n}(Error));\nexports.NonMinimizable = NonMinimizable;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar lodash_1 = require(\"lodash\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar PDA = /** @class */ (function (_super) {\n    __extends(PDA, _super);\n    function PDA(graph, startStatements, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.stack = new Stack_1.Stack();\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.haveEpsilon = function () {\n            return _this.epsId !== undefined;\n        };\n        // isDeterministic0(): boolean {\n        //     let ret = true\n        //     this.matrix.forEach(value => {\n        //         value.forEach(value1 => {\n        //             if (value1.length > 1) {\n        //                 let tmp: statementCell = value1[0]\n        //                 value1.forEach((value2, index) => {\n        //                     if (index !== 0 && tmp.stackDown === undefined && value2.stackDown || index !== 0 && tmp.stackDown === value2.stackDown ) {\n        //                         ret = false\n        //                     }\n        //                 })\n        //             }\n        //         })\n        //     })\n        //     return ret && (!this.haveEpsilon())\n        // }\n        _this.getStartStatements = function () {\n            // console.log('this.startStatements')\n            // console.log(this.curPosition)\n            // console.log('this.startStatements')\n            var curs = _this.curPosition.map(function (v) {\n                var _a;\n                var stmt = v.stmt;\n                stmt.stack = (_a = v.stack) === null || _a === void 0 ? void 0 : _a.getStorage();\n                return stmt;\n            });\n            return curs;\n        };\n        _this.byEmptyStackAdmt = function (isAdmt) {\n            _this.admitByEmptyStack = isAdmt;\n        };\n        _this.treeHist = [];\n        _this.pdaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            _this.treeHist = ret.tree ? ret.tree : [];\n            // console.log(\"STEP stck: \")\n            // ret.history.forEach(value => value.nodes.forEach(value1 => console.log(value1.stack)))\n            // console.log(\"STEP admit: \")\n            // console.log(ret.isAdmit)\n            return ret;\n        };\n        _this.pdaRun = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var histUnit = [];\n            var histTrace = [];\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var last = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: last.byEpsPred, byLetter: last.byLetter, byEpsAfter: last.byEpsAfter });\n            var ret = {\n                nodes: last.nodes,\n                counter: last.counter,\n                isAdmit: last.isAdmit,\n                history: last.history,\n                histTrace: histTrace\n            };\n            console.log('ret.histTrace');\n            console.log(ret.histTrace);\n            console.log('ret.histTrace');\n            return ret;\n        };\n        _this.step = _this.pdaStep;\n        _this.run = _this.pdaRun;\n        // (): Step => {\n        //     return { counter: 0, history: [], isAdmit: false, nodes: [] }\n        // }\n        // this.pdaRun\n        _this._step = function (counter, tr, histori, unitHsit, histTrace) {\n            var byEpsPred = [];\n            var byEpsAfter = [];\n            var byLetter = [];\n            var newPosSet = [];\n            var updCurPos = function () {\n                _this.curPosition = [];\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\n                newPosSet = [];\n            };\n            var epsStep = function () {\n                _this.curPosition.forEach(function (value) {\n                    var _a;\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack, unitHsit);\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var letterSter = function () {\n                _this.curPosition.forEach(function (value) {\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack, unitHsit);\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var rmRepeations = function () {\n                var htable = new Map();\n                var positions = [];\n                _this.curPosition.forEach(function (value) {\n                    var v = {\n                        stmt: value.stmt, stack: value.stack\n                    };\n                    if (htable.get(JSON.stringify(v)) === undefined) {\n                        positions.push(value);\n                        htable.set(JSON.stringify(v), value);\n                    }\n                });\n                _this.curPosition = [];\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\n            };\n            if (_this.epsId !== undefined) {\n                epsStep();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsPred.push(v); });\n            }\n            if (counter < _this.input.length) {\n                letterSter();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byLetter.push(v); });\n                if (_this.epsId !== undefined) {\n                    epsStep();\n                    updCurPos();\n                    rmRepeations();\n                    _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsAfter.push(v); });\n                }\n            }\n            else {\n                rmRepeations();\n                // console.log(\":::::::::::::::::::\")\n                // this.curPosition.forEach(value => {\n                //     console.log(value.stmt)\n                //     console.log(value.stack)\n                // })\n                // console.log(\":::::::::::::::::::\")\n                _this.treeHist.push(unitHsit);\n                histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n                return {\n                    nodes: _this.toNodes(_this.curPosition),\n                    counter: counter,\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\n                    history: histori,\n                    tree: _this.treeHist,\n                    byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                    histTrace: []\n                };\n            }\n            rmRepeations();\n            // console.log(\":::::::::::::::::::\")\n            // this.curPosition.forEach(value => {\n            //     console.log(value.stmt)\n            //     console.log(value.stack)\n            // })\n            // console.log(\":::::::::::::::::::\")\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\n            counter++;\n            _this.treeHist.push(unitHsit);\n            histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n            return {\n                nodes: _this.toNodes(_this.curPosition),\n                counter: counter,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                history: histori,\n                tree: _this.treeHist,\n                byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                histTrace: []\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.treeHist = [];\n            _this.startStatements.forEach(function (value) {\n                var stack = new Stack_1.Stack();\n                stack.push(Computer_1.BOTTOM);\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id),\n                    stack: stack\n                });\n            });\n        };\n        // move to Nfa\n        _this.nfaToDfa = function () {\n            var nextStepPosition = function (position, by) {\n                return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) { return ({ stmt: v }); });\n            };\n            var _nextStepPositions = function (positions, by) {\n                var acc = [];\n                positions.map(function (v) {\n                    return nextStepPosition(v, by);\n                }).forEach(function (ps) {\n                    return ps.forEach(function (p) { return acc.push(p); });\n                });\n                return acc;\n            };\n            var nextStepPositions = function (positions, by) {\n                var afterEps = function (positions) {\n                    if (_this.epsId === undefined) {\n                        return positions;\n                    }\n                    var acc = [];\n                    var EPStack = new Stack_1.Stack();\n                    EPStack.push(Computer_1.EPS);\n                    positions.forEach(function (position) {\n                        var tmp = _this.epsilonStep(position.stmt.idLogic, Computer_1.EPS, EPStack, []);\n                        if (tmp !== undefined) {\n                            acc.push(tmp);\n                        }\n                    });\n                    var flatted = [];\n                    acc.forEach(function (ps) { return ps.forEach(function (p) { return flatted.push(p); }); });\n                    return flatted;\n                };\n                return afterEps(_nextStepPositions(afterEps(positions), by));\n            };\n            var pop = function () { return stack.shift(); };\n            var push = function (v) {\n                stack.push(v);\n            };\n            var stack = [];\n            var table = [];\n            var set = new ImSet();\n            var startPos = _this.curPosition;\n            _this.restart();\n            push(startPos);\n            var _loop_1 = function () {\n                var head = pop();\n                var acc = [];\n                if (head === undefined || head.length === 0) {\n                    return \"break\";\n                }\n                if (set.has(head)) {\n                    return \"continue\";\n                }\n                set.add(head.map(function (v) { return ({\n                    stmt: {\n                        id: v.stmt.id,\n                        idLogic: v.stmt.idLogic,\n                        isAdmit: v.stmt.isAdmit\n                    },\n                    stack: undefined\n                }); }));\n                _this.alphabet.forEach(function (value) {\n                    if (value !== _this.epsId) {\n                        var to = nextStepPositions(head, value);\n                        var _to = to.map(function (v) { return ({\n                            stmt: {\n                                id: v.stmt.id,\n                                idLogic: v.stmt.idLogic,\n                                isAdmit: v.stmt.isAdmit\n                            },\n                            stack: undefined\n                        }); });\n                        acc.push(_to);\n                        if (to.length > 0 && !set.has(to) && !set.has(_to)) {\n                            push(_to);\n                        }\n                    }\n                });\n                table.push(acc);\n            };\n            while (stack.length > 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n            var _edges = [];\n            table.forEach(function (ps, from) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    if (tr !== _this.epsId && ps[tr].length !== 0) {\n                        // console.log(ps[tr])\n                        // console.log(from, set.getIter(ps[tr]))\n                        _edges.push({\n                            from: from,\n                            to: set.getIter(ps[tr]),\n                            transitions: new Set([[{ title: letter }]])\n                        });\n                    }\n                });\n            });\n            var nodes = set.getStorage().map(function (v) { return ({\n                id: set.getIter(v),\n                isAdmit: _this.haveAdmitting(v)\n            }); });\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                for (var j = i; j < _edges.length; j++) {\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\n                        delta++;\n                    }\n                }\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n                i += delta - 1;\n            }\n            return { nodes: nodes, edges: edges };\n        };\n        //https://www.usna.edu/Users/cs/wcbrown/courses/F17SI340/lec/l22/lec.html\n        _this.minimizeDfa = function () {\n            _this.restart();\n            var startId = _this.curPosition[0].stmt.idLogic;\n            var cutBy = function (by) {\n                var acc = [];\n                _this.matrix.forEach(function (_, it) { return acc.push(_this.cellMatrix(it, by)[0]); });\n                return acc;\n            };\n            var _lookUp = function (group) { return function (id) {\n                return group[id];\n            }; };\n            var _getJump = function (table) { return function (by) { return function (id) {\n                return table[by][id];\n            }; }; };\n            var createTableT = function (zero) {\n                var lookUp = _lookUp(zero);\n                var table = [];\n                _this.alphabet.forEach(function (tr) {\n                    var acc = [];\n                    var cutted = cutBy(tr);\n                    cutted.forEach(function (cell) {\n                        acc.push(lookUp(cell.idLogic));\n                    });\n                    table.push(acc);\n                });\n                return table;\n            };\n            var _updateGroups = function (zero) { return function (groups) { return function (getJump) { return function (group) {\n                var jmpGrp = getJump(group[0].node.idLogic).number;\n                var newGrp = [];\n                var newNumber = groups.length + 1;\n                var toRm = [];\n                group.forEach(function (value, index) {\n                    if (getJump(value.node.idLogic).number !== jmpGrp) {\n                        value.number = newNumber;\n                        toRm.push(value.node.idLogic);\n                        newGrp.push(value);\n                    }\n                });\n                for (var i = 0; i < group.length; i++) {\n                    if (toRm.includes(group[i].node.idLogic)) {\n                        group.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (newGrp.length > 0) {\n                    groups.push(newGrp);\n                    return { fst: group, snd: newGrp };\n                }\n                return { fst: [], snd: [] };\n            }; }; }; };\n            var stack = [];\n            var pop = function () { return stack.shift(); };\n            var push = function (v) { return stack.push(v); };\n            var zero = [];\n            var first = [];\n            var second = [];\n            _this.statements.forEach(function (statement) {\n                var element = { number: -1, node: { idLogic: -1, id: -1, isAdmit: false } };\n                if (statement.isAdmit) {\n                    element = { number: 1, node: statement };\n                    first.push(element);\n                }\n                else {\n                    element = { number: 2, node: statement };\n                    second.push(element);\n                }\n                zero.push(element);\n            });\n            var byEveryLetter = _this.matrix.reduce(function (acc, line) {\n                return acc && line.reduce(function (accLine, cells) { return accLine && cells.length > 0; }, acc);\n            }, true);\n            if (first.length < 1 || !byEveryLetter) {\n                // console.log('CATHTHT')\n                throw new Exceptions_1.NonMinimizable();\n            }\n            // плюс если есть пробелы в таблице!\n            var groups = [];\n            groups.push(first);\n            groups.push(second);\n            var table = createTableT(zero);\n            _this.alphabet.forEach(function (tr) {\n                groups.forEach(function (stmt) { return push(stmt); });\n                var getJump = _getJump(table)(tr);\n                var updateGroups = _updateGroups(zero)(groups)(getJump);\n                while (stack.length > 0) {\n                    var head = pop();\n                    if (head === undefined) {\n                        break;\n                    }\n                    var newGrp = updateGroups(head);\n                    if (newGrp.fst.length > 0) {\n                        push(newGrp.fst);\n                        push(newGrp.snd);\n                    }\n                }\n            });\n            var toPositions = function (group) { return group.map(function (g) { return ({ stmt: g.node }); }); };\n            var grpAfterJmp = function (group, by) { return _getJump(table)(by)(group[0].node.idLogic).number; };\n            var nodes = groups.map(function (group) { return ({ id: group[0].number, isAdmit: _this.haveAdmitting(toPositions(group)) }); });\n            var edges = groups.reduce(function (acc, g) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    acc.push({\n                        from: g[0].number,\n                        to: grpAfterJmp(g, tr),\n                        transitions: new Set([[{ title: letter }]])\n                    });\n                });\n                return acc;\n            }, []);\n            // console.log(nodes)\n            var startGrp = groups.filter(function (g) {\n                var gIds = g.map(function (v) { return v.node.idLogic; });\n                return gIds.includes(startId);\n            });\n            var start = nodes[startGrp[0][0].number - 1];\n            return { graphcore: { nodes: nodes, edges: edges }, start: start };\n        };\n        _this.admitByEmptyStack = byEmpty;\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\n        // this.createMatrix()\n        // this.matrix.forEach(value => {\n        //     value.forEach(value1 => value1.forEach(value2 => {\n        //         console.log(value2.idLogic)\n        //         console.log(value2.stackDown)\n        //         console.log(value2.stackPush)\n        //         console.log(value2.stack)\n        //\n        //     }))\n        // })\n        _this.stack.push(Computer_1.BOTTOM);\n        _this.curPosition = []; //{stack: new Stack<string>(), stmt: startStatements}\n        _this.treeHist = [];\n        startStatements.forEach(function (value) {\n            var stack = new Stack_1.Stack();\n            stack.push(Computer_1.BOTTOM);\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id),\n                stack: stack\n            });\n        });\n        _this.setInput(input);\n        if (_this.epsId) { //\n            _this.curPosition.forEach(function (value) {\n                _this.cycleEps(value.stmt.idLogic, value.stack);\n            });\n            ////// this.cycleEps(this.curPosition[0].stmt.idLogic, this.curPosition[0].stack!)\n        } //\n        return _this;\n        // console.log('{{{{{{{{{{}}}}}}}}}}')\n        // console.log(this.curPosition)\n        // console.log(this.startStatements)\n        // console.log('{{{{{{{{{{}}}}}}}}}}')\n        // console.log('-------------------------')\n        // console.log(this.isDeterministic())\n        // console.log(\"ALPHBT\")\n        // this.alphabet.forEach((value, key) => console.log(value, key))\n        // console.log(\"STMTS\")\n        // this.statements.forEach(value => console.log(value))\n        // console.log(\"MTX\")\n        // this.matrix.forEach(value => {\n        //     console.log()\n        //     value.forEach(value1 => console.log(value1))\n        // })\n        // console.log('-------------------------')\n    }\n    PDA.prototype.copyPushList = function (value) {\n        var _a;\n        var cpy = [];\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\n        return cpy;\n    };\n    PDA.prototype.pushReverse = function (pushVals, stack) {\n        pushVals.reverse().forEach(function (value) {\n            stack.push(value);\n        });\n    };\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\n        newStack.pop();\n        var pushVals = this.copyPushList(value);\n        this.pushReverse(pushVals, newStack);\n    };\n    PDA.permute0 = function (permutation) {\n        var r = lodash_1.cloneDeep(permutation);\n        function cmp(a, b) {\n            if (a.stackDown && b.stackDown) {\n                if (a.stackDown < b.stackDown) {\n                    return -1;\n                }\n                if (a.stackDown > b.stackDown) {\n                    return 1;\n                }\n                return 0;\n            }\n            return 0;\n        }\n        r = r.sort(cmp);\n        var tmp = [];\n        var _tmp = [];\n        var dwn = r[0].stackDown;\n        for (var i = 0; i < r.length; i++) {\n            if (r[i].stackDown === dwn) {\n                _tmp.push(r[i]);\n            }\n            else {\n                tmp.push(_tmp);\n                dwn = r[i].stackDown;\n                _tmp = [];\n                _tmp.push(r[i]);\n            }\n        }\n        tmp.push(_tmp);\n        var ret = [];\n        var _detour = function (lvl, cur, acc) {\n            if (lvl < tmp.length) {\n                for (var i = 0; i < tmp[lvl].length; i++) {\n                    var a = lodash_1.cloneDeep(acc);\n                    a.push(tmp[lvl][i]);\n                    _detour(lvl + 1, i, a);\n                }\n            }\n            else {\n                ret.push(acc);\n            }\n        };\n        _detour(0, 0, []);\n        return ret;\n    };\n    PDA.permute = function (permutation) {\n        var length = permutation.length;\n        var result = [permutation.slice()];\n        var c = new Array(length).fill(0);\n        var i = 1;\n        var k;\n        var p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = permutation[i];\n                permutation[i] = permutation[k];\n                permutation[k] = p;\n                c[i]++;\n                i = 1;\n                result.push(permutation.slice());\n            }\n            else {\n                c[i] = 0;\n                i++;\n            }\n        }\n        return result;\n    };\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\n        var wasCreated = function (hash) {\n            return htable.get(hash) !== undefined;\n        };\n        if (!wasCreated(JSON.stringify(value))) {\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\n        }\n    };\n    PDA.prototype.cycleEps = function (curLId, stack0) {\n        var _this = this;\n        var htable = new Map();\n        var positions = [];\n        var visited = [];\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined\n            ? PDA.permute0(this.cellMatrix(curLId, this.epsId))\n            : [(this.cellMatrix(curLId, this.epsId))];\n        // permutes.push(this.cellMatrix(curLId, this.epsId))\n        // let permutes: statementCell[][] = PDA.permute(this.cellMatrix(curLId, this.epsId))\n        var cycle = function (cell, idx, idLogic, stack) {\n            visited[idx] = true;\n            cell.forEach(function (value, index) {\n                if (value.idLogic === idLogic) {\n                    if (value.stackDown === stack.peek()) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchPushEpsVal(value, newCycleStack); //\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                    else if (value.stackDown === Computer_1.EPS) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchDownEpsVal(value, newCycleStack);\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                }\n            });\n        };\n        permutes.forEach(function (value) {\n            for (var i = 0; i < visited.length; i++) {\n                visited[i] = false;\n            }\n            cycle(value, 0, curLId, stack0);\n        });\n        return positions;\n    };\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack, hist) {\n        var _this = this;\n        if (this.epsId === undefined) {\n            return;\n        }\n        var visited = [];\n        for (var i = 0; i < this.statements.size; i++) {\n            visited.push(false);\n        }\n        var dfs = function (id, stack, stDwn, elements) {\n            _this.cycleEps(id, stack).forEach(function (value) {\n                elements.push({\n                    idLogic: id,\n                    top: value.stack\n                });\n            });\n            elements.push({\n                idLogic: id,\n                top: stack\n            });\n            visited[id] = true;\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\n                        case stDwn: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                        case Computer_1.EPS: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                    }\n                }\n            }\n            return elements;\n        };\n        var histUnit = [];\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\n        var positions = [];\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\n            positions.push({\n                stmt: stmt, stack: endsOfEpsWay[i].top,\n                from: this.nodes[curLId],\n                cur: this.nodes[stmt.idLogic],\n                by: Computer_1.EPS,\n                oldStack: stack,\n                stackDown: stackDown\n                /////////\n                //?\n            });\n            hist.push({ by: Computer_1.EPS, from: this.nodes[curLId], value: this.nodes[stmt.idLogic] });\n        }\n        // hist.push(histUnit)\n        return positions;\n    };\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS) {\n            if (value.stackPush.length !== 1) {\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n            }\n            else {\n                newStack.pop();\n            }\n        }\n        else {\n            this.pushTopToNewStack0(newStack, value);\n        }\n    };\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n        }\n        else if (value.stackPush[0] !== Computer_1.EPS) {\n            var pushVals = this.copyPushList(value);\n            this.pushReverse(pushVals, newStack);\n        }\n    };\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack, hist) {\n        var _this = this;\n        var positions = [];\n        var histUnit = [];\n        var getLetter = function (id) {\n            var ret;\n            _this.alphabet.forEach(function (v, k) {\n                if (id === v) {\n                    ret = k;\n                }\n            });\n            return ret;\n        };\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\n            switch (value.stackDown) {\n                case stackDown: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchPushEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: stackDown\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n                case Computer_1.EPS: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchDownEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: Computer_1.EPS\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n            }\n        });\n        return positions;\n    };\n    PDA.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret && (!this.haveEpsilon());\n    };\n    PDA.prototype.haveAdmitting = function (positions) {\n        var ret = false;\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\n            positions.forEach(function (value) {\n                if (value.stmt.isAdmit) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n        else {\n            positions.forEach(function (value) {\n                if (value.stack.size() === 0) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n    };\n    PDA.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var _a, _b;\n            var from = {\n                id: value.from.id,\n                isAdmit: value.from.isAdmit,\n                stack: value.oldStack ? value.oldStack.getStorage() : undefined,\n                move: (_a = value.from) === null || _a === void 0 ? void 0 : _a.move,\n                output: (_b = value.from) === null || _b === void 0 ? void 0 : _b.output\n            };\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage(), from: from, cur: value.cur, by: value.by, oldStack: value.oldStack.getStorage(), stackDown: value.stackDown });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    return PDA;\n}(Computer_1.Computer));\nexports.PDA = PDA;\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    Queue.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    ImSet.prototype.getStorage = function () {\n        return this.set;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\nvar nfa = new PDA({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n        { id: 3, isAdmit: false },\n    ],\n    edges: [\n        {\n            from: 1, to: 1, transitions: new Set([\n                [\n                    { title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0'] },\n                    { title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0'] },\n                    { title: '0', stackDown: '0', stackPush: ['0', '0'] },\n                    { title: '0', stackDown: '1', stackPush: ['0', '1'] },\n                    { title: '1', stackDown: '0', stackPush: ['1', '0'] },\n                    { title: '1', stackDown: '1', stackPush: ['1', '1'] }\n                ]\n            ])\n        },\n        {\n            from: 1, to: 2, transitions: new Set([\n                [\n                    { title: Computer_1.EPS, stackDown: 'Z0', stackPush: ['Z0'] },\n                    { title: Computer_1.EPS, stackDown: '0', stackPush: ['0'] },\n                    { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'] }\n                ]\n            ])\n        },\n        {\n            from: 2, to: 2, transitions: new Set([\n                [\n                    { title: '0', stackDown: '0', stackPush: [Computer_1.EPS] },\n                    { title: '1', stackDown: '1', stackPush: [Computer_1.EPS] }\n                ]\n            ])\n        },\n        { from: 2, to: 3, transitions: new Set([[{ title: Computer_1.EPS, stackDown: 'Z0', stackPush: [Computer_1.EPS] }]]) },\n    ]\n}, [\n    { id: 1, isAdmit: false }\n], ['0', '0']);\n// console.log(nfa.isDeterministic())\n// nfa.step()\n// const aa = nfa.run()\n// console.log('_____-_--')\n// aa.histTrace!.forEach(v => {\n//     // console.log(v.byEpsPred)\n//     console.log(v.byEpsAfter)\n//     // console.log(v.byLetter)\n//     console.log()\n// })\n// const a = nfa.step()\n// console.log()\n// console.log()\n// console.log('Letter')\n// console.log(a.byLetter)\n// console.log('byEpsPred')\n// console.log(a.byEpsPred)\n// console.log('byEpsAfter')\n// console.log(a.byEpsAfter)\n// a.tree?.forEach((v) => {\n//     v.forEach((vv) => console.log(vv.by, vv.from, vv.value))\n//     console.log()\n// })\n// let nfa = new PDA(\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: true},\n//             {id: 5, isAdmit: true},\n//             {id: 6, isAdmit: false},\n//\n//         ],\n//         edges: [\n//\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 0, to: 2, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 1, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 1, to: 4, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 2, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 2, to: 5, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 3, to: 3, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 3, to: 3, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 4, to: 4, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 4, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 5, to: 5, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 5, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 6, to: 6, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 6, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//\n//         ]\n//     }, [{id: 0, isAdmit: false}], [\"0\", \"1\", \"0\"], )\n//\n// nfa.nfaToDfa()\n// console.log(nfa.run())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar EpsilonNFA = /** @class */ (function (_super) {\n    __extends(EpsilonNFA, _super);\n    function EpsilonNFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.enfaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        _this.enfaRun = function () {\n            var histUnit = [];\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: ret.byEpsPred, byLetter: ret.byLetter, byEpsAfter: ret.byEpsAfter });\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            console.log('histTrace');\n            console.log(histTrace);\n            console.log('histTrace');\n            return __assign(__assign({}, ret), { histTrace: histTrace });\n        };\n        _this.step = _this.enfaStep;\n        _this.run = _this.enfaRun;\n        return _this;\n    }\n    return EpsilonNFA;\n}(PDA_1.PDA));\nexports.EpsilonNFA = EpsilonNFA;\n// let nfa = new EpsilonNFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             // {from: 0, to: 0, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: EPS}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 2, to: 3, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 3, to: 4, transitions: new Set([ [{title: \"a\"}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: EPS}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}, {id: 3, isAdmit: false}], ['a', 'a'],\n// )\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.nfaToDfa()\n//\n// let nfa = new EpsilonNFA(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             {id: 5, isAdmit: false},\n//             {id: 6, isAdmit: false},\n//             {id: 7, isAdmit: false},\n//             {id: 8, isAdmit: false},\n//             {id: 9, isAdmit: false},\n//             {id: 10, isAdmit: false},\n//             {id: 11, isAdmit: false},\n//             {id: 12, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\n//\n//\n//\n//\n//\n//\n//             //\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\n//             //\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\n//         ]\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nexports.__esModule = true;\n"],"sourceRoot":""}