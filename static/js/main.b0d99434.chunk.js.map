{"version":3,"sources":["react-graph-vis-types.js","Logic/Mealy.js","Logic/Moore.js","Logic/OutputAutomata.js","Logic/DFA.js","Logic/NFA.js","Logic/TM.js","Logic/DPDA.js","Logic/DMealy.js","Logic/DMoore.js","Logic/Computer.js","Logic/Stack.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Components/RunControl/History.tsx","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/apiGetSaves.ts","Api/apiGetSave.ts","Api/apiSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Api/apiSignIn.ts","Components/Pages/LoginPage/LoginPage.tsx","Api/apiSignUp.ts","Components/Pages/RegisterPage/RegisterPage.tsx","Components/AppHeader/AppHeader.tsx","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","Components/Pages/RegisteredPage/RegisteredPage.tsx","VisNetwork.tsx","ErrorModal.tsx","TreeHistory.tsx","Api/apiRemoveSave.ts","Api/apiUpdateSave.ts","Api/apiUpdateUser.ts","Components/Pages/MePage/MePage.tsx","Api/apiGetUserById.ts","Api/apiGetUserSaves.ts","Api/apiCloneSave.ts","Components/Pages/UserPage/UserPage.tsx","App.tsx","Api/apiGetUser.ts","index.tsx","Logic/IGraphTypes.js","Logic/Exceptions.js","Logic/PDA.js","Logic/EpsilonNFA.js"],"names":["exports","__esModule","__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","Mealy","_super","graph","startStatements","input","_this","mealyToMoore","outs","Map","edges","forEach","edge","transitions","_","transition","out","output","has","set","size","outNumbs","v","k","push","console","log","diffEdges","reduce","acc","tmp","from","to","title","toOuts","nodes","id","fill","count","undefined","get","Error","nodesMoore","key","map","value","filter","find","node","outEdges","idLetter","startNodes","startMoore","_a","edgesMoore","sort","a","j","Set","graphcore","start","step","oaStep","run","oaRun","require","OutputAutomata","isAdmit","Moore","restart","counterSteps","historiStep","curPosition","stmt","statements","mooreToMealy","mapNodes","mealyEdges","tmpTransitions","tmpTransiton","add","statement","Computer_1","haveEpsilon","alphabet","EPS","histTrace","historiRun","counterStepsForResult","ref","after","_step","counter","history","haveAdmitting","toNodes","nextStepPosition","position","by","cellMatrix","idLogic","ret","getLetter","cur","nextStepPositions","positions","nextPOs","nextPs","pos","po","nextOs","index","outputs","byLetter","trNum","nextPositions","nodesOfCurPos","setInput","matrix","value1","isDeterministic","line","cells","fstCell","hasDublicates","stackDown","retNodes","temp","stack","getStorage","Computer","EpsilonNFA_1","Exceptions_1","DFA","startStatement","NonDeterministic","enfaStep","enfaRun","EpsilonNFA","NFA","IGraphTypes_1","PDA_1","TMMemory","storage","pointer","getPointer","reset","lookUp","initialize","init","mvRight","curr","upd","mvLeft","tmp_1","TM","mem","__step","tr","histori","mv","move","Move","R","stackPush","L","assignCurMt","memory","mtTrun","mtStep","checkMemFormat","isMtMem","value2","_b","curMt","newPos","stPush0","stPush1","PDA","nfa","DPDA","byEmpty","pdaStep","pdaRun","DMealy","DMoore","eof","BOTTOM","byEmptyStackAdmt","isAdmt","nfaToDfa","minimizeDfa","getCurrNode","currentNode","getStartStatements","localValue","_loop_1","this_1","getAlphabetFromEdges","getStatementsFromNodes","createMatrix","getInput","alphabetSet","i_1","statementFrom","statementTo","letterId","stDwn","stPsh","Stack","capacity","Infinity","item","pop","peek","list","cpyTo","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","reinitComputer","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","epsSubstStr","epsText","epsSubstStrs","values","join","mvStr","transitionsToLabel","frmt","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","epsSubst","epsSubsts","str","getTransitionsTitles","decorateGraph","elements","update","lableTokens","split","x","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","graphToElements","DataSet","elementsToGraph","computersInfo","dfa","name","description","preview","defaultGraph","y","nfa-eps","pda","dpda","tm","mealy","dmealy","moore","dmoore","getCookie","_parts$pop","parts","document","cookie","shift","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","activeTransition","changeTransitions","_ref","asyncToGenerator","regenerator_default","mark","_callee","accumulator","wrap","_context","prev","next","transitionsText","fth","fst","trd","bebra","reverse","snd","_value$trd","changeEdgeTransitions","stop","_x","deleteEdge","_callee2","_context2","changeEditMode","editMode","updateTransitions","_callee3","_context3","_value$trd2","deleteTransition","delete","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","helperText","onBlur","Edit_default","History","startNode","Tooltip","note","historyEndRef","creatButtons","buttons","buttonsComp","button","RunControl","computerShouldBeUpdated","current","some","isEqual","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","gElements","resetHistTree","computer","result","paddingTreeId","getLastHistNodeId","idd","gNode","gEl","createHistNode","lastHistUnits","onInputChanged","_this$state$computer","drawTreeLayot","pred","letter","l","txt","stackDwn","bySymbRules","_v$from","_v$from2","_p$stack","_v$from$stack","toString","rule","createHistEdge","treeEps","byEpsPred","byEpsAfter","tmp1","tree","stepResult","_nodes","error","abrupt","setResettedStatus","wasRuned","currentInputIndex","changeStateIsCurrent","updMem","nodeCore","setHistory","History_History","t0","setIsNonDetermenistic","_this$state$computer2","_this$state$computer3","_callee4","_context4","_ref4","histStep","it","updateElements","setComputerType","admitByStack","curStbyEmp","setByEmptyStack","miniDFA","NonMinimizable","setIsNonMinimizable","starts","includes","defaultButtonsLine","defaultButtons","buttonsTree","treeContextInfo","treeVisible","buttonMealy","buttonMoore","buttonsByStackByState","changerStack","buttonsNoRun","getButtons","_this2","setInit","haveEmpty","setNfaToDfa","setMinimizeDfa","setMooreToMealy","setMealyToMoore","setChangerByStack","setRun","setStep","setReset","snapshot","_this3","char","Done_default","Close_default","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","Number","save_index","findIndex","saves_json","JSON","stringify","setItem","parse","getItem","BASE_URL","process","getAuthHeaders","headers","Headers","getParams","method","ApiGetSaves","onAuthFailed","reject","url","params","fetch","then","response","status","ok","statusText","json","catch","ApiGetSave","request","ApiSave","body","postParams","CloudSavesManager","sent","data","serialized_save","WelcomePopout","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","getSave","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","href","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","ApiSignIn","redirect","text","LoginPage","objectDestructuringEmpty","navigate","useNavigate","email","setEmail","password","setPassword","setError","onLoginClicked","jwt","onSignInWithExternalProviderClicked","provider","window","location","Container","spacing","justifyContent","minHeight","align","sx","paddingBottom","Alert","severity","ApiSignUp","RegisterPage","about","setAbout","onRegisterClicked","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","AppBar","Toolbar","SuccessLoginPage","updateCurrentUser","updateAuth","searchParams","_useSearchParams","useSearchParams","RegisteredPage","VisNetwork","useRef","domNode","smooth","enabled","roundness","width","arrows","scaleFactor","manipulation","addEdge","callback","setKeyPressed","network","disableEditMode","layout","improvedLayout","shapeProperties","interpolation","shape","font","labelHighlightBold","physics","options","_React$useState","_React$useState2","contextMenu","setContextMenu","handleContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","handleClose","keyPressed","handleUserKeyPress","useCallback","keyCode","addEdgeMode","handleUserKeyUnPress","content","end","addEventListener","removeEventListener","createRef","useLayoutEffect","Network","on","onDoubleClick","onClick1","onClick2","onClick3","onClick4","unselectAll","refContainer","onContextMenu","Menu","anchorReference","anchorPosition","top","left","transform","bgcolor","boxShadow","NonDetermenisticModal","setOpen","isNonDetermenistic","react","Modal","aria-labelledby","aria-describedby","Box","component","mt","NonMinimizableModal","_React$useState3","_React$useState4","isNonMinimizable","TreeHistory","interaction","keyboard","dragNodes","hierarchical","treeSpacing","direction","parentCentralization","sortMethod","shakeTowards","ApiRemoveSave","ApiUpdateSave","ApiUpdateUser","MePage","_user$about","user","setUser","setSaves","shareDialogOpen","setShareDialogOpen","saveToRemoveId","setSaveToRemoveId","editAccountMode","setEditAccountMode","editedAbout","setEditedAbout","_useState13","_useState14","editSaveDialogOpen","setEditSaveDialogOpen","_useState15","_useState16","saveToEditId","setSaveToEditId","_useState17","_useState18","editedSaveName","setEditedSaveName","onRemoveConfirmClicked","removeSave","updateSaves","closeDialog","onOpenClicked","onEditAccountClicked","saveAccountChanges","_ref6","_callee5","_context5","updatedUser","closeShareDialog","closeEditSaveDialog","_ref7","_callee6","_context6","_ref8","_callee7","_context7","_x3","setSaveShareState","_ref9","_callee8","shareState","_context8","isShared","_x4","_x5","_user$about2","DialogContentText","OutlinedInput","readOnly","endAdornment","InputAdornment","navigator","clipboard","writeText","ContentCopyOutlined_default","userName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Date","createdDateTime","toLocaleString","lastModifiedDateTime","LaunchOutlined_default","EditOutlined_default","DeleteOutlineRounded_default","icon","ApiGetUserById","ApiGetUserSaves","ApiCloneSave","UserPage","cloneDialogOpen","setCloneDialogOpen","saveToCloneId","setSaveToCloneId","userId","useParams","onCloneDialogClose","getUser","cloneSave","createContext","computerAction","controlAction","changerByStack","Ribbon","_props$mem","wasComputerResetted","_props$memRef","_props$memRef$current","ptr","abs","memRef","scrollIntoView","behavior","App","networkTST","errIsNonDetermenistic","errIsNonMinimizable","lastNodeId","subscribeToShortcuts","ctrlKey","openSavePopout","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","logout","updateGraph","ids","createNode","canvas","lastHistNodeId","treeElems","remove","selectNode","nodesIDs","selectedNodes","selectedNode","deselectNode","rmEdges","selectEdge","edgesIDs","selectedEdges","selectedEdge","deselectEdge","changeEdgeTransition","NFAContextMenu","showTree","DFAContextMenu","MealyContextMenu","MooreContextMenu","PDAContextMenu","AnotherContextMenu","ContextMenu","inEdgeMode","widthConstraint","heightConstraint","initiallyStabilized","popout","react_router_dom","react_router","path","element","Pages_LoginPage_LoginPage","Pages_RegisterPage_RegisterPage","Pages_RegisteredPage_RegisteredPage","Pages_SuccessLoginPage_SuccessLoginPage","Pages_MePage_MePage","Pages_UserPage_UserPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","ErrorModal_NonDetermenisticModal","ErrorModal_NonMinimizableModal","App_Ribbon","Components_AppHeader_AppHeader","VisNetwork_VisNetwork","TreeHistory_TreeHistory","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","f","jsx","_this2$historyEndRef","_this2$historyEndRef$","ReactDOM","render","StrictMode","src_App_0","getElementById","Stack_1","lodash_1","epsId","admitByEmptyStack","treeHist","histUnit","last","unitHsit","newPosSet","updCurPos","epsStep","pPos","epsilonStep","rmRepeations","htable","letterStep","_nextStepPositions","ps","table","ImSet","startPos","head","afterEps","EPStack","flatted","_to","_edges","getIter","delta","startId","_getJump","zero","first","second","number","byEveryLetter","accLine","groups","group","cutBy","cell","createTableT","getJump","updateGroups","jmpGrp","newGrp","newNumber","toRm","splice","_updateGroups","toPositions","g","cycleEps","copyPushList","cpy","pushReverse","pushVals","pushTopToNewStack0","newStack","permute0","permutation","r","cloneDeep","_tmp","dwn","_detour","lvl","permute","slice","c","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","idx","newCycleStack","matchPushEpsVal","matchDownEpsVal","hist","endsOfEpsWay","dfs","oldStack","transformedInput","Queue","enqueue","dequeue","normalize","_v","getItter","myForEach","getNth","iter"],"mappings":"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","file":"static/js/main.b0d99434.chunk.js","sourcesContent":["\"use strict\";\r\nexports.__esModule = true;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\r\nvar Mealy = /** @class */ (function (_super) {\r\n    __extends(Mealy, _super);\r\n    function Mealy(graph, startStatements, input) {\r\n        var _this = _super.call(this, graph, startStatements, input) || this;\r\n        _this.mealyToMoore = function () {\r\n            var outs = new Map();\r\n            _this.edges.forEach(function (edge) {\r\n                edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\r\n                    var out = transition.output;\r\n                    if (!outs.has(out)) {\r\n                        outs.set(out, outs.size);\r\n                    }\r\n                }); });\r\n            });\r\n            var outNumbs = [];\r\n            outs.forEach(function (v, k) { return outNumbs.push(k); });\r\n            console.log(outs);\r\n            console.log(outNumbs);\r\n            var diffEdges = _this.edges.reduce((function (acc, edge) {\r\n                var tmp = [];\r\n                edge.transitions.forEach(function (t) { return t.forEach(function (v) { return tmp.push({\r\n                    from: edge.from,\r\n                    to: edge.to,\r\n                    title: v.title,\r\n                    output: v.output ? v.output : ''\r\n                }); }); });\r\n                tmp.forEach(function (v) { return acc.push(v); });\r\n                return acc;\r\n            }), new Array());\r\n            console.log('UUUU');\r\n            diffEdges.forEach(function (v) {\r\n                console.log(v);\r\n            });\r\n            console.log('UU->I');\r\n            var toOuts = new Map();\r\n            _this.nodes.forEach(function (v) {\r\n                return toOuts.set(v.id, new Array(outs.size).fill(-1));\r\n            });\r\n            var count = 1;\r\n            diffEdges.forEach(function (edge) {\r\n                if (toOuts.get(edge.to) === undefined) {\r\n                    throw new Error(\"Mealy to Moore\");\r\n                }\r\n                else {\r\n                    if (toOuts.get(edge.to)[outs.get(edge.output)] === -1) {\r\n                        toOuts.get(edge.to)[outs.get(edge.output)] = count;\r\n                        count++;\r\n                    }\r\n                }\r\n            });\r\n            var nodesMoore = [];\r\n            toOuts.forEach(function (v, key) { return v\r\n                .map(function (v, k) { return ({ value: v, out: outNumbs[k] }); })\r\n                .filter(function (v) { return v.value !== -1; })\r\n                .forEach(function (v) {\r\n                nodesMoore.push(__assign(__assign({}, _this.nodes.find(function (node) { return node.id === key; })), { id: v.value, output: v.out }));\r\n            }); });\r\n            console.log('LLKLKLKLLLKLL');\r\n            nodesMoore.forEach(function (v) { return console.log(v); });\r\n            console.log('LLKLKLKLLLKLL');\r\n            toOuts.forEach(function (v, key) {\r\n                console.log(key + ' ~~~ ' + v);\r\n            });\r\n            var outEdges = diffEdges.reduce(function (acc, v) {\r\n                if (toOuts.get(v.from) === undefined) {\r\n                    throw new Error(\"Mealy to Moore\");\r\n                }\r\n                else {\r\n                    var mooreIds = toOuts.get(v.from).filter(function (id) { return id !== -1; });\r\n                    mooreIds.forEach(function (id) {\r\n                        var idLetter = outs.get(v.output);\r\n                        acc.push({\r\n                            from: id,\r\n                            to: toOuts.get(v.to)[idLetter],\r\n                            title: v.title\r\n                        });\r\n                    });\r\n                    return acc;\r\n                }\r\n            }, new Array());\r\n            console.log('________');\r\n            outEdges.forEach(function (v) { return console.log(v); });\r\n            console.log('________');\r\n            console.log('vsdfsdfsdf');\r\n            var startNodes = _this.startStatements.map(function (v) { return _this.nodes[v.id]; });\r\n            var startMoore = [];\r\n            startNodes.forEach(function (v) { var _a; return (_a = toOuts.get(v.id)) === null || _a === void 0 ? void 0 : _a.filter(function (v) { return v !== -1; }).forEach(function (v) { return startMoore.push(nodesMoore.find(function (node) { return node.id === v; })); }); });\r\n            startNodes.forEach(function (v) { return console.log(v); });\r\n            console.log('vsdfsdfsdf---||||--');\r\n            var edgesMoore = [];\r\n            outEdges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\r\n            console.log('vvvvvvvvvvvvvv');\r\n            outEdges.forEach(function (v) { return console.log(v); });\r\n            console.log('^^^^^^^^^^^^^^');\r\n            for (var i = 0; i < outEdges.length; i++) {\r\n                var acc = [];\r\n                var delta = 0;\r\n                var j = i;\r\n                while (j < outEdges.length && outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\r\n                    acc.push({ title: outEdges[j].title });\r\n                    j++;\r\n                }\r\n                i = j - 1;\r\n                edgesMoore.push({\r\n                    from: outEdges[i].from,\r\n                    to: outEdges[i].to,\r\n                    transitions: new Set([acc])\r\n                });\r\n                // for (let j = i; j < outEdges.length; j++) {\r\n                //     if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\r\n                //         acc.push({ title: outEdges[j].title })\r\n                //         delta++\r\n                //     }\r\n                //     edgesMoore.push({\r\n                //         from: outEdges[i].from,\r\n                //         to: outEdges[i].to,\r\n                //         transitions: new Set<TransitionParams[]>([acc])\r\n                //     })\r\n                //     i += delta - 1\r\n                // }\r\n            }\r\n            console.log('{{{{{{{v}}}}}}}');\r\n            edgesMoore.forEach(function (v) {\r\n                console.log(v);\r\n            });\r\n            console.log('{{{{{{{v}}}}}}}');\r\n            // for (let i = 0; i < outEdges.length; i++) {\r\n            //     const acc: TransitionParams[] = []\r\n            //     let delta = 0\r\n            //     for (let j = i; j < outEdges.length; j++) {\r\n            //         if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\r\n            //             acc.push(Array.from(outEdges[j].transitions)[0][0])\r\n            //             delta++\r\n            //         }\r\n            //     }\r\n            //     outEdges.push({\r\n            //         from: outEdges[i].from,\r\n            //         to: outEdges[i].to,\r\n            //         transitions: new Set<TransitionParams[]>([acc])\r\n            //     })\r\n            //     i += delta - 1\r\n            // }\r\n            // const nodesOuts = () => {\r\n            //     let counter = 0\r\n            //     return this.nodes.reduce((acc: (NodeCore | undefined)[][], node: NodeCore) => {\r\n            //         const edges = this.edges.filter((edge) => edge.to === node.id)\r\n            //         const tmp: (NodeCore | undefined)[] = []\r\n            //         outs.forEach(() => tmp.push(undefined))\r\n            //         edges.forEach((edge) => {\r\n            //             edge.transitions.forEach((_) => _.forEach((transition) => {\r\n            //                 const out = transition.output!\r\n            //                 const outIndex = outs.get(out)!\r\n            //                 if (!tmp[outIndex]) {\r\n            //                     tmp[outIndex] = {\r\n            //                         id: counter,\r\n            //                         isAdmit: node.isAdmit,\r\n            //                         output: out\r\n            //                     }\r\n            //                     counter++\r\n            //                 }\r\n            //             }))\r\n            //         })\r\n            //         if (tmp.filter((v) => v !== undefined).length === 0) {\r\n            //             tmp[0] = {\r\n            //                 id: counter,\r\n            //                 isAdmit: node.isAdmit,\r\n            //                 output: \"~\"\r\n            //             }\r\n            //             counter++\r\n            //         }\r\n            //         acc.push(tmp)\r\n            //         return acc\r\n            //     }, [])\r\n            // }\r\n            // const _nodesOuts: (NodeCore | undefined)[][] = nodesOuts()\r\n            // const _edges = _nodesOuts.reduce((acc: EdgeCore[], vs, index) => {\r\n            //     const edges = this.edges.filter((edge) => edge.from === this.nodes[index].id)\r\n            //     edges.forEach((edge) => edge.transitions.forEach((_) => _.forEach(transition => {\r\n            //         vs.forEach((v) => {\r\n            //             console.log(v)\r\n            //             if (v !== undefined && transition.output !== undefined) {\r\n            //                 const out = outs.get(transition.output)\r\n            //                 if (out) {\r\n            //                     const ndesOut = _nodesOuts[edge.to][out]\r\n            //                     if (ndesOut) {\r\n            //                         acc.push({\r\n            //                             from: v.id,\r\n            //                             to: ndesOut.id,\r\n            //                             transitions: new Set<TransitionParams[]>([[{ title: transition.title }]])\r\n            //                         })\r\n            //                     }\r\n            //                 }\r\n            //             }\r\n            //         })\r\n            //     })))\r\n            //     return acc\r\n            // }, [])\r\n            // const edges: EdgeCore[] = []\r\n            // _edges.sort((a, b) => a.from - b.from || a.to - b.to)\r\n            // for (let i = 0; i < _edges.length; i++) {\r\n            //     const acc: TransitionParams[] = []\r\n            //     let delta = 0\r\n            //     for (let j = i; j < _edges.length; j++) {\r\n            //         if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\r\n            //             acc.push(Array.from(_edges[j].transitions)[0][0])\r\n            //             delta++\r\n            //         }\r\n            //     }\r\n            //     edges.push({\r\n            //         from: _edges[i].from,\r\n            //         to: _edges[i].to,\r\n            //         transitions: new Set<TransitionParams[]>([acc])\r\n            //     })\r\n            //     i += delta - 1\r\n            // }\r\n            // const starts = this.startStatements.map((stmt) => stmt.id)\r\n            // const nodes = _nodesOuts.reduce((acc: NodeCore[], vs, index) => {\r\n            //     vs.forEach((v) => {\r\n            //         if (v) {\r\n            //             acc.push(v)\r\n            //         }\r\n            //     })\r\n            //     return acc\r\n            // }, [])\r\n            // const start = starts.reduce((acc: NodeCore[], id) => {\r\n            //     const curNodeOuts = _nodesOuts[id].filter((v) => {\r\n            //         if (v !== undefined) {\r\n            //             return v\r\n            //         }\r\n            //     })\r\n            //     acc.push(curNodeOuts[0]!)\r\n            //     return acc\r\n            // }, [])\r\n            return {\r\n                graphcore: { edges: edgesMoore, nodes: nodesMoore },\r\n                start: startMoore\r\n            };\r\n        };\r\n        _this.step = _this.oaStep;\r\n        _this.run = _this.oaRun;\r\n        return _this;\r\n    }\r\n    return Mealy;\r\n}(OutputAutomata_1.OutputAutomata));\r\nexports.Mealy = Mealy;\r\n// let nfa = new Mealy(\r\n//     {\r\n//         nodes: [\r\n//             { id: 0, isAdmit: false },\r\n//             { id: 1, isAdmit: false },\r\n//         ],\r\n//         edges: [\r\n//             { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//         ]\r\n//     }, [{ id: 0, isAdmit: false }], [])\r\n// console.log(nfa.isDeterministic())\r\n// let nfa = new Mealy(\r\n//     {\r\n//         nodes: [\r\n//             { id: 1, isAdmit: false },\r\n//             { id: 2, isAdmit: false },\r\n//             { id: 3, isAdmit: false },\r\n//             { id: 4, isAdmit: false },\r\n//         ],\r\n//         edges: [\r\n//             { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\r\n//             { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\r\n//             { from: 2, to: 4, transitions: new Set([[{ title: 'a', output: '1' }, { title: 'b', output: '1' }]]) },\r\n//             // { from: 2, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\r\n//             { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\r\n//             { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\r\n//             { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\r\n//             { from: 4, to:3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\r\n//         ]\r\n//     }, [{ id: 1, isAdmit: false }], [])\r\n// console.log(nfa.mealyToMoore().graphcore.edges)\r\nvar nfa = new Mealy({\r\n    nodes: [\r\n        { id: 1, isAdmit: false },\r\n        { id: 2, isAdmit: false },\r\n        { id: 3, isAdmit: false },\r\n        { id: 4, isAdmit: false },\r\n    ],\r\n    edges: [\r\n        // { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\r\n        // { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\r\n        // {\r\n        //     from: 2, to: 4, transitions: new Set([[\r\n        //         { title: 'a', output: '1' },\r\n        //         { title: 'b', output: '1' },\r\n        //     ]])\r\n        // },\r\n        // { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\r\n        // { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\r\n        // { from: 4, to: 3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\r\n        // { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\r\n        { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n        { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n        { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n        { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n        { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\r\n        { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n        { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\r\n    ]\r\n}, [{ id: 1, isAdmit: false }], []);\r\n// console.log(nfa.run())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\nvar a = nfa.mealyToMoore();\r\nconsole.log(a);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\r\nvar Moore = /** @class */ (function (_super) {\r\n    __extends(Moore, _super);\r\n    function Moore(graph, startStatements, input) {\r\n        var _this = _super.call(this, graph, startStatements, input) || this;\r\n        _this.restart = function () {\r\n            _this.counterSteps = 0;\r\n            _this.historiStep = [];\r\n            _this.curPosition = [];\r\n            _this.startStatements.forEach(function (value) {\r\n                _this.curPosition.push({\r\n                    stmt: _this.statements.get(value.id)\r\n                });\r\n            });\r\n        };\r\n        _this.mooreToMealy = function () {\r\n            var mapNodes = new Map();\r\n            _this.nodes.forEach(function (node) { return mapNodes.set(node.id, { id: node.id, isAdmit: node.isAdmit, output: node.output }); });\r\n            var mealyEdges = _this.edges.map(function (edge) {\r\n                var tmpTransitions = new Set();\r\n                var tmpTransiton = [];\r\n                edge.transitions.forEach(function (v) { return v.forEach(function (transition) {\r\n                    var _a;\r\n                    tmpTransiton.push({ title: transition.title, output: (_a = mapNodes.get(edge.to)) === null || _a === void 0 ? void 0 : _a.output });\r\n                }); });\r\n                tmpTransitions.add(tmpTransiton);\r\n                return { from: edge.from, to: edge.to, transitions: tmpTransitions };\r\n            });\r\n            console.log('>>>>', _this.startStatements);\r\n            return {\r\n                graphcore: { edges: mealyEdges, nodes: _this.nodes.map(function (node) { return ({ id: node.id, isAdmit: node.isAdmit }); }) },\r\n                start: _this.startStatements.map(function (statement) { return ({ id: statement.id, isAdmit: statement.isAdmit }); })\r\n            };\r\n        };\r\n        _this.step = _this.oaStep;\r\n        // (): Step => {\r\n        //     if (!super.isDeterministic()) {\r\n        //         throw new NonDeterministic()\r\n        //     }\r\n        //     return this.oaRun()\r\n        // }\r\n        _this.run = _this.oaRun;\r\n        return _this;\r\n    }\r\n    return Moore;\r\n}(OutputAutomata_1.OutputAutomata));\r\nexports.Moore = Moore;\r\n// let nfa = new Moore(\r\n//     {\r\n//         nodes: [\r\n//             { id: 0, isAdmit: false, output: 'b' },\r\n//             { id: 1, isAdmit: false, output: 'b' },\r\n//             // { id: 2, isAdmit: false, output: 'a' },\r\n//             // { id: 3, isAdmit: false, output: '3' },\r\n//         ],\r\n//         edges: [\r\n//             // { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n//             { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n//             { from: 0, to: 0, transitions: new Set([[{ title: '0' }]]) },\r\n//             // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n//             // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\r\n//             // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n//             // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n//         ]\r\n//     }, [{ id: 0, isAdmit: false }], [\"0\"])\r\n// // console.log(nfa.run())\r\n// // console.log(nfa.mooreToMealy().start)\r\n// // edges.forEach(v => console.log(v.from, v.to, v.transitions))\r\n// console.log(nfa.run())\r\n// // const conv = nfa.moorToMealy()\r\n// // conv.graphcore.edges.forEach(edge => {\r\n// //     console.log(edge.from)\r\n// //     console.log(edge.to)\r\n// //     console.log(edge.transitions)\r\n// // })\r\n// // conv.graphcore.nodes.forEach(node => {\r\n// //     console.log(node)\r\n// // })\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar Computer_1 = require(\"./Computer\");\r\nvar OutputAutomata = /** @class */ (function (_super) {\r\n    __extends(OutputAutomata, _super);\r\n    function OutputAutomata(graph, startStatements, input) {\r\n        var _this = _super.call(this, graph, startStatements) || this;\r\n        _this.haveEpsilon = function () { return _this.alphabet.get(Computer_1.EPS) !== undefined; };\r\n        _this.restart = function () {\r\n            _this.counterSteps = 0;\r\n            _this.historiStep = [];\r\n            _this.curPosition = [];\r\n            _this.startStatements.forEach(function (value) {\r\n                _this.curPosition.push({\r\n                    stmt: _this.statements.get(value.id)\r\n                });\r\n            });\r\n        };\r\n        _this.oaRun = function () {\r\n            var histTrace = [];\r\n            _this.historiRun = [];\r\n            _this.counterStepsForResult = 0;\r\n            var output;\r\n            for (var i = 0; i < _this.input.length; i++) {\r\n                var ref = {\r\n                    counterSteps: _this.counterStepsForResult,\r\n                    curPosition: _this.curPosition,\r\n                    historiStep: _this.historiRun\r\n                };\r\n                var after = _this._step(ref, histTrace);\r\n                _this.counterStepsForResult = ref.counterSteps;\r\n                console.log(_this.counterStepsForResult);\r\n                _this.curPosition = ref.curPosition;\r\n                _this.historiRun = ref.historiStep;\r\n                output = after.output;\r\n            }\r\n            return {\r\n                counter: _this.counterStepsForResult,\r\n                history: _this.historiRun,\r\n                isAdmit: _this.haveAdmitting(_this.curPosition),\r\n                nodes: _this.toNodes(_this.curPosition),\r\n                output: output,\r\n                histTrace: histTrace\r\n            };\r\n        };\r\n        _this.nextStepPosition = function (position, by) {\r\n            return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) {\r\n                var getLetter = function (id) {\r\n                    var ret;\r\n                    _this.alphabet.forEach(function (v, k) {\r\n                        if (id === v) {\r\n                            ret = k;\r\n                        }\r\n                    });\r\n                    return ret;\r\n                };\r\n                var ret = {\r\n                    stmt: v,\r\n                    by: getLetter(by),\r\n                    cur: _this.nodes[v.idLogic],\r\n                    from: _this.nodes[position.stmt.idLogic]\r\n                };\r\n                // return ({ position: { stmt: v }, output: v.output })\r\n                return ({ position: ret, output: v.output });\r\n            });\r\n        };\r\n        _this.nextStepPositions = function (positions, by) {\r\n            var nextPOs = positions.map(function (v) { return _this.nextStepPosition(v, by); });\r\n            var nextPs = nextPOs.reduce(function (acc, pos) {\r\n                pos.forEach(function (po) { return acc.push(po.position); });\r\n                return acc;\r\n            }, []);\r\n            var nextOs = nextPOs.reduce(function (acc, pos) {\r\n                pos.forEach(function (po) {\r\n                    if (po.output === undefined) {\r\n                        throw new Error(\"Output undefinded\");\r\n                    }\r\n                    acc.push(po.output);\r\n                });\r\n                return acc;\r\n            }, []);\r\n            nextPs.forEach(function (v, index) { return v.output = nextOs[index]; });\r\n            return { positions: nextPs, outputs: nextOs };\r\n        };\r\n        _this._step = function (ref, histTrace) {\r\n            var _a;\r\n            var byLetter = [];\r\n            var trNum = _this.alphabet.get((_a = _this.input[ref.counterSteps]) === null || _a === void 0 ? void 0 : _a.value);\r\n            var nextPositions = _this.nextStepPositions(ref.curPosition, trNum);\r\n            ref.curPosition = nextPositions.positions;\r\n            var nodesOfCurPos = _this.toNodes(ref.curPosition);\r\n            nodesOfCurPos.forEach(function (node) { return byLetter.push(node); });\r\n            ref.historiStep.push({ nodes: nodesOfCurPos, by: trNum });\r\n            if (ref.curPosition.length > 0) {\r\n                ref.counterSteps++;\r\n            }\r\n            console.log('--->byLetter');\r\n            console.log(byLetter);\r\n            console.log('--->byLetter');\r\n            histTrace.push({ byLetter: byLetter });\r\n            return {\r\n                counter: ref.counterSteps,\r\n                history: ref.historiStep,\r\n                isAdmit: _this.haveAdmitting(ref.curPosition),\r\n                nodes: nodesOfCurPos,\r\n                output: nextPositions.outputs,\r\n                byLetter: byLetter,\r\n                histTrace: histTrace\r\n            };\r\n        };\r\n        _this.oaStep = function () {\r\n            var ref = {\r\n                counterSteps: _this.counterSteps,\r\n                curPosition: _this.curPosition,\r\n                historiStep: _this.historiStep\r\n            };\r\n            var after = _this._step(ref, []);\r\n            _this.counterSteps = ref.counterSteps;\r\n            _this.curPosition = ref.curPosition;\r\n            _this.historiStep = ref.historiStep;\r\n            return {\r\n                counter: after.counter,\r\n                history: after.history,\r\n                isAdmit: after.isAdmit,\r\n                nodes: after.nodes,\r\n                output: after.output,\r\n                byLetter: after.byLetter\r\n            };\r\n        };\r\n        _this.setInput = function (input) {\r\n            _this.input = [];\r\n            input.forEach(function (value) {\r\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\r\n            });\r\n            _this.restart();\r\n        };\r\n        _this.curPosition = [];\r\n        startStatements.forEach(function (value) {\r\n            _this.curPosition.push({\r\n                stmt: _this.statements.get(value.id)\r\n            });\r\n        });\r\n        _this.setInput(input);\r\n        _this.counterSteps = 0;\r\n        console.log(\"ALPHBT\");\r\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\r\n        console.log(\"STMTS\");\r\n        _this.statements.forEach(function (value) { return console.log(value); });\r\n        console.log(_this.curPosition);\r\n        _this.matrix.forEach(function (value) {\r\n            console.log();\r\n            value.forEach(function (value1) { return console.log(value1); });\r\n        });\r\n        return _this;\r\n    }\r\n    OutputAutomata.prototype.isDeterministic = function () {\r\n        var ret = true;\r\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\r\n            var fstCell = cells[0];\r\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\r\n            if (cells.length > 1 && hasDublicates) {\r\n                ret = false;\r\n            }\r\n        }); });\r\n        return ret;\r\n    };\r\n    OutputAutomata.prototype.toNodes = function (positions) {\r\n        var _this = this;\r\n        var retNodes = [];\r\n        positions.forEach(function (value) {\r\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { from: value.from, cur: value.cur, by: value.by, output: value.output, stack: value.stack === undefined ? undefined : value.stack.getStorage() });\r\n            retNodes.push(temp);\r\n        });\r\n        return retNodes;\r\n    };\r\n    OutputAutomata.prototype.haveAdmitting = function (positions) {\r\n        return positions.reduce(function (acc, p) { return acc && p.stmt.isAdmit; }, true);\r\n    };\r\n    return OutputAutomata;\r\n}(Computer_1.Computer));\r\nexports.OutputAutomata = OutputAutomata;\r\n// let nfa = new Moor(\r\n//     {\r\n//         nodes: [\r\n//             { id: 0, isAdmit: false, output: '0' },\r\n//             { id: 1, isAdmit: false, output: '1' },\r\n//             { id: 2, isAdmit: false, output: '2' },\r\n//             { id: 3, isAdmit: false, output: '3' },\r\n//         ],\r\n//         edges: [\r\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5' }]]) },\r\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10'}]]) },\r\n//             { from: 2, to: 3, transitions: new Set([[{ title: '10'}]]) },\r\n//             { from: 3, to: 3, transitions: new Set([[{ title: '5' }]]) },\r\n//         ]\r\n//     }, [{ id: 0, isAdmit: false }], [\"5\"])\r\n// console.log(nfa.run())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar DFA = /** @class */ (function (_super) {\r\n    __extends(DFA, _super);\r\n    function DFA(graph, startStatement, input) {\r\n        var _this = _super.call(this, graph, startStatement, input) || this;\r\n        _this.step = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.enfaStep();\r\n        };\r\n        _this.run = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.enfaRun();\r\n        };\r\n        _this.setInput(input);\r\n        return _this;\r\n    }\r\n    return DFA;\r\n}(EpsilonNFA_1.EpsilonNFA));\r\nexports.DFA = DFA;\r\nvar nfa = new DFA({\r\n    nodes: [\r\n        { id: 1, isAdmit: false },\r\n        { id: 2, isAdmit: true },\r\n    ],\r\n    edges: [\r\n        { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\r\n        { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\r\n    ]\r\n}, [{ id: 1, isAdmit: false }], []);\r\n// nfa.\r\n// let nfa = new DFA (\r\n//     {\r\n//         nodes: [\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: true},\r\n//\r\n//\r\n//             // {id: 1, isAdmit: false},\r\n//             // {id: 2, isAdmit: true},\r\n//             // {id: 3, isAdmit: false},\r\n//             // {id: 4, isAdmit: true},\r\n//             // {id: 5, isAdmit: true},\r\n//             // {id: 6, isAdmit: false},\r\n//\r\n//             // {id: 0, isAdmit: false},\r\n//             // {id: 1, isAdmit: false},\r\n//             // {id: 2, isAdmit: false},\r\n//             // {id: 3, isAdmit: false},\r\n//             // {id: 4, isAdmit: true},\r\n//             // {id: 5, isAdmit: true},\r\n//             // {id: 6, isAdmit: false},\r\n//\r\n//\r\n//         ],\r\n//         edges: [\r\n//\r\n//             {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\r\n//             {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\r\n//\r\n//             //youtube\r\n//             // {from: 1, to: 5, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 1, to: 6, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 2, to: 6, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 2, to: 4, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 4, to: 3, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 5, to: 2, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 5, to: 3, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'b'}] ])},\r\n//\r\n//\r\n//             // {from: 0, to: 1, transitions: new Set([ [{title: '1'}] ])},\r\n//             // {from: 0, to: 3, transitions: new Set([ [{title: '0'}] ])},\r\n//             // {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\r\n//             // {from: 1, to: 5, transitions: new Set([ [{title: '1'}] ])},\r\n//             // {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\r\n//             // {from: 2, to: 5, transitions: new Set([ [{title: '1'}] ])},\r\n//             // {from: 5, to: 5, transitions: new Set([ [{title: '0'}, {title: '1'}] ])},\r\n//             // {from: 3, to: 0, transitions: new Set([ [{title: '0'}] ])},\r\n//             // {from: 3, to: 4, transitions: new Set([ [{title: '1'}] ])},\r\n//             // {from: 4, to: 5, transitions: new Set([ [{title: '1'}] ])},\r\n//             // {from: 4, to: 2, transitions: new Set([ [{title: '0'}] ])},\r\n//\r\n//             //refference\r\n//             // {from: 0, to: 1, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 0, to: 2, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 1, to: 3, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 1, to: 4, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 2, to: 3, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 2, to: 5, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 3, to: 3, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\r\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 4, to: 6, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 5, to: 5, transitions: new Set([ [{title: 'a'}] ])},\r\n//             // {from: 5, to: 6, transitions: new Set([ [{title: 'b'}] ])},\r\n//             // {from: 6, to: 6, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\r\n//\r\n//         ]\r\n//     }, [{id: 1, isAdmit: false}], [],\r\n// )\r\n// console.log(nfa.minimizeDfa().start)\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\r\nvar NFA = /** @class */ (function (_super) {\r\n    __extends(NFA, _super);\r\n    function NFA(graph, startStatement, input) {\r\n        var _this = _super.call(this, graph, startStatement, input) || this;\r\n        if (_this.haveEpsilon()) {\r\n            throw new Error('Epsilon Transitions');\r\n        }\r\n        return _this;\r\n    }\r\n    return NFA;\r\n}(EpsilonNFA_1.EpsilonNFA));\r\nexports.NFA = NFA;\r\n//\r\n// let nfa = new NFA (\r\n//     {\r\n//         nodes: [\r\n//             {id: 0, isAdmit: false},\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: false},\r\n//\r\n//         ],\r\n//         edges: [\r\n//             {from: 0, to: 0, transitions: new Set([ [{title: '0'}] ])},\r\n//             {from: 0, to: 1, transitions: new Set([ [{title: '0'}] ])},\r\n//             {from: 1, to: 2, transitions: new Set([ [{title: '1'}] ])},\r\n//         ]\r\n//     }, [{id: 0, isAdmit: false}], [],\r\n// )\r\n// nfa.nfaToDfa()\r\n// nfa.nfaToDfa().nodes.forEach((v) => console.log(v.id))\r\n// nfa.nfaToDfa().edges.forEach((v) => console.log(v.from, v.to))\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\r\nvar PDA_1 = require(\"./PDA\");\r\nvar Computer_1 = require(\"./Computer\");\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar TMMemory = /** @class */ (function () {\r\n    function TMMemory() {\r\n        this.storage = ['_'];\r\n        this.pointer = 0;\r\n    }\r\n    TMMemory.prototype.getPointer = function () {\r\n        return this.pointer;\r\n    };\r\n    TMMemory.prototype.reset = function () {\r\n        this.storage = ['_'];\r\n        this.pointer = 0;\r\n    };\r\n    TMMemory.prototype.lookUp = function () {\r\n        return this.storage[this.pointer];\r\n    };\r\n    TMMemory.prototype.initialize = function (init) {\r\n        var _this = this;\r\n        init.forEach(function (value) { return _this.mvRight('_', value); });\r\n        this.pointer = 0;\r\n    };\r\n    TMMemory.prototype.mvRight = function (curr, upd) {\r\n        if (this.storage[this.pointer] === curr) {\r\n            this.storage[this.pointer] = upd;\r\n            this.pointer++;\r\n        }\r\n        if (this.pointer === this.storage.length) {\r\n            this.storage.push('_');\r\n        }\r\n    };\r\n    TMMemory.prototype.mvLeft = function (curr, upd) {\r\n        if (this.pointer === 0) {\r\n            if (this.storage[this.pointer] === curr) {\r\n                this.storage[this.pointer] = upd;\r\n                this.pointer = 0;\r\n            }\r\n            var tmp_1 = ['_'];\r\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\r\n            this.storage = tmp_1;\r\n        }\r\n        else {\r\n            if (this.storage[this.pointer] === curr) {\r\n                this.storage[this.pointer] = upd;\r\n                this.pointer--;\r\n            }\r\n        }\r\n    };\r\n    TMMemory.prototype.getStorage = function () {\r\n        return this.storage;\r\n    };\r\n    return TMMemory;\r\n}());\r\nexports.TMMemory = TMMemory;\r\nvar TM = /** @class */ (function (_super) {\r\n    __extends(TM, _super);\r\n    function TM(graph, startStatement, input) {\r\n        var _this = _super.call(this, graph, startStatement, input) || this;\r\n        _this.mem = new TMMemory();\r\n        _this.__step = function (counter, tr, histori) {\r\n            var byLetter = [];\r\n            var from = _this.curPosition[0].stmt;\r\n            var mv;\r\n            var by = \"\";\r\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\r\n                if (value.stackDown === _this.mem.lookUp()) {\r\n                    if (value.move === IGraphTypes_1.Move.R) {\r\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\r\n                        mv = value.move;\r\n                        by = value.stackDown;\r\n                    }\r\n                    if (value.move === IGraphTypes_1.Move.L) {\r\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\r\n                        mv = value.move;\r\n                        by = value.stackDown;\r\n                    }\r\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\r\n                }\r\n            });\r\n            histori.push({\r\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\r\n                by: by\r\n                // this.input[counter].value\r\n            });\r\n            counter++;\r\n            byLetter.push({\r\n                id: _this.curPosition[0].stmt.id,\r\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\r\n                by: by,\r\n                from: from,\r\n                cur: _this.curPosition[0].stmt,\r\n                move: mv\r\n            });\r\n            return {\r\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\r\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\r\n                counter: counter,\r\n                history: histori,\r\n                memory: _this.mem.getStorage(),\r\n                pointer: _this.mem.getPointer(),\r\n                byLetter: byLetter\r\n            };\r\n        };\r\n        _this.restart = function () {\r\n            _this.counterSteps = 0;\r\n            _this.historiStep = [];\r\n            _this.curPosition = [];\r\n            _this.mem.reset();\r\n            _this.curPosition = [{\r\n                    stmt: _this.statements.get(_this.startStatements[0].id)\r\n                }];\r\n        };\r\n        _this.mtTrun = function () {\r\n            throw Error(\"TM run\");\r\n        };\r\n        _this.setInput = function (input) {\r\n            _this.input = [];\r\n            // this.restart()\r\n            _this.mem.reset();\r\n            _this.mem.initialize(input);\r\n            _this.counterSteps = 0;\r\n            _this.historiStep = [];\r\n            _this.curPosition = [];\r\n            _this.curPosition = [{\r\n                    stmt: _this.statements.get(_this.startStatements[0].id)\r\n                }];\r\n            console.log(_this.curPosition);\r\n        };\r\n        _this.mtStep = function () {\r\n            console.log(\"STPMT\");\r\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\r\n            _this.counterSteps = ret.counter;\r\n            _this.historiStep = ret.history;\r\n            if (ret.history[ret.history.length - 1].by === \"\") {\r\n                ret.nodes = [];\r\n            }\r\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\r\n        };\r\n        _this.step = function () {\r\n            if (!_this.isDeterministic()) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.mtStep();\r\n        };\r\n        _this.run = function () {\r\n            if (!_this.isDeterministic()) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.mtTrun();\r\n        };\r\n        _this.checkMemFormat(graph);\r\n        // if (!this.isDeterministic()) {\r\n        //     throw Error (\"Not deterministic\")\r\n        // }\r\n        _this.mem.initialize(input);\r\n        _this.curPosition = [{\r\n                stmt: _this.statements.get(_this.startStatements[0].id)\r\n            }];\r\n        console.log(\"MTMTMTMTMTTMMTMTMT::::::::::\");\r\n        return _this;\r\n    }\r\n    TM.prototype.checkMemFormat = function (graph) {\r\n        var isMtMem = true;\r\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\r\n            value1.forEach(function (value2) {\r\n                var _a, _b;\r\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\r\n                    isMtMem = false;\r\n                }\r\n            });\r\n        }); });\r\n        if (!isMtMem) {\r\n            throw Error(\"Not MT mem\");\r\n        }\r\n    };\r\n    TM.prototype.curMt = function () {\r\n        return this.curPosition[0];\r\n    };\r\n    TM.prototype.assignCurMt = function (newPos) {\r\n        this.curPosition[0] = newPos;\r\n    };\r\n    TM.prototype.isDeterministic = function () {\r\n        var ret = true;\r\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\r\n            var fstCell = cells[0];\r\n            var isEquals = function (stPush0, stPush1) {\r\n                if (!stPush0 || !stPush1) {\r\n                    return false;\r\n                }\r\n                if (stPush0.length !== stPush1.length) {\r\n                    return false;\r\n                }\r\n                return stPush0.reduce(function (acc, v, index) { return acc && stPush0[index] === stPush1[index]; }, true);\r\n            };\r\n            var hasDublicates = cells.reduce(function (acc, stmt, index) {\r\n                return index !== 0 &&\r\n                    (acc || (stmt.stackDown === fstCell.stackDown && isEquals(stmt.stackPush, fstCell.stackPush)));\r\n            }, false);\r\n            if (cells.length > 1 && hasDublicates) {\r\n                ret = false;\r\n            }\r\n        }); });\r\n        return ret;\r\n    };\r\n    return TM;\r\n}(PDA_1.PDA));\r\nexports.TM = TM;\r\nvar nfa = new TM({\r\n    nodes: [\r\n        { id: 1, isAdmit: false },\r\n        { id: 2, isAdmit: false },\r\n    ],\r\n    edges: [\r\n        { from: 1, to: 2, transitions: new Set([[{ title: Computer_1.EPS, stackDown: '0', stackPush: ['0'], move: IGraphTypes_1.Move.R }, { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'], move: IGraphTypes_1.Move.R }]]) },\r\n    ]\r\n}, [{ id: 1, isAdmit: false }], ['1']);\r\nconsole.log(nfa.isDeterministic());\r\n// let nfa = new TM(\r\n//     {\r\n//         nodes: [\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: false},\r\n//             {id: 3, isAdmit: false},\r\n//             {id: 4, isAdmit: false},\r\n//\r\n//         ],\r\n//         edges: [\r\n//             { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\r\n//             { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\r\n//             { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\r\n//             { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\r\n//             { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\r\n//\r\n//             // { from: 1, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['V'], move: Move.R} ]]) },\r\n//             // { from: 2, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['B'], move: Move.R} ]]) },\r\n//             // { from: 2, to: 1, transitions: new Set([[ { title: 'b', stackDown: 'b', stackPush: ['6'], move: Move.R } ]]) },\r\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: 'с', stackPush: ['['], move: Move.R } ]]) },\r\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: '_', stackPush: [']'], move: Move.R } ]]) },\r\n//\r\n//             // {from: 1, to: 1, transitions: new Set([{title: 'a', stackDown: 'a', stackPush: ['A'], move: Move.R}])},\r\n//             // {from: 1, to: 2, transitions: new Set([{title: 'c', stackDown: 'b', stackPush: ['V'], move: Move.R}])},\r\n//             // {from: 2, to: 2, transitions: new Set([{title: 'c', stackDown: '_', stackPush: ['V'], move: Move.R}])},\r\n//\r\n//\r\n//\r\n//         ]\r\n//     },  [{id: 1, isAdmit: false}], ['1'])\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// nfa.setInput(['1'])\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar PDA_1 = require(\"./PDA\");\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar DPDA = /** @class */ (function (_super) {\r\n    __extends(DPDA, _super);\r\n    function DPDA(graph, startStatement, input, byEmpty) {\r\n        var _this = _super.call(this, graph, startStatement, input, byEmpty) || this;\r\n        // step = this.pdaStep\r\n        // run = this.pdaRun\r\n        _this.step = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.pdaStep();\r\n        };\r\n        _this.run = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.pdaRun();\r\n        };\r\n        _this.setInput(input);\r\n        return _this;\r\n        // if (!super.isDeterministic()) {\r\n        //     throw new Error(\"Is not determenistic\")\r\n        // }\r\n    }\r\n    return DPDA;\r\n}(PDA_1.PDA));\r\nexports.DPDA = DPDA;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar Mealy_1 = require(\"./Mealy\");\r\nvar DMealy = /** @class */ (function (_super) {\r\n    __extends(DMealy, _super);\r\n    function DMealy(graph, startStatements, input) {\r\n        var _this = _super.call(this, graph, startStatements, input) || this;\r\n        _this.step = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.oaStep();\r\n        };\r\n        _this.run = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.oaRun();\r\n        };\r\n        return _this;\r\n    }\r\n    return DMealy;\r\n}(Mealy_1.Mealy));\r\nexports.DMealy = DMealy;\r\nvar nfa = new DMealy({\r\n    nodes: [\r\n        { id: 0, isAdmit: false },\r\n        { id: 1, isAdmit: false },\r\n    ],\r\n    edges: [\r\n        { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n        { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n    ]\r\n}, [{ id: 0, isAdmit: false }], []);\r\nconsole.log(nfa.isDeterministic());\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar Moore_1 = require(\"./Moore\");\r\nvar DMoore = /** @class */ (function (_super) {\r\n    __extends(DMoore, _super);\r\n    function DMoore(graph, startStatements, input) {\r\n        var _this = _super.call(this, graph, startStatements, input) || this;\r\n        _this.step = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.oaStep();\r\n        };\r\n        _this.run = function () {\r\n            if (!_super.prototype.isDeterministic.call(_this)) {\r\n                throw new Exceptions_1.NonDeterministic();\r\n            }\r\n            return _this.oaRun();\r\n        };\r\n        return _this;\r\n    }\r\n    return DMoore;\r\n}(Moore_1.Moore));\r\nexports.DMoore = DMoore;\r\nvar nfa = new DMoore({\r\n    nodes: [\r\n        { id: 0, isAdmit: false },\r\n        { id: 1, isAdmit: false },\r\n        { id: 2, isAdmit: false },\r\n    ],\r\n    edges: [\r\n        { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n        { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\r\n    ]\r\n}, [{ id: 0, isAdmit: false }], []);\r\nconsole.log(nfa.isDeterministic());\r\n","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\r\nexports.EPS = 'Epsilon';\r\nexports.BOTTOM = \"Z0\";\r\nvar Computer = /** @class */ (function () {\r\n    function Computer(graph, startStatements) {\r\n        // this.setStartStatements(graph, startStatements)\r\n        var _this = this;\r\n        this.input = [];\r\n        this.alphabet = new Map();\r\n        this.statements = new Map();\r\n        this.startStatements = [];\r\n        this.edges = [];\r\n        this.counterSteps = 0;\r\n        this.counterStepsForResult = 0;\r\n        this.historiStep = [];\r\n        this.historiRun = [];\r\n        this.matrix = [];\r\n        this.byEmptyStackAdmt = function (isAdmt) {\r\n            throw new Error(\"PDA attribute\");\r\n        };\r\n        this.nfaToDfa = function () {\r\n            throw new Error(\"DFA conversion\");\r\n        };\r\n        this.minimizeDfa = function () {\r\n            throw new Error(\"DFA conversion\");\r\n        };\r\n        this.mooreToMealy = function () {\r\n            throw new Error(\"Moor conversion\");\r\n        };\r\n        this.mealyToMoore = function () {\r\n            throw new Error(\"Moor conversion\");\r\n        };\r\n        this.getCurrNode = function () {\r\n            return _this.currentNode.id;\r\n        };\r\n        this.getStartStatements = function () {\r\n            return _this.startStatements;\r\n        };\r\n        graph.edges\r\n            .sort(function (a, b) { return a.from - b.from; })\r\n            .forEach(function (value) { return _this.edges.push({\r\n            transitions: value.transitions === undefined ? new Set([[{ title: \"\" }]]) : value.transitions,\r\n            from: value.from,\r\n            to: value.to,\r\n            localValue: []\r\n        }); });\r\n        var _loop_1 = function (i) {\r\n            this_1.edges[i].localValue = [];\r\n            this_1.edges[i].transitions.forEach(function (value) {\r\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\r\n            }\r\n            //    this.edges[i].localValue!.push(value)\r\n            );\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.edges.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        this.getAlphabetFromEdges();\r\n        this.getStatementsFromNodes(graph.nodes);\r\n        this.startStatements = startStatements;\r\n        this.currentNode = startStatements[0];\r\n        this.nodes = graph.nodes;\r\n        this.createMatrix();\r\n    }\r\n    Computer.prototype.getInput = function () {\r\n        return this.input;\r\n    };\r\n    Computer.prototype.getAlphabetFromEdges = function () {\r\n        var _this = this;\r\n        var alphabetSet = new Set();\r\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\r\n            this.edges[i_1].localValue.forEach(function (value) {\r\n                if (value.title !== \"\") {\r\n                    alphabetSet.add(value.title);\r\n                }\r\n            });\r\n        }\r\n        var i = 0;\r\n        alphabetSet.forEach(function (value) {\r\n            if (value !== \"\") {\r\n                _this.alphabet.set(value, i);\r\n                i++;\r\n            }\r\n        });\r\n    };\r\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            this.statements.set(nodes[i].id, {\r\n                id: nodes[i].id,\r\n                isAdmit: nodes[i].isAdmit,\r\n                idLogic: i,\r\n                output: nodes[i].output\r\n            });\r\n        }\r\n    };\r\n    Computer.prototype.createMatrix = function () {\r\n        for (var i = 0; i < this.statements.size; i++) {\r\n            this.matrix[i] = [];\r\n            for (var j = 0; j < this.alphabet.size; j++) {\r\n                this.matrix[i][j] = [];\r\n                //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\r\n            }\r\n        }\r\n        for (var i = 0; i < this.edges.length; i++) {\r\n            var statementFrom = this.statements.get(this.edges[i].from);\r\n            var statementTo = this.statements.get(this.edges[i].to);\r\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\r\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\r\n                // if (letterId === undefined) {\r\n                //     throw new Error(\"A\")\r\n                // }\r\n                if (letterId === undefined) {\r\n                    continue;\r\n                }\r\n                console.log(letterId);\r\n                console.log(this.edges[i].localValue[j].title);\r\n                var stDwn = this.edges[i].localValue[j].stackDown;\r\n                var stPsh = this.edges[i].localValue[j].stackPush;\r\n                var mv = this.edges[i].localValue[j].move;\r\n                var output = this.edges[i].localValue[j].output === undefined ? statementTo.output : this.edges[i].localValue[j].output;\r\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\r\n                    stDwn = exports.EPS;\r\n                    stPsh = [exports.EPS];\r\n                }\r\n                // console.log(statementTo.move)\r\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv, output: output }));\r\n            }\r\n        }\r\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\r\n        this.statements.forEach(function (value) { return console.log(value); });\r\n        this.matrix.forEach(function (value) {\r\n            console.log();\r\n            value.forEach(function (value1) { return console.log(value1); });\r\n        });\r\n    };\r\n    Computer.prototype.cellMatrix = function (i, j) {\r\n        return this.matrix[i][j];\r\n    };\r\n    return Computer;\r\n}());\r\nexports.Computer = Computer;\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Stack = /** @class */ (function () {\r\n    function Stack(capacity) {\r\n        if (capacity === void 0) { capacity = Infinity; }\r\n        this.capacity = capacity;\r\n        this.storage = [];\r\n    }\r\n    Stack.prototype.push = function (item) {\r\n        if (this.size() === this.capacity) {\r\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\r\n        }\r\n        this.storage.push(item);\r\n    };\r\n    Stack.prototype.pop = function () {\r\n        return this.storage.pop();\r\n    };\r\n    Stack.prototype.peek = function () {\r\n        return this.storage[this.size() - 1];\r\n    };\r\n    Stack.prototype.size = function () {\r\n        return this.storage.length;\r\n    };\r\n    Stack.prototype.getStorage = function () {\r\n        var list = [];\r\n        this.storage.forEach(function (value) { return list.push(value); });\r\n        return list;\r\n    };\r\n    Stack.prototype.cpyTo = function (stack) {\r\n        this.storage.forEach(function (value) { return stack.push(value); });\r\n        return stack;\r\n    };\r\n    return Stack;\r\n}());\r\nexports.Stack = Stack;\r\n","import React, {AllHTMLAttributes} from \"react\";\r\nimport \"./ControlWrapper.css\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\r\n    title: string,\r\n    visible: boolean\r\n}\r\n\r\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\r\n    static defaultProps = {\r\n        visible: true\r\n    }\r\n\r\n    render() {\r\n        const {visible, title, style, className, children, ...restProps} = this.props;\r\n\r\n        return (\r\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\r\n                   variant=\"outlined\"\r\n                   style={style}\r\n                   {...restProps}\r\n            >\r\n                <div className=\"control-wrapper--content\">\r\n                    <div>\r\n                        <Typography variant=\"h6\">\r\n                            {title}\r\n                        </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"control-wrapper--child\">\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlWrapper;","import React, { ChangeEvent } from \"react\";\r\nimport \"./NodeControl.css\";\r\nimport { node } from \"../../react-graph-vis-types\";\r\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\r\n\r\nimport Switch from \"@mui/material/Switch\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\ninterface nodeControlProps {\r\n    node: node | null,\r\n    changeNodeLabel: (id: number, label: string) => void,\r\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\r\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\r\n    deleteNode: (id: number) => void,\r\n    reinitComputer: (() => void)\r\n}\r\n\r\ninterface nodeControlState {\r\n    prevNodeId: number | undefined,\r\n    label: string,\r\n    isAdmit: boolean,\r\n    isInitial: boolean\r\n}\r\n\r\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\r\n    constructor(props: nodeControlProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prevNodeId: this.props.node?.id,\r\n            label: this.props.node?.label || \"\",\r\n            isAdmit: this.props.node?.isAdmit || false,\r\n            isInitial: this.props.node?.isInitial || false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\r\n        if (this.props.node?.id !== prevState.prevNodeId) {\r\n            this.setState({\r\n                label: this.props.node?.label || \"\",\r\n                    // + ((\" | \" + this.props.node?.output || \"\")) \r\n                    \r\n                isAdmit: this.props.node?.isAdmit || false,\r\n                isInitial: this.props.node?.isInitial || false,\r\n                prevNodeId: this.props.node?.id\r\n            });\r\n        }\r\n    }\r\n\r\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        if (this.props.node !== null) {\r\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\r\n            this.setState({ label: event.target.value });\r\n        }\r\n    }\r\n\r\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        if (this.props.node !== null) {\r\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\r\n            this.setState({ isAdmit: event.target.checked }, () => this.props.reinitComputer());\r\n        }\r\n    }\r\n\r\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        if (this.props.node !== null && !this.props.node.isAdmit) {\r\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\r\n            this.setState({ isInitial: event.target.checked }, () => this.props.reinitComputer());\r\n        }\r\n    }\r\n\r\n    onDeleteClick = (): void => {\r\n        if (this.props.node !== null) {\r\n            this.props.deleteNode(this.props.node.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\r\n                <FormControl>\r\n\r\n                    <div className=\"node-control__item\">\r\n                        <TextField\r\n                            label=\"Имя\"\r\n                            size=\"small\"\r\n                            value={this.state.label}\r\n                            onChange={this.onLabelChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"node-control__item\">\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={this.state.isInitial}\r\n                                    onChange={this.onIsInitialChanged}\r\n                                />\r\n                            }\r\n                            label={\"Начальное\"}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"node-control__item\">\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={this.state.isAdmit}\r\n                                    onChange={this.onIsAdmitChanged}\r\n                                />\r\n                            }\r\n                            label=\"Допускающее\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"node-control__item\">\r\n                        <Button\r\n                            onClick={this.onDeleteClick}\r\n                        >\r\n                            Удалить\r\n                        </Button>\r\n                    </div>\r\n\r\n                </FormControl>\r\n            </ControlWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NodeControl;","import {ComputerInfo, ComputerType, edge, graph, node} from \"./react-graph-vis-types\";\r\nimport {EPS} from \"./Logic/Computer\";\r\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\r\nimport { Elements } from \"./App\";\r\nimport { DataSet } from \"vis-network/standalone/esm/vis-network\";\r\nimport { Output } from \"./Logic/Types\";\r\n\r\n\r\nconst epsSubstStr = (epsText: string) => (value: string) => value === EPS ? epsText : value\r\n\r\nconst epsSubstStrs = (epsText: string) => (values: string[]) => {\r\n    return values.map(v =>  epsSubstStr(epsText)(v)).join(\":\")\r\n}\r\n\r\nconst mvStr = (value: Move) => value === 0 ? \"L\" : \"R\"\r\n\r\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType ): string => {\r\n    const maxLength = (): number => {\r\n        let max: number = 0;\r\n        if (transitions !== undefined) {\r\n            transitions.forEach(value => {\r\n                value.forEach(value1 => {\r\n                    if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\r\n                        const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\r\n                        const ttl: number = value1.title === EPS ? 0 : value1.title.length\r\n                        const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\r\n                        max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return max\r\n    }\r\n\r\n    let spc = \"\"\r\n    const pdng_k = 7\r\n\r\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\r\n        spc += \" \"\r\n    }\r\n\r\n    const epsSubst = epsSubstStr(\"ε\")\r\n    const epsSubsts = epsSubstStrs(\"ε\")\r\n\r\n    spc = frmt === 'tm' ? '       ' : spc\r\n\r\n    let str = \"\" + spc\r\n    if (transitions !== undefined) {\r\n        if (frmt === 'tm') {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\r\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + mvStr(v.move) + \"\\n\" + spc\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === 'pda' || frmt === \"dpda\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\r\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + \"\\n\" + spc\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0) {\r\n                        str += epsSubst(v.title) + \" \" + \"\\n\" + spc\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\r\n                        str += epsSubst(v.title) + \" | \" + v.output + \"\\n\" + spc\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n    return str\r\n}\r\n\r\n\r\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType): string => {\r\n    const epsSubst = epsSubstStr(\"eps\")\r\n    const epsSubsts = epsSubstStrs(\"eps\")\r\n\r\n    let str = \"\"\r\n    if (transitions !== undefined) {\r\n        if (frmt === 'tm') {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\r\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + '>' + mvStr(v.move) + \";\\n\"\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === \"pda\" || frmt === \"dpda\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\r\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \";\\n\"\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0) {\r\n                        str += epsSubst(v.title) + \";\\n\"\r\n                    }\r\n                })\r\n            })\r\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\r\n            transitions.forEach(value => {\r\n                value.forEach((v) => {\r\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\r\n                        str += epsSubst(v.title) + \" | \" + v.output + \";\\n\"\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    return str\r\n}\r\n\r\nexport const decorateGraph = (elements: Elements, frmt: null | ComputerType) => {\r\n    elements.edges.forEach((edge) => {\r\n        elements.edges.update({\r\n            id: edge.id!,\r\n            label: transitionsToLabel(edge.transitions, frmt)\r\n        })\r\n    })\r\n\r\n    elements.nodes.forEach((node) => {\r\n        const lableTokens =\r\n            node.label\r\n                .split('')\r\n                .filter(x => x !== \" \" && x !== \"\\n\")\r\n                .join('')\r\n                .split('|')\r\n        const output = lableTokens[1] !== undefined ? lableTokens[1] : undefined \r\n        node.output = output \r\n\r\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\r\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\r\n        const borderWidth = {\r\n            default: 1.5,\r\n            primary: 2,\r\n            highlight: 4\r\n        };\r\n\r\n        elements.nodes.update({\r\n            id: node.id,\r\n            // label: node.label ,\r\n            // + (node.output !== undefined ? \" | \" + node.output : \"\"),\r\n            color: {\r\n                background: background,\r\n                border: border,\r\n                highlight: {\r\n                    border: border,\r\n                    background: background\r\n                }\r\n            },\r\n            borderWidth: node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default,\r\n            borderWidthSelected: borderWidth.highlight\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport const graphToElements = (graph: graph): Elements => {\r\n    let acc: Elements = {nodes: new DataSet<node, \"id\">(), edges: new DataSet<edge, \"id\">()}\r\n\r\n    graph.nodes.forEach((node) => {\r\n        acc.nodes.add(node)\r\n    })\r\n    graph.edges.forEach((edge) => {\r\n        acc.edges.add(edge)\r\n    })\r\n\r\n    return acc\r\n}\r\n\r\nexport const elementsToGraph = (elements: Elements): graph => {\r\n    let acc: graph = {nodes: [], edges: []}\r\n\r\n    elements.nodes.forEach((node) => {\r\n        acc.nodes.push(node)\r\n    })\r\n    elements.edges.forEach((edge) => {\r\n        acc.edges.push(edge)\r\n    })\r\n\r\n    return acc\r\n}\r\n\r\nexport const getNodeNamePrefix = (graph: graph): string => {\r\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\r\n\r\n    graph.nodes.forEach(node => {\r\n        let i = 0;\r\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\r\n            i++;\r\n        }\r\n        prefix = prefix.substring(0, i);\r\n    });\r\n\r\n    return prefix;\r\n}\r\n\r\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\r\n    dfa: {\r\n        name: \"ДКА\",\r\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\r\n        preview: \"dfa.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\r\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\r\n            ],\r\n            edges: [\r\n                {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\r\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\r\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\r\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\r\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\r\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\r\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\r\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\r\n            ]\r\n        }\r\n    },\r\n    nfa: {\r\n        name: \"НКА\",\r\n        description: \"Может находиться в нескольких состояниях одновременно\",\r\n        preview: \"nfa.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\r\n            ],\r\n            edges: [\r\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\r\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\r\n\r\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\r\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\r\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\r\n\r\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\r\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\r\n            ]\r\n        }\r\n    },\r\n    \"nfa-eps\": {\r\n        name: \"ε-НКА\",\r\n        description: \"Расширение НКА, в котором используются ε-переходы\",\r\n        preview: \"nfa-eps.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\r\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\r\n\r\n            ],\r\n            edges: [\r\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\r\n\r\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\r\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\r\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\r\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\r\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\r\n                {from: 3, to: 7, transitions: new Set([[{title: '0'}]])},\r\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\r\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\r\n\r\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\r\n\r\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\r\n\r\n            ]\r\n        }\r\n    },\r\n    pda: {\r\n        name: \"Автомат с магазинной памятью\",\r\n        description: \"Использует стек для хранения состояний\",\r\n        preview: \"pda.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\r\n            ],\r\n            edges: [\r\n                {\r\n                    from: 1, to: 1, transitions: new Set([\r\n                        [\r\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\r\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\r\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\r\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\r\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\r\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\r\n                        ]])\r\n                },\r\n\r\n                {\r\n                    from: 1, to: 2, transitions: new Set([\r\n                        [\r\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\r\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\r\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\r\n                        ]])\r\n                },\r\n                {\r\n                    from: 2, to: 2, transitions: new Set([\r\n                        [\r\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\r\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\r\n                        ]])\r\n                },\r\n\r\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\r\n            ]\r\n        }\r\n    },\r\n    dpda: {\r\n        name: \"Детерминированный автомат с магазинной памятью\",\r\n        description: \"Использует стек для хранения состояний\",\r\n        preview: \"pda.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                // {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n            ],\r\n            edges: [\r\n                {\r\n                    from: 1, to: 1, transitions: new Set([[{title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},]])\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    tm: {\r\n        name: \"Машина Тьюринга\",\r\n        description: \"_\",\r\n        preview: \"tm.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\r\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\r\n                {id: 3, x: 0, y: 200, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\r\n                {id: 4, x: 200, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\r\n            ],\r\n            edges: [\r\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\r\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\r\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\r\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\r\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\r\n            ]\r\n        }\r\n    },\r\n    mealy: {\r\n        name: \"Автомат Мили\",\r\n        preview: \"mealy.png\",\r\n        description: \"_\",\r\n        defaultGraph: {\r\n            // nodes: [\r\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\r\n            //     { x: 300, y: -200, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\r\n            //     { x: 500, y: -300, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\r\n            //     { x: -100, y: -500, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\r\n            // ],\r\n            // edges: [\r\n            //     { from: 0, to: 1, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n            //     { from: 0, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n            //     { from: 1, to: 2, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n            //     { from: 1, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n            //     { from: 2, to: 0, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\r\n            //     { from: 3, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n            //     { from: 3, to: 0, transitions: new Set([[{ title: 't', output: '0' }]]) },\r\n            // ]\r\n            nodes: [\r\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\r\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\r\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\r\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\r\n            ],\r\n            edges: [\r\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\r\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\r\n            ]\r\n            //     {\r\n//         nodes: [\r\n//             { id: 0, isAdmit: false },\r\n//             { id: 1, isAdmit: false },\r\n//             { id: 2, isAdmit: false },\r\n//             { id: 3, isAdmit: false },\r\n//         ],\r\n//         edges: [\r\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\r\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\r\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\r\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\r\n        \r\n//         ]\r\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\r\n        }\r\n    },\r\n    dmealy: {\r\n        name: \"Детерминированный автомат Мили\",\r\n        preview: \"mealy.png\",\r\n        description: \"_\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\r\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\r\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\r\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\r\n            ],\r\n            edges: [\r\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\r\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\r\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\r\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\r\n            ]\r\n            //     {\r\n//         nodes: [\r\n//             { id: 0, isAdmit: false },\r\n//             { id: 1, isAdmit: false },\r\n//             { id: 2, isAdmit: false },\r\n//             { id: 3, isAdmit: false },\r\n//         ],\r\n//         edges: [\r\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\r\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\r\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\r\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\r\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\r\n        \r\n//         ]\r\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\r\n        }\r\n    },\r\n    moore: {\r\n        name: \"Автомат Мура\",\r\n        description: \"_\",\r\n        preview: \"moore.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\r\n                { x: 300, y: 0, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\r\n                { x: 100, y: 100, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\r\n                // { id: 3, isAdmit: false, output: '3' },\r\n            ],\r\n            edges: [\r\n                { from: 1, to: 1, transitions: new Set([[{ title: '1' }]]) },\r\n                { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\r\n    \r\n                { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\r\n                { from: 2, to: 3, transitions: new Set([[{ title: '1' }]]) },\r\n    \r\n                { from: 3, to: 2, transitions: new Set([[{ title: '0' }]]) },\r\n                { from: 3, to: 1, transitions: new Set([[{ title: '1' }]]) },\r\n            ]        \r\n        }\r\n    },\r\n    dmoore: {\r\n        name: \"Детерминированный автомат Мура\",\r\n        description: \"_\",\r\n        preview: \"moore.png\",\r\n        defaultGraph: {\r\n            nodes: [\r\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\r\n                { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\r\n                { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\r\n                // { id: 3, isAdmit: false, output: '3' },\r\n            ],\r\n            edges: [\r\n                { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n                { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n    \r\n                { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n                { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\r\n    \r\n                { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n                { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n            ]\r\n            // nodes: [\r\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\r\n            //     { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\r\n            //     { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\r\n            // ],\r\n            // edges: [\r\n            //     { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n            //     { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\r\n    \r\n            //     // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n            //     // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\r\n    \r\n            //     // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\r\n            //     // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\r\n            // ]        \r\n        }\r\n    },\r\n\r\n}\r\n\r\nexport const getCookie = (name: string) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\r\n}","import React from \"react\";\r\nimport {ComputerTypeContext} from \"./App\";\r\n\r\nexport const withComputerType = (Component: typeof React.Component) => (\r\n    (props: any) => (\r\n        <ComputerTypeContext.Consumer>\r\n            { context => <Component computerType={context} {...props}/> }\r\n        </ComputerTypeContext.Consumer>\r\n    )\r\n)","import React from \"react\";\r\nimport {ComputerType, edge} from \"../../react-graph-vis-types\";\r\nimport {getTransitionsTitles, transitionsToLabel} from \"../../utils\";\r\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./EdgeControl.css\";\r\nimport Transition from \"./Transition/Transition\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {withComputerType} from \"../../hoc\";\r\nimport {EPS} from \"../../Logic/Computer\";\r\nimport {Move, TransitionParams} from \"../../Logic/IGraphTypes\";\r\nimport { TextareaAutosize } from \"@mui/material\";\r\n\r\n\r\ninterface EdgeControlProps {\r\n    edge: edge | null,\r\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\r\n    deleteEdge: (id: string) => void,\r\n    computerType: ComputerType | null\r\n    reinitComputer: (() => void)\r\n}\r\n\r\ninterface Rule{\r\n    id: number\r\n    value: string\r\n}\r\n\r\ninterface EdgeControlState {\r\n    prevEdgeId: string | undefined,\r\n    transitions: Set<TransitionParams[]>,\r\n    transitionsText: string,\r\n    displayedTransitionText: string,\r\n    activeTransition: TransitionParams[] | null,\r\n    editMode: boolean,\r\n    countRules?: number, \r\n    rules: Rule[],\r\n}\r\n\r\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\r\n    constructor(props: EdgeControlProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prevEdgeId: this.props.edge?.id,\r\n            transitions: this.props.edge?.transitions || new Set(),\r\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\r\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\r\n            activeTransition: null,\r\n            editMode: false,\r\n            countRules: 1,\r\n            rules: [\r\n                {id: 1, value: ' '}\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\r\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\r\n\r\n            this.setState({\r\n                transitions: this.props.edge?.transitions || new Set(),\r\n                prevEdgeId: this.props.edge?.id,\r\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\r\n                activeTransition: null,\r\n                editMode: false\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    selectTransition = (transition: TransitionParams[] | null): void => {\r\n        if (this.state.activeTransition === transition) {\r\n            this.setState({activeTransition: null});\r\n        } else {\r\n            this.setState({activeTransition: transition});\r\n        }\r\n    }\r\n\r\n    changeTransitions = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        this.setState({transitionsText: value});\r\n\r\n        let accumulator: {\r\n            fst: string | undefined,\r\n            snd: string | undefined,\r\n            trd: string | undefined,\r\n            fth: string | undefined }[] = []\r\n        let acc: TransitionParams[] = []\r\n\r\n        if (this.props.computerType === \"tm\") {\r\n            this.state.transitionsText\r\n                .split('')\r\n                .filter(x => x !== \" \" && x !== \"\\n\")\r\n                .join('')\r\n                .split(\";\")\r\n                .forEach(value => {\r\n                    let tmp = value.split('')\r\n                    let fst = tmp.shift()\r\n                    tmp = tmp.join('').split(\"|\" || \">\")\r\n                    let trd = tmp\r\n                    let fth = undefined\r\n\r\n                    let bebra = tmp.join(\"\").split(\">\")\r\n                    bebra.reverse()\r\n                    fth = bebra.shift()\r\n                    bebra.reverse()\r\n                    trd = bebra\r\n\r\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth })\r\n                })\r\n\r\n        } \r\n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\r\n            this.state.transitionsText\r\n            .split('')\r\n            .filter(x => x !== \" \" && x !== \"\\n\")\r\n            .join('')\r\n            .split(\";\")\r\n            .forEach(value => {\r\n                let tmp = value.split(\"|\")\r\n                let fst = tmp.shift()\r\n                let snd = tmp.shift()\r\n                accumulator.push({ fst: fst, snd: snd, trd: undefined, fth: undefined })\r\n            })\r\n\r\n            accumulator.forEach(value => {\r\n                if (value.fst !== undefined) {\r\n                    acc.push(\r\n                        {\r\n                            title: value.fst === 'eps' ? EPS : value.fst,\r\n                            output: value.snd\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n        } \r\n        else {\r\n            this.state.transitionsText\r\n                .split('')\r\n                .filter(x => x !== \" \" && x !== \"\\n\")\r\n                .join('')\r\n                .split(\";\")\r\n                .forEach(value => {\r\n                    let tmp = value.split(\",\")\r\n                    let fst = tmp.shift()\r\n                    tmp = tmp.join('').split(\"|\" || \">\")\r\n                    let snd = tmp.shift()\r\n                    let trd = tmp\r\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined })\r\n                })\r\n\r\n            accumulator.forEach(value => {\r\n                if (value.fst !== undefined) {\r\n                    acc.push(\r\n                        {\r\n                            title: value.fst === 'eps' ? EPS : value.fst,\r\n                            stackDown: value.snd === 'eps' ? EPS : value.snd,\r\n                            stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\r\n                            move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\r\n\r\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\r\n        console.log(\"ALLLOO\")\r\n        /////\r\n        // await this.props.reinitComputer()\r\n        ///\r\n        this.setState({transitionsText: value\r\n            , transitions: transitions\r\n        }, () => this.props.reinitComputer());\r\n    }\r\n\r\n    deleteEdge = async (): Promise<void> => {\r\n        if (this.props.edge !== null) {\r\n            this.props.deleteEdge(this.props.edge.id!);\r\n        }\r\n        await this.props.reinitComputer()\r\n\r\n    }\r\n    \r\n    private addInstruction(value: string) {\r\n        let newRow = {id: this.state.rules.length, value: value};\r\n        this.setState({rules: this.state.rules.concat(newRow)});\r\n    }\r\n    \r\n    changeEditMode = () => {\r\n         this.setState({editMode: !this.state.editMode});\r\n         this.updateTransitions();\r\n\r\n    }\r\n    \r\n    updateTransitions = async () => {\r\n        let accumulator: {\r\n            fst: string | undefined,\r\n            snd: string | undefined,\r\n            trd: string | undefined,\r\n            fth: string | undefined \r\n            out: string | undefined\r\n        } [] = []\r\n\r\n        if (this.props.computerType === \"tm\") {\r\n            this.state.transitionsText\r\n                .split('')\r\n                .filter(x => x !== \" \" && x !== \"\\n\")\r\n                .join('')\r\n                .split(\";\")\r\n                .forEach(value => {\r\n                    let tmp = value.split('')\r\n                    let fst = tmp.shift()\r\n                    tmp = tmp.join('').split(\"|\" || \">\")\r\n                    let trd = tmp\r\n                    let fth = undefined\r\n\r\n                    let bebra = tmp.join(\"\").split(\">\")\r\n                    bebra.reverse()\r\n                    fth = bebra.shift()\r\n                    bebra.reverse()\r\n                    trd = bebra\r\n                    console.log(\"tmp\")\r\n                    console.log(bebra)\r\n\r\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth, out: undefined })\r\n                })\r\n\r\n        } \r\n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\r\n            this.state.transitionsText\r\n            .split('')\r\n            .filter(x => x !== \" \" && x !== \"\\n\")\r\n            .join('')\r\n            .split(\";\")\r\n            .forEach(value => {\r\n                let tmp = value.split(\"|\")\r\n                let fst = tmp.shift()\r\n                let snd = tmp.shift()\r\n                accumulator.push({ fst: fst, snd: undefined, trd: undefined, fth: undefined, out: snd })\r\n            })\r\n        } \r\n        else {\r\n            this.state.transitionsText\r\n                .split('')\r\n                .filter(x => x !== \" \" && x !== \"\\n\")\r\n                .join('')\r\n                .split(\";\")\r\n                .forEach(value => {\r\n                    let tmp = value.split(\",\")\r\n                    let fst = tmp.shift()\r\n                    tmp = tmp.join('').split(\"|\" || \">\")\r\n                    let snd = tmp.shift()\r\n                    let trd = tmp\r\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined, out: undefined })\r\n                })\r\n        }\r\n\r\n\r\n        let acc: TransitionParams[] = []\r\n        accumulator.forEach(value => {\r\n            if (value.fst !== undefined) {\r\n                acc.push(\r\n                    {\r\n                        title: value.fst === 'eps' ? EPS : value.fst,\r\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\r\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\r\n                        move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined,\r\n                        output: value.out,\r\n                        \r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\r\n\r\n        this.setState({\r\n            transitionsText: getTransitionsTitles(transitions, this.props.computerType),\r\n            transitions: transitions\r\n        })\r\n        ///\r\n        await this.props.reinitComputer()\r\n        ///\r\n    }\r\n\r\n    deleteTransition = (): void => {\r\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\r\n            const transitions = this.state.transitions;\r\n            transitions.delete(this.state.activeTransition);\r\n\r\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\r\n            this.setState({transitions: transitions, transitionsText: getTransitionsTitles(transitions, this.props.computerType)});\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\r\n                <div className=\"edge-control__container\">\r\n                    <div className=\"edge-control__item edge-control__transitions\">\r\n                        {\r\n                                <TextField\r\n                                    id=\"filled-multiline-static\"\r\n                                    multiline\r\n                                    rows={3}\r\n                                    variant=\"standard\"\r\n                                    label=\"Переходы\"\r\n                                    size=\"small\"\r\n                                    value={this.state.transitionsText}\r\n                                    onChange={this.changeTransitions}\r\n                                    helperText={this.props.computerType === \"nfa-eps\" || \"pda\"|| \"dpda\" ? 'Список символов или \"eps\" через запятую' : \"Список символов через запятую\"}\r\n                                    onBlur={this.updateTransitions}\r\n                                />\r\n                        }\r\n\r\n                        <div className=\"edge-control__edit-transitions\"\r\n                             onClick={this.changeEditMode}>\r\n                            <EditIcon/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"edge-control__item\">\r\n                        <Button\r\n                            onClick={this.deleteEdge}\r\n                        >\r\n                            Удалить\r\n                        </Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </ControlWrapper>\r\n            );\r\n        }\r\n}\r\n\r\nexport default withComputerType(EdgeControl);","import React, { ChangeEvent } from \"react\";\r\n\r\nimport { node } from \"../../react-graph-vis-types\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport const History = (props: {\r\n    startNode: node, history: {\r\n        node: node;\r\n        note: string[] | undefined;\r\n    }[][], historyEndRef: any\r\n}) => {\r\n    return (\r\n        <div className=\"run-control__item run-control__history\">\r\n            <div className=\"run-control__history__header\">\r\n                <Typography variant=\"h6\">История</Typography>\r\n            </div>\r\n            {\r\n                props.history.length !== 0 ?\r\n                    <div className=\"run-control__history__scroll\">\r\n\r\n\r\n                        {\r\n                            props.startNode !== undefined\r\n                                ?\r\n                                <div className=\"run-control__history__row\" key={0}>\r\n                                    <span className=\"run-control__history__index\">{0}</span>\r\n                                    {\r\n                                        <Tooltip\r\n                                            title={<Typography className=\"display-linebreak\">{\"~\"}</Typography>}>\r\n                                            <div\r\n                                                className=\"run-control__history__node\"\r\n                                                style={{ border: `${props.startNode.isInitial ? \"#0041d0\" : props.startNode.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\r\n                                            >\r\n                                                {props.startNode!.label}\r\n\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    }\r\n\r\n                                </div>\r\n                                : <div />\r\n                        }\r\n\r\n                        {\r\n                            props.history.map((nodes, index) => (\r\n                                <div className=\"run-control__history__row\" key={index}>\r\n                                    <span className=\"run-control__history__index\">{index + 1}</span>\r\n                                    {\r\n                                        nodes.map((node, index) => (\r\n                                            <Tooltip\r\n                                                title={<Typography className=\"display-linebreak\">{node.note !== undefined ? node.note.join('\\n') : ''}</Typography>}>\r\n                                                <div\r\n                                                    className=\"run-control__history__node\"\r\n                                                    style={{ border: `${node.node.isInitial ? \"#0041d0\" : node.node.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\r\n                                                >\r\n                                                    {node.node.label}\r\n\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        ))\r\n                                    }\r\n\r\n                                </div>\r\n                            ))\r\n\r\n                        }\r\n                        <div>\r\n                            <div ref={props.historyEndRef} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    <div className=\"run-control__history__placeholder\">\r\n                        Используйте пошаговый запуск, чтобы наблюдать за историей\r\n\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>)\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { ComputerType, graph, histNode, node } from \"../../react-graph-vis-types\";\r\nimport { DFA } from \"../../Logic/DFA\";\r\nimport { isEqual } from \"lodash\";\r\nimport { withComputerType } from \"../../hoc\";\r\nimport { Computer, EPS } from \"../../Logic/Computer\";\r\nimport { NFA } from \"../../Logic/NFA\";\r\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\r\nimport \"./RunControl.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { EpsilonNFA } from \"../../Logic/EpsilonNFA\";\r\nimport { PDA } from \"../../Logic/PDA\";\r\nimport { TM } from \"../../Logic/TM\";\r\nimport { Elements } from \"../../App\";\r\nimport { decorateGraph, elementsToGraph, graphToElements } from \"../../utils\";\r\nimport { HistUnit, Output, Step } from \"../../Logic/Types\";\r\nimport { GraphEval, GraphEvalMultiStart, Move, NodeCore } from \"../../Logic/IGraphTypes\";\r\nimport { Mealy } from \"../../Logic/Mealy\";\r\nimport { Moore } from \"../../Logic/Moore\";\r\nimport { start } from \"repl\";\r\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\r\nimport { NonDeterministic, NonMinimizable } from \"../../Logic/Exceptions\";\r\nimport { DPDA } from \"../../Logic/DPDA\";\r\nimport { DMealy } from \"../../Logic/DMealy\";\r\nimport { DMoore } from \"../../Logic/DMoore\";\r\nimport { isAbsolute } from \"path\";\r\nimport { History } from \"./History\"\r\n\r\ninterface runControlProps {\r\n    computerType: ComputerType,\r\n    elements: Elements,\r\n    treeElems: Elements,\r\n    historyEndRef: React.RefObject<HTMLDivElement>,\r\n    byEmptyStack: boolean,\r\n    changerStack: () => void,\r\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\r\n    updMem: (mem: string[] | undefined, ptr: number | undefined) => void\r\n    network: any\r\n    createHistNode: (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => void\r\n    createHistEdge: (from: number, to: number, by: any) => void\r\n    getLastHistNodeId: () => number\r\n    resetHistTree: () => void\r\n    setInit: (f: () => void) => void\r\n    setNfaToDfa: (f: () => void) => void\r\n    setMinimizeDfa: (f: () => void) => void\r\n    setMooreToMealy: (f: () => void) => void\r\n    setMealyToMoore: (f: () => void) => void\r\n    setChangerByStack: (f: () => void) => void\r\n    setRun: (f: () => void) => void\r\n    setStep: (f: () => void) => void\r\n    setReset: (f: () => void) => void\r\n    setHistory: (jsx: () => JSX.Element) => void\r\n    updateElements: (elements: Elements) => void\r\n    setComputerType: (type: null | ComputerType) => void\r\n    setResettedStatus: (status: boolean) => void\r\n    setByEmptyStack: (byEmptyStack: boolean) => void\r\n    setIsNonDetermenistic: (v: boolean) => void\r\n    setIsNonMinimizable: (v: boolean) => void\r\n    treeContextInfo: () => string\r\n    treeVisible: () => boolean\r\n}\r\n\r\ninterface runControlState {\r\n    input: string,\r\n    result?: boolean,\r\n    computer: Computer | undefined,\r\n    editMode: boolean,\r\n    currentInputIndex: number,\r\n    history: { node: node, note: string[] | undefined }[][],\r\n    byEmptyStack: boolean,\r\n    wasRuned: boolean,\r\n    memory: string[] | undefined,\r\n    gElements: graph,\r\n    startNode: node | undefined,\r\n    lastHistUnits: nodeTree[],\r\n    startStatements: NodeCore[]\r\n}\r\n\r\ntype ButtonSource = { name: () => string, onClick: () => void }\r\n\r\nconst creatButtons = (buttons: ButtonSource[][]) => {\r\n    const buttonsComp = buttons.reduce((acc: any[], buttons) => {\r\n        acc.push(\r\n            <div className=\"run-control__item run-control__buttons\">\r\n                {\r\n                    buttons.map((button) =>\r\n                        <div className=\"run-control__button\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                onClick={\r\n                                    () => { button.onClick() }\r\n                                }\r\n                            >\r\n                                {button.name()}\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        )\r\n\r\n        return acc\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {buttonsComp}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype nodeTree = {\r\n    id: number,\r\n    idd: number,\r\n    stack?: string[],\r\n    move?: Move,\r\n    by?: string,\r\n    from?: NodeCore,\r\n    stackDown?: string,\r\n    output?: Output,\r\n    label: string,\r\n    isAdmit: boolean,\r\n    isInitial: boolean,\r\n    isCurrent: boolean\r\n}\r\n\r\nclass RunControl extends React.Component<runControlProps, runControlState> {\r\n\r\n    constructor(props: runControlProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            result: undefined,\r\n            computer: undefined,\r\n            editMode: true,\r\n            currentInputIndex: -1,\r\n            history: [],\r\n            byEmptyStack: false,\r\n            wasRuned: false,\r\n            memory: undefined,\r\n            gElements: elementsToGraph(this.props.elements),\r\n            startNode: undefined,\r\n            lastHistUnits: [],\r\n            startStatements: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setInit(() => {\r\n            let haveEmpty = false\r\n            this.props.elements.edges.forEach(edge => {\r\n                if (edge.label === \"\") {\r\n                    haveEmpty = true\r\n                }\r\n            })\r\n            if (!haveEmpty) {\r\n                return this.initializeComputer()\r\n            }\r\n        })\r\n        this.props.setNfaToDfa(this.nfaToDfa)\r\n        this.props.setMinimizeDfa(this.minimizeDfa)\r\n        this.props.setMooreToMealy(this.mooreToMealy)\r\n        this.props.setMealyToMoore(this.mealyToMoore)\r\n        this.props.setChangerByStack(this.admitByStack)\r\n        this.props.setRun(this.run)\r\n        this.props.setStep(this.step)\r\n        this.props.setReset(this.reset)\r\n        this.props.setHistory(() =>\r\n            <History\r\n                startNode={this.state.startNode!}\r\n                history={this.state.history!}\r\n                historyEndRef={this.props.historyEndRef}\r\n            />)\r\n        this.initializeComputer()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\r\n        if (this.computerShouldBeUpdated(elementsToGraph(prevProps.elements), elementsToGraph(this.props.elements))) {\r\n            this.initializeComputer();\r\n        }\r\n\r\n    }\r\n\r\n    computerShouldBeUpdated = (prev: graph, current: graph): boolean => {\r\n        const compareNodes = (): boolean => {\r\n            if (prev.nodes.length !== current.nodes.length) {\r\n                return true;\r\n            }\r\n\r\n            return prev.nodes.some((prev, index) => {\r\n                const curr = current.nodes[index];\r\n                return prev.id !== curr.id ||\r\n                    prev.isAdmit !== curr.isAdmit ||\r\n                    prev.isInitial !== curr.isInitial;\r\n            })\r\n        }\r\n\r\n        const compareEdges = (): boolean => {\r\n            if (prev.edges.length !== current.edges.length) {\r\n                return true;\r\n            }\r\n\r\n            return prev.edges.some((prev, index) => {\r\n                const curr = current.edges[index];\r\n                return prev.id !== curr.id ||\r\n                    prev.from !== curr.from ||\r\n                    prev.to !== curr.to ||\r\n                    !isEqual(curr.transitions, prev.transitions)\r\n            });\r\n        }\r\n        return compareEdges() || compareNodes()\r\n    }\r\n\r\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node[], input: string[]): Computer | undefined => {\r\n        switch (computerType) {\r\n            case \"dfa\":\r\n                try {\r\n                    return new DFA(graph, initialNode, input);\r\n                } catch (e) {\r\n                    return undefined;\r\n                }\r\n            case \"nfa\":\r\n                return new NFA(graph, initialNode, input);\r\n            case \"nfa-eps\":\r\n                return new EpsilonNFA(graph, initialNode, input);\r\n            case \"pda\":\r\n                return new PDA(graph, initialNode, input, this.state.byEmptyStack);\r\n            case \"dpda\":\r\n                return new DPDA(graph, initialNode, input, this.state.byEmptyStack);\r\n            case \"tm\":\r\n                return new TM(graph, initialNode, input);\r\n            case \"mealy\":\r\n                return new Mealy(graph, initialNode, input);\r\n            case \"dmealy\":\r\n                return new DMealy(graph, initialNode, input);\r\n            case \"moore\":\r\n                return new Moore(graph, initialNode, input);\r\n            case \"dmoore\":\r\n                return new DMoore(graph, initialNode, input);\r\n        }\r\n\r\n    }\r\n\r\n    initializeComputer = () => {\r\n        console.warn(\"Reinitializing computer\");\r\n\r\n        this.setState({ gElements: elementsToGraph(this.props.elements) }, () => {\r\n            this.props.resetHistTree()\r\n\r\n            const initialNode: node[] = elementsToGraph(this.props.elements).nodes.filter(node => node.isInitial);\r\n            const input = this.state.input.split(\"\");\r\n\r\n            if (initialNode === undefined) {\r\n                console.warn(\"There is no initial node. Computer will not be initialized\");\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                computer: this.getComputer(this.props.computerType, this.state.gElements, initialNode, input),\r\n                result: undefined\r\n            }, async () => {\r\n\r\n                const tmp: nodeTree[] = []\r\n\r\n                const startStmts = this.state.computer !== undefined\r\n                    ? this.state.computer.getStartStatements()\r\n                    : []\r\n\r\n                startStmts.forEach((v, index) => {\r\n                    const paddingTreeId = index + 1\r\n\r\n                    tmp.push({\r\n                        stack: v.stack ? [...v.stack] : [],\r\n                        from: v.from!,\r\n                        by: v.by,\r\n                        stackDown: v.stackDown,\r\n                        label: `${v.id}`,\r\n                        isAdmit: v.isAdmit,\r\n                        isInitial: false,\r\n                        isCurrent: false,\r\n                        id: this.props.getLastHistNodeId() + paddingTreeId,\r\n                        idd: v.id\r\n                    })\r\n                })\r\n\r\n                if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\r\n                    tmp.forEach((v) => {\r\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\r\n                        const label = gNode?.label + '\\n' + `${(this.props.getLastHistNodeId() + 1)}` + '\\n―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\r\n                        this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\r\n                    })\r\n                } else {\r\n                    tmp.forEach((v) => {\r\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\r\n                        this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\r\n                    })\r\n                }\r\n                await this.setState({ lastHistUnits: tmp })\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        const input = event.target.value;\r\n\r\n        this.reset();\r\n        this.state.computer?.setInput(input.split(\"\"));\r\n\r\n        this.setState({ input: input });\r\n    }\r\n\r\n\r\n\r\n    drawTreeLayot = (nodes: NodeCore[], pred: nodeTree[], tmp: nodeTree[]) => {\r\n        nodes.forEach((v, index) => {\r\n            const paddingTreeId = index + 1\r\n            const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.id)\r\n\r\n            tmp.push({\r\n                stack: v.stack ? [...v.stack] : [],\r\n                from: v.from!,\r\n                by: v.by,\r\n                stackDown: v.stackDown,\r\n                move: v.move,\r\n                output: v.output,\r\n                label: `${v.id}`,\r\n                isAdmit: v.isAdmit,\r\n                isInitial: gNode!.isInitial,\r\n                isCurrent: gNode!.isCurrent,\r\n                id: this.props.getLastHistNodeId() + paddingTreeId,\r\n                idd: v.id\r\n            })\r\n        })\r\n\r\n        if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\r\n            tmp.forEach((v) => {\r\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\r\n                const label = gNode?.label + '\\n' + '―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\r\n                this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\r\n            })\r\n        } else {\r\n            tmp.forEach((v) => {\r\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\r\n                this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\r\n            })\r\n        }\r\n\r\n\r\n        const letter = (l: any) => l === EPS ? 'ε' : l\r\n\r\n        const stackDwn = (stDwn: any) => this.props.computerType === 'pda' || this.props.computerType === 'dpda'\r\n            ? ', ' + letter(stDwn)\r\n            : ''\r\n\r\n        const move = (mv: Move | undefined) => this.props.computerType === 'tm'\r\n            ? mv === Move.L ? ', L' : \", R\"\r\n            : ''\r\n\r\n        const output = (out: any) => this.props.computerType === 'mealy' || this.props.computerType === 'dmealy'\r\n            ? ', ' + out\r\n            : ''\r\n\r\n        const txt = (l: any, stDwn: any, mv: any, out: any) => letter(l) + stackDwn(stDwn) + move(mv) + output(out)\r\n\r\n        const bySymbRules = tmp.reduce((acc: { from: number, to: number[], by: any }[], v) => {\r\n            const from = () => {\r\n                switch (this.props.computerType) {\r\n                    case 'tm':\r\n                    case 'moore':\r\n                    case 'dmoore':\r\n                    case 'mealy':\r\n                    case 'dmealy':\r\n                        return pred.filter((p) => v.from && p.idd === v.from?.id)[0].id;\r\n                    default:\r\n                        return pred.filter((p) => v.from && p.idd === v.from?.id && p.stack?.toString === v.from.stack?.toString)[0].id\r\n                }\r\n            }\r\n            acc.push({ from: from(), to: [v.id], by: txt(v.by, v.stackDown, v.move, v.output) })\r\n            return acc\r\n        }, [])\r\n\r\n        console.log('\\n\\n\\n')\r\n\r\n        bySymbRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\r\n\r\n        this.setState({ lastHistUnits: tmp })\r\n\r\n    }\r\n\r\n    treeEps = (byEpsPred: NodeCore[], byLetter: NodeCore[], byEpsAfter: NodeCore[]) => {\r\n        console.log('\\n')\r\n        console.log('EPS>>>', byEpsPred)\r\n        console.log('LTR>>>', byLetter)\r\n        console.log('EPS>>>', byEpsAfter)\r\n        console.log('\\n')\r\n\r\n        const tmp: nodeTree[] = []\r\n        this.drawTreeLayot(byEpsPred, this.state.lastHistUnits, tmp)\r\n        const tmp1: nodeTree[] = []\r\n        this.drawTreeLayot(byLetter, tmp, tmp1)\r\n        const tmp2: nodeTree[] = []\r\n        this.drawTreeLayot(byEpsAfter, tmp1, tmp2)\r\n    }\r\n\r\n    tree = (byLetter: NodeCore[]) => {\r\n        const tmp: nodeTree[] = []\r\n        this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\r\n    }\r\n\r\n    step = async () => {\r\n        if (this.state.computer === undefined) {\r\n            console.error(\"Computer is not initialized yet\");\r\n            return;\r\n        }\r\n\r\n        this.props.setResettedStatus(true)\r\n\r\n\r\n        if (this.state.wasRuned) {\r\n            this.setState({ wasRuned: false });\r\n            this.reset();\r\n            await this.props.resetHistTree()\r\n        }\r\n\r\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\r\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\r\n\r\n        try {\r\n            const stepResult: Step = this.state.computer.step()\r\n\r\n            if (stepResult.nodes.length === 0) return;\r\n\r\n            this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\r\n            this.props.updMem(stepResult.memory, stepResult.pointer)\r\n\r\n            let result = undefined;\r\n            if (stepResult.counter === this.state.input.length) {\r\n                result = stepResult.isAdmit\r\n            } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\r\n                result = false;\r\n            }\r\n\r\n            const nodes = stepResult.nodes\r\n                .map(nodeCore => this.state.gElements.nodes.find(node => node.id === nodeCore.id))\r\n                .filter((node): node is node => node !== undefined);\r\n\r\n            const byEpsPred = stepResult.byEpsPred ? stepResult.byEpsPred : []\r\n\r\n            const byLetter = stepResult.byLetter ? stepResult.byLetter : []\r\n\r\n            const byEpsAfter = stepResult.byEpsAfter ? stepResult.byEpsAfter : []\r\n\r\n            if (this.props.computerType !== 'tm' && this.state.computer.haveEpsilon()) {\r\n                console.log('byEpsAfter>>>', byEpsAfter)\r\n                this.treeEps(byEpsPred, byLetter, byEpsAfter)\r\n            } else {\r\n                console.log('byLetter', byLetter)\r\n                const tmp: nodeTree[] = []\r\n                this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\r\n            }\r\n\r\n            const _nodes = nodes.map((e, i) => {\r\n                const stack = stepResult.nodes[i].stack\r\n                return {\r\n                    node: e,\r\n                    note: stack !== undefined\r\n                        ? stack.reverse()\r\n                        : stepResult.output !== undefined\r\n                            ? stepResult.output!\r\n                            : undefined\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                result: result,\r\n                currentInputIndex: this.state.currentInputIndex + 1,\r\n                history: [...this.state.history, _nodes],\r\n                memory: stepResult.memory,\r\n            }, () => {\r\n                this.props.setHistory(() =>\r\n                    <History\r\n                        startNode={this.state.startNode!}\r\n                        history={this.state.history!}\r\n                        historyEndRef={this.props.historyEndRef}\r\n                    />)\r\n            });\r\n\r\n        } catch (e) {\r\n            if (e instanceof NonDeterministic) {\r\n                this.props.setIsNonDetermenistic(true)\r\n                console.log('NonDeterministic')\r\n            }\r\n            else {\r\n                console.log(e)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    reset = (): void => {\r\n        this.state.computer?.restart();\r\n        this.props.changeStateIsCurrent([], true);\r\n        this.setState({\r\n            result: undefined,\r\n            currentInputIndex: -1,\r\n            history: [],\r\n        },\r\n            () => {\r\n                this.initializeComputer()\r\n                this.props.setHistory(() =>\r\n                    <History\r\n                        startNode={this.state.startNode!}\r\n                        history={this.state.history!}\r\n                        historyEndRef={this.props.historyEndRef}\r\n                    />)\r\n            }\r\n        );\r\n        this.state.computer?.setInput(this.state.input.split(\"\"))\r\n        this.props.setResettedStatus(false)\r\n        this.props.resetHistTree()\r\n    }\r\n\r\n    run = async (): Promise<void> => {\r\n        if (this.state.computer === undefined) {\r\n            console.error(\"Computer is not initialized yet\");\r\n            return;\r\n        }\r\n\r\n        await this.reset();\r\n\r\n        try {\r\n            const result = this.state.computer.run();\r\n\r\n            const histTrace = result.histTrace ? result.histTrace : []\r\n\r\n            histTrace.forEach(async (histStep) => {\r\n                const byEpsPred = histStep.byEpsPred ? histStep.byEpsPred : []\r\n\r\n                const byLetter = histStep.byLetter ? histStep.byLetter : []\r\n\r\n                const byEpsAfter = histStep.byEpsAfter ? histStep.byEpsAfter : []\r\n\r\n                if (this.state.computer && this.state.computer.haveEpsilon()) {\r\n                    this.treeEps(byEpsPred, byLetter, byEpsAfter)\r\n                } else {\r\n                    this.tree(byLetter)\r\n                }\r\n            })\r\n\r\n            this.setState({ result: result.isAdmit, currentInputIndex: -1, history: [] });\r\n            this.setState({ wasRuned: true })\r\n        } catch (e) {\r\n            if (e instanceof NonDeterministic) {\r\n                this.props.setIsNonDetermenistic(true)\r\n                console.log('NonDeterministic')\r\n            }\r\n        }\r\n    }\r\n\r\n    nfaToDfa = (): void => {\r\n        const nfaToDfa = this.state.computer!.nfaToDfa()\r\n        const nodes = nfaToDfa.nodes.map((v, it) => ({\r\n            id: v.id,\r\n            isAdmit: v.isAdmit,\r\n            label: v.id.toString(),\r\n            isInitial: it === 0,\r\n            isCurrent: false\r\n        }))\r\n        const edges = nfaToDfa.edges\r\n        const gElements = {\r\n            nodes: nodes,\r\n            edges: edges\r\n        }\r\n\r\n        this.setState({\r\n            gElements: gElements\r\n        }, () => {\r\n            this.props.updateElements(graphToElements(gElements))\r\n            this.props.setComputerType(\"dfa\")\r\n        })\r\n    }\r\n\r\n    admitByStack = (): void => {\r\n        const curStbyEmp = this.state.byEmptyStack;\r\n        this.setState({ byEmptyStack: !curStbyEmp });\r\n        this.props.setByEmptyStack(!curStbyEmp)\r\n        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\r\n        this.reset();\r\n    }\r\n\r\n    minimizeDfa = (): void => {\r\n        this.initializeComputer();\r\n        this.reset();\r\n\r\n        try {\r\n            const miniDFA: GraphEval = this.state.computer!.minimizeDfa()\r\n            const nodes = miniDFA.graphcore.nodes.map((v) => ({\r\n                id: v.id,\r\n                isAdmit: v.isAdmit,\r\n                label: 'G' + v.id.toString(),\r\n                isInitial: v.id === miniDFA.start.id,\r\n                isCurrent: false\r\n            }))\r\n            const edges = miniDFA.graphcore.edges\r\n            const gElements = {\r\n                nodes: nodes,\r\n                edges: edges\r\n            }\r\n\r\n            this.setState({\r\n                gElements: gElements\r\n            }, () => {\r\n                this.props.updateElements(graphToElements(gElements))\r\n            })\r\n        } catch (e) {\r\n            if (e instanceof NonMinimizable) {\r\n                this.props.setIsNonMinimizable(true)\r\n                console.log('NonDeterministic')\r\n            }\r\n        }\r\n    }\r\n\r\n    mooreToMealy = (): void => {\r\n        this.initializeComputer();\r\n        this.reset();\r\n\r\n        const mealy: GraphEvalMultiStart = this.state.computer!.mooreToMealy()\r\n\r\n        const starts = mealy.start.map((v) => v.id)\r\n\r\n        const nodes = mealy.graphcore.nodes.map((v) => ({\r\n            id: v.id,\r\n            isAdmit: v.isAdmit,\r\n            label: 'S' + v.id.toString(),\r\n            isInitial: starts.includes(v.id),\r\n            isCurrent: false,\r\n        }))\r\n        const edges = mealy.graphcore.edges\r\n        const gElements = {\r\n            nodes: nodes,\r\n            edges: edges\r\n        }\r\n        this.setState({\r\n            gElements: gElements\r\n        }, () => {\r\n            this.props.updateElements(graphToElements(gElements))\r\n            this.props.setComputerType(\"mealy\")\r\n        })\r\n    }\r\n\r\n    mealyToMoore = (): void => {\r\n        this.initializeComputer();\r\n        this.reset();\r\n\r\n        const miniDFA: GraphEvalMultiStart = this.state.computer!.mealyToMoore()\r\n\r\n        const starts = miniDFA.start.map(v => v.id)\r\n\r\n        const nodes = miniDFA.graphcore.nodes.map((v) => ({\r\n            id: v.id,\r\n            isAdmit: v.isAdmit,\r\n            label: 'S' + v.id.toString() + ' | ' + v.output,\r\n            isInitial: starts.includes(v.id),\r\n            isCurrent: false,\r\n        }))\r\n        const edges = miniDFA.graphcore.edges\r\n        const gElements = {\r\n            nodes: nodes,\r\n            edges: edges\r\n        }\r\n        this.setState({\r\n            gElements: gElements\r\n        }, () => {\r\n            this.props.updateElements(graphToElements(gElements))\r\n            this.props.setComputerType(\"moore\")\r\n        })\r\n    }\r\n\r\n    private defaultButtonsLine: ButtonSource[] = [\r\n        { name: () => 'Шаг', onClick: () => this.step() },\r\n        { name: () => 'Запуск', onClick: () => this.run() },\r\n        { name: () => 'Сбросить', onClick: () => this.reset() },\r\n    ]\r\n\r\n    private defaultButtons: ButtonSource[][] = [this.defaultButtonsLine]\r\n\r\n    private buttonsTree: ButtonSource[][] = [\r\n        this.defaultButtonsLine,\r\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\r\n    ]\r\n\r\n    private buttonMealy: ButtonSource[][] = [\r\n        this.defaultButtonsLine,\r\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\r\n        [{ name: () => 'Мур', onClick: () => this.mealyToMoore() }],\r\n    ]\r\n\r\n    private buttonMoore: ButtonSource[][] = [\r\n        this.defaultButtonsLine,\r\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\r\n        [{ name: () => 'Мили', onClick: () => this.mooreToMealy() }],\r\n    ]\r\n\r\n    private buttonsByStackByState: ButtonSource[][] = [\r\n        this.defaultButtonsLine,\r\n        [\r\n            { name: () => this.props.byEmptyStack ? \"По стеку\" : \"По состоянию\", onClick: () => this.props.changerStack() },\r\n            { name: this.props.treeContextInfo, onClick: this.props.treeVisible }\r\n        ],\r\n    ]\r\n\r\n    private buttonsNoRun: ButtonSource[][] = [\r\n        [\r\n            { name: () => 'Шаг', onClick: () => this.step() },\r\n            { name: () => 'Сбросить', onClick: () => this.reset() }\r\n        ],\r\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\r\n    ]\r\n\r\n    private getButtons = () => {\r\n        switch (this.props.computerType) {\r\n            case \"dfa\":\r\n            case \"nfa\":\r\n            case \"nfa-eps\":\r\n                return creatButtons(this.buttonsTree)\r\n            case \"tm\":\r\n                return creatButtons(this.buttonsNoRun)\r\n            case \"pda\":\r\n            case \"dpda\":\r\n                return creatButtons(this.buttonsByStackByState)\r\n            case \"mealy\":\r\n            case \"dmealy\": \r\n                return creatButtons(this.buttonMealy)\r\n            case \"moore\":\r\n            case \"dmoore\":\r\n                return creatButtons(this.buttonMoore)\r\n            default:\r\n                return creatButtons(this.buttonsTree)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ControlWrapper title={\"Запуск\"}>\r\n                <div>\r\n\r\n                    <div className=\"run-control__item run-control__input__row\">\r\n                        {\r\n                            this.state.editMode\r\n                                ?\r\n                                <TextField\r\n                                    label=\"Входная строка\"\r\n                                    size=\"small\"\r\n                                    value={this.state.input}\r\n                                    onChange={this.onInputChanged}\r\n                                    onBlur={() => {\r\n                                        this.state.input.length && this.setState({ editMode: false }, () => this.initializeComputer())\r\n                                    }}\r\n                                />\r\n                                :\r\n                                <div\r\n                                    className=\"run-control__input-value\"\r\n                                    onClick={() => {\r\n                                        this.setState({ editMode: true });\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        Array.from(this.state.input).map((char, index) => (\r\n                                            <span\r\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\r\n                                                key={index}\r\n                                            >\r\n                                                {char}\r\n                                            </span>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                        }\r\n\r\n                        <div className=\"run-control__result\">\r\n                            {\r\n                                this.state.result === undefined ? null :\r\n                                    this.state.result\r\n                                        ? <DoneIcon style={{ color: \"var(--commerce)\" }} />\r\n                                        : <CloseIcon style={{ color: \"var(--destructive)\" }} />\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    {this.getButtons()}\r\n\r\n\r\n                </div>\r\n            </ControlWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\r\nimport {Save, SaveMeta} from \"./Save\";\r\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\r\n\r\nconst itemName = \"saves\";\r\n\r\nexport default class BrowserSavesManager implements SavesManager {\r\n    getSavesMeta(): Promise<SaveMeta[]> {\r\n        let saves = BrowserSavesManager.getSaves();\r\n\r\n        return new Promise<SaveMeta[]>(function (resolve) {\r\n                resolve(saves);\r\n            }\r\n        )\r\n    }\r\n\r\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\r\n        let saves = BrowserSavesManager.getSaves();\r\n\r\n        let save = saves.find(save => save.id == saveMeta.id);\r\n\r\n        return new Promise(function (resolve) {\r\n            resolve(save || null);\r\n        });\r\n    }\r\n\r\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\r\n        if (!localStorage) {\r\n            throw new Error(\"no local storage\");\r\n        }\r\n\r\n        const saves = BrowserSavesManager.getSaves();\r\n        const next_id = (Math.max(...saves.map(save => Number(save.id))) + 1).toString();\r\n        const save_index = saves.findIndex(save => save.name == name);\r\n        const save = {id: \"0\", name: name, save: {graph: graph, type: type}};\r\n\r\n        if (save_index == -1) {\r\n            save.id = next_id;\r\n            saves.push(save);\r\n        } else {\r\n            save.id = saves[save_index].id;\r\n            saves[save_index] = save;\r\n        }\r\n\r\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\r\n\r\n        localStorage.setItem(itemName, saves_json);\r\n\r\n        return new Promise(function (resolve) {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    private static getSaves(): Save[] {\r\n        if (!localStorage) {\r\n            throw new Error(\"no local storage\");\r\n        }\r\n\r\n        let saves: Save[] = [];\r\n\r\n        try {\r\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\r\n        } catch (error) {\r\n            console.warn(\"Invalid saves in local storage: \" + error);\r\n            return [];\r\n        }\r\n\r\n        return saves;\r\n    }\r\n}","import {getCookie} from \"../utils\";\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\";\r\n\r\nexport function getAuthHeaders(): Headers {\r\n    const headers = new Headers();\r\n\r\n    headers.set(\"Authorization\", `Bearer ${getCookie(\"jwt\")}`);\r\n\r\n    return headers;\r\n}\r\n\r\nexport function getParams(headers: Headers): RequestInit {\r\n    return {\r\n        method: \"GET\",\r\n        headers: headers,\r\n    };\r\n}\r\n\r\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n\r\n    return {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: body,\r\n    };\r\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\r\nimport {SaveModel} from \"../Models/SaveModel\";\r\n\r\nexport default function ApiGetSaves(onAuthFailed: () => void): Promise<SaveModel[]> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + \"/save\";\r\n\r\n        const headers = getAuthHeaders();\r\n        const params = getParams(headers);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (response.status == 401) {\r\n                    onAuthFailed();\r\n                }\r\n                if (!response.ok) {\r\n                    throw new Error(response.status + response.statusText);\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\r\n\r\nexport type GetSaveRequest = {\r\n    id: string,\r\n};\r\n\r\nexport type GetSaveResponse = {\r\n    id: string,\r\n    name: string,\r\n    data: string,\r\n};\r\n\r\nexport default function ApiGetSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/save/${request.id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n        const params = getParams(headers);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (response.status == 401) {\r\n                    onAuthFailed();\r\n                }\r\n                if (!response.ok) {\r\n                    throw new Error(response.status + response.statusText);\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\r\n\r\nexport type SaveRequest = {\r\n    name: string,\r\n    data: string,\r\n};\r\n\r\nexport default function ApiSave(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + \"/save\";\r\n\r\n        const body = JSON.stringify(request);\r\n        const headers = getAuthHeaders();\r\n        const params = postParams(headers, body);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (response.status == 401) {\r\n                    onAuthFailed();\r\n                }\r\n                if (!response.ok) {\r\n                    throw new Error(response.status + response.statusText);\r\n                }\r\n\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n}","import SavesManager from \"./SavesManager\";\r\nimport {Save, SaveMeta} from \"./Save\";\r\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\r\n\r\nimport ApiGetSaves from \"../Api/apiGetSaves\";\r\nimport ApiGetSave, {GetSaveRequest} from \"../Api/apiGetSave\";\r\nimport ApiSave, {SaveRequest} from \"../Api/apiSave\";\r\nimport {SaveModel} from \"../Models/SaveModel\";\r\n\r\nexport default class CloudSavesManager implements SavesManager {\r\n    private readonly onAuthFailed;\r\n\r\n    constructor(onAuthFailed: () => void) {\r\n        this.onAuthFailed = onAuthFailed;\r\n    }\r\n\r\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\r\n        const request: GetSaveRequest = {\r\n            id: saveMeta.id\r\n        };\r\n\r\n        let save = null;\r\n\r\n        try {\r\n            const response = await ApiGetSave(request, this.onAuthFailed);\r\n\r\n            save = {\r\n                id: response.id,\r\n                name: response.name,\r\n                save: JSON.parse(response.data),\r\n            };\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        return save;\r\n    }\r\n\r\n    async getSavesMeta(): Promise<SaveMeta[]> {\r\n        let saves: SaveModel[] = [];\r\n\r\n        try {\r\n            saves = await ApiGetSaves(this.onAuthFailed);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        return saves.map(x => {\r\n            const saveMeta: SaveMeta = {\r\n                id: x.id,\r\n                name: x.name\r\n            };\r\n            return saveMeta;\r\n        });\r\n    }\r\n\r\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\r\n        const serialized_save = JSON.stringify({\r\n            graph: graph,\r\n            type: type\r\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\r\n\r\n        const request: SaveRequest = {\r\n            name: name,\r\n            data: serialized_save\r\n        };\r\n\r\n        try {\r\n            await ApiSave(request, this.onAuthFailed);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\r\nimport {computersInfo} from \"../../utils\";\r\n\r\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\r\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\r\nimport {SaveMeta} from \"../../SavesManager/Save\";\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListSubheader from \"@mui/material/ListSubheader\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\n\r\nimport \"./WelcomePopout.css\";\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport interface WelcomePopoutProps {\r\n    open: boolean,\r\n    onClose: () => void,\r\n    onAuthFailed: () => void,\r\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\r\n}\r\n\r\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\r\n    {\r\n        open,\r\n        onClose,\r\n        onAuthFailed,\r\n        changeComputerType\r\n    }) => {\r\n    const browserSavesManager = new BrowserSavesManager();\r\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\r\n\r\n    const onCreateTemplateClicked = (type: ComputerType) => {\r\n        changeComputerType(type, null);\r\n        onClose();\r\n    }\r\n\r\n    const onCreateEmptyClicked = (type: ComputerType) => {\r\n        changeComputerType(type, {nodes: [], edges: []});\r\n        onClose();\r\n    }\r\n\r\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\r\n        const save = await cloudSavesManager.getSave(saveMeta);\r\n\r\n        if (save) {\r\n            changeComputerType(save.save.type, save.save.graph);\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\r\n        const save = await browserSavesManager.getSave(saveMeta);\r\n\r\n        if (save) {\r\n            changeComputerType(save.save.type, save.save.graph);\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const updateCloudSavesMeta = async () => {\r\n        setLoadingCloudSavesMeta(true);\r\n\r\n        const savesMeta = await cloudSavesManager.getSavesMeta();\r\n        setCloudSavesMeta(savesMeta);\r\n\r\n        setLoadingCloudSavesMeta(false);\r\n    }\r\n\r\n    const updateBrowserSavesMeta = async () => {\r\n        const savesMeta = await browserSavesManager.getSavesMeta();\r\n        setBrowserSavesMeta(savesMeta);\r\n    }\r\n\r\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\r\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\r\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            updateBrowserSavesMeta();\r\n            updateCloudSavesMeta();\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n            <DialogTitle>\r\n                <p>Симулятор автоматов</p>\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <Paper\r\n                    className=\"welcome-popout__body\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    <List dense>\r\n                        {\r\n                            cloudSavesMeta.length !== 0 ?\r\n                                <ListSubheader>\r\n                                    Открыть сохранение в облаке\r\n                                </ListSubheader>\r\n                                : null\r\n                        }\r\n\r\n                        {\r\n                            loadingCloudSavesMeta\r\n                                ?\r\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\r\n                                    <Skeleton\r\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\r\n                                        animation=\"wave\"\r\n                                        variant=\"rectangular\"\r\n                                        height={28}\r\n                                    />\r\n\r\n                                    <Skeleton\r\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\r\n                                        animation=\"wave\"\r\n                                        variant=\"rectangular\"\r\n                                        height={28}\r\n                                    />\r\n\r\n                                    <Skeleton\r\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\r\n                                        animation=\"wave\"\r\n                                        variant=\"rectangular\"\r\n                                        height={28}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                cloudSavesMeta.length !== 0 ?\r\n                                    cloudSavesMeta.map(saveMeta => (\r\n                                        <ListItem\r\n                                            key={saveMeta.id}\r\n                                            secondaryAction={\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\r\n                                                >\r\n                                                    Открыть\r\n                                                </Button>\r\n                                            }\r\n                                        >\r\n                                            <ListItemText>\r\n                                                {saveMeta.name}\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                    ))\r\n                                    : null\r\n                        }\r\n\r\n                        {\r\n                            browserSavesMeta.length !== 0 ?\r\n                                <ListSubheader>\r\n                                    Открыть сохранение в браузере\r\n                                </ListSubheader>\r\n                                : null\r\n                        }\r\n\r\n                        {\r\n                            browserSavesMeta.length !== 0 ?\r\n                                browserSavesMeta.map(saveMeta => (\r\n                                    <ListItem\r\n                                        key={saveMeta.id}\r\n                                        secondaryAction={\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                size=\"small\"\r\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\r\n                                            >\r\n                                                Открыть\r\n                                            </Button>\r\n                                        }\r\n                                    >\r\n                                        <ListItemText>\r\n                                            {saveMeta.name}\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                ))\r\n                                : null\r\n                        }\r\n\r\n                        <ListSubheader>\r\n                            Создать новый вычислитель\r\n                        </ListSubheader>\r\n                        {\r\n                            Object.entries(computersInfo).map(entry => (\r\n                                <ListItem\r\n                                    key={entry[1].name}\r\n                                    secondaryAction={\r\n                                        <div>\r\n                                            <Button\r\n                                                className=\"welcome-popout__create-empty-button\"\r\n                                                variant=\"text\"\r\n                                                size=\"small\"\r\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\r\n                                            >\r\n                                                Создать пустым\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                size=\"small\"\r\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\r\n                                            >\r\n                                                Создать\r\n                                            </Button>\r\n                                        </div>\r\n                                    }\r\n                                >\r\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n\r\n                <div className=\"welcome-popout__footer\">\r\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\r\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\r\n                    </IconButton>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default WelcomePopout;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\r\n\r\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\r\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\r\nimport {SaveMeta} from \"../../SavesManager/Save\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nimport \"./SavingPopout.css\";\r\n\r\nexport interface SavingPopoutProps {\r\n    open: boolean,\r\n    onClose: () => void,\r\n    isLogin: boolean,\r\n    onAuthFailed: () => void,\r\n\r\n    computerType: ComputerType,\r\n    graph: graph,\r\n}\r\n\r\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\r\n    {\r\n        open,\r\n        onClose,\r\n        isLogin,\r\n        onAuthFailed,\r\n        graph,\r\n        computerType\r\n    }) => {\r\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\r\n        value = value || savesOrigin;\r\n        setSavesOrigin(value);\r\n    }\r\n\r\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\r\n        setSaveName(saveMeta.name);\r\n    }\r\n\r\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setSaveName(value);\r\n    }\r\n\r\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\r\n        switch (savesOrigin) {\r\n            case \"cloud\":\r\n                cloudSavesManager.save(saveName, graph, computerType);\r\n                break;\r\n            case \"browser\":\r\n                browserSavesManager.save(saveName, graph, computerType);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        updateNames();\r\n        onClose();\r\n    }\r\n\r\n    const updateNames = async () => {\r\n        setLoadingSavesMeta(true);\r\n\r\n        let savesMeta: SaveMeta[] = [];\r\n\r\n        switch (savesOrigin) {\r\n            case \"cloud\":\r\n                savesMeta = await cloudSavesManager.getSavesMeta();\r\n                break;\r\n            case \"browser\":\r\n                savesMeta = await browserSavesManager.getSavesMeta();\r\n                break;\r\n            default:\r\n                setSavesMeta([]);\r\n                break;\r\n        }\r\n\r\n        setSavesMeta(savesMeta);\r\n        setLoadingSavesMeta(false);\r\n    }\r\n\r\n    const updateDefaultOrigin = () => {\r\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\r\n    }\r\n\r\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\r\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\r\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\r\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\r\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\r\n    const [saveName, setSaveName] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            updateDefaultOrigin();\r\n            updateNames();\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        updateNames();\r\n    }, [savesOrigin]);\r\n\r\n    useEffect(() => {\r\n        setSaveName(\"\");\r\n    }, [savesOrigin, open]);\r\n\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose}>\r\n            <DialogTitle>\r\n                <p>Сохранение</p>\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <div className=\"saving-popout__body\">\r\n                    <div className=\"saving-popout__body__sidebar\">\r\n                        <ToggleButtonGroup\r\n                            orientation=\"vertical\"\r\n                            exclusive\r\n                            value={savesOrigin}\r\n                            onChange={onSavesOriginChanged}\r\n                        >\r\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\r\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </div>\r\n\r\n                    <div className=\"saving-popout__body__main\">\r\n                        <Paper\r\n                            className=\"saving-popout__body__main__paper\"\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {\r\n                                loadingSavesMeta\r\n                                    ?\r\n                                    <div className=\"saving-popout__body__main__skeleton\">\r\n                                        <Skeleton\r\n                                            className=\"saving-popout__body__main__skeleton__bar\"\r\n                                            animation=\"wave\"\r\n                                            variant=\"rectangular\"\r\n                                            height=\"36\"\r\n                                        />\r\n\r\n                                        <Skeleton\r\n                                            className=\"saving-popout__body__main__skeleton__bar\"\r\n                                            animation=\"wave\"\r\n                                            variant=\"rectangular\"\r\n                                            height=\"36\"\r\n                                        />\r\n\r\n                                        <Skeleton\r\n                                            className=\"saving-popout__body__main__skeleton__bar\"\r\n                                            animation=\"wave\"\r\n                                            variant=\"rectangular\"\r\n                                            height=\"36\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    <List dense>\r\n                                        {\r\n                                            savesMeta.map(saveMeta => (\r\n                                                <ListItem\r\n                                                    key={saveMeta.id}\r\n                                                    disablePadding\r\n                                                >\r\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\r\n                                                        <ListItemText primary={saveMeta.name}/>\r\n                                                    </ListItemButton>\r\n                                                </ListItem>\r\n                                            ))\r\n                                        }\r\n                                    </List>\r\n                            }\r\n\r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n\r\n                <TextField\r\n                    className=\"saving-popout__save-name-input\"\r\n                    variant=\"standard\"\r\n                    size=\"small\"\r\n                    label=\"Имя сохранения\"\r\n                    value={saveName}\r\n                    onChange={onSaveNameChanged}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={onSaveClicked}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SavingPopout;","import {BASE_URL} from \"./apiBase\";\r\n\r\nexport type ApiSignInRequest = {\r\n    email: string,\r\n    password: string,\r\n};\r\n\r\nexport default function ApiSignIn(request: ApiSignInRequest): Promise<string> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + \"/auth/signin\";\r\n\r\n        const body = JSON.stringify(request);\r\n\r\n        const headers = new Headers();\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: body,\r\n            redirect: \"manual\",\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                } else {\r\n                    reject();\r\n                }\r\n            })\r\n            .then(text => {\r\n                if (!text) {\r\n                    reject();\r\n                } else {\r\n                    resolve(text);\r\n                }\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ApiSignIn from \"../../../Api/apiSignIn\";\r\n\r\ninterface LoginPageProps {\r\n}\r\n\r\nconst LoginPage: FC<LoginPageProps> = ({}) => {\r\n    const authEndpoint = process.env.REACT_APP_BACKEND_BASE_URL + \"/auth\";\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setEmail(value);\r\n    }\r\n\r\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setPassword(value);\r\n    }\r\n\r\n    const onLoginClicked = async () => {\r\n        const request = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n\r\n        await ApiSignIn(request)\r\n            .then(jwt => navigate(`/success-login?jwt=${jwt}`))\r\n            .catch(e => setError(`Не удалось войти в аккаунт (${e})`));\r\n    }\r\n\r\n    const onRegisterClicked = () => {\r\n        navigate('/register');\r\n    }\r\n\r\n    const onSignInWithExternalProviderClicked = (provider: string) => {\r\n        window.location.href = authEndpoint + `/external/signin?provider=${provider}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setError(null);\r\n    }, [email, password]);\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <Container maxWidth=\"xs\">\r\n                <Stack\r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                    style={{minHeight: '100vh'}}\r\n                >\r\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Вход в аккаунт</Typography>\r\n\r\n                    {\r\n                        error && <Alert severity=\"error\">{error}</Alert>\r\n                    }\r\n\r\n                    <TextField size=\"small\"\r\n                               label=\"Электропочта\"\r\n                               type=\"email\"\r\n                               value={email}\r\n                               onChange={onEmailChanged}/>\r\n\r\n                    <TextField size=\"small\"\r\n                               label=\"Пароль\"\r\n                               type=\"password\"\r\n                               value={password}\r\n                               onChange={onPasswordChanged}/>\r\n\r\n                    <Button variant=\"contained\"\r\n                            onClick={onLoginClicked}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n\r\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\r\n\r\n                    <Button variant=\"outlined\"\r\n                            onClick={() => onSignInWithExternalProviderClicked(\"Google\")}\r\n                    >\r\n                        Войти через аккаунт Google\r\n                    </Button>\r\n\r\n                    <Button variant=\"outlined\"\r\n                            onClick={() => onSignInWithExternalProviderClicked(\"Yandex\")}\r\n                    >\r\n                        Войти через аккаунт Яндекс\r\n                    </Button>\r\n\r\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\r\n\r\n                    <Button variant=\"outlined\"\r\n                            onClick={onRegisterClicked}\r\n                    >\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginPage;","import {BASE_URL} from \"./apiBase\";\r\n\r\nexport type ApiSignUpRequest = {\r\n    email: string,\r\n    password: string,\r\n    about: string,\r\n};\r\n\r\nexport default function ApiSignUp(request: ApiSignUpRequest): Promise<void> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + \"/auth/signup\";\r\n\r\n        const body = JSON.stringify(request);\r\n\r\n        const headers = new Headers();\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: body,\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    resolve();\r\n                } else {\r\n                    reject();\r\n                }\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport \"./RegisterPage.css\";\r\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ApiSignUp from \"../../../Api/apiSignUp\";\r\n\r\ninterface RegisterPageProps {\r\n}\r\n\r\nconst RegisterPage: FC<RegisterPageProps> = ({}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [about, setAbout] = useState<string>(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setEmail(value);\r\n    }\r\n\r\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setPassword(value);\r\n    }\r\n\r\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setAbout(value);\r\n    }\r\n\r\n    const onRegisterClicked = async () => {\r\n        const request = {\r\n            email: email,\r\n            password: password,\r\n            about: about,\r\n        };\r\n\r\n        await ApiSignUp(request)\r\n            .then(() => navigate(\"/registered\"))\r\n            .catch(() => setError(\"Не удалось зарегистрировать нового пользователя\"));\r\n    }\r\n\r\n    const onLoginClicked = () => {\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        setError(null);\r\n    }, [email, password, about]);\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <Container maxWidth=\"xs\">\r\n                <Stack\r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                    style={{minHeight: '100vh'}}\r\n                >\r\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Новый аккаунт</Typography>\r\n\r\n                    {\r\n                        error && <Alert severity=\"error\">{error}</Alert>\r\n                    }\r\n\r\n                    <TextField size=\"small\"\r\n                               label=\"Электропочта\"\r\n                               type=\"email\"\r\n                               value={email}\r\n                               onChange={onEmailChanged}\r\n                    />\r\n\r\n                    <TextField size=\"small\"\r\n                               label=\"Пароль\"\r\n                               type=\"password\"\r\n                               value={password}\r\n                               onChange={onPasswordChanged}\r\n                    />\r\n\r\n                    <TextField label=\"О себе\"\r\n                               type=\"text\"\r\n                               multiline\r\n                               rows={3}\r\n                               value={about}\r\n                               onChange={onAboutChanged}\r\n                    />\r\n\r\n                    <Button variant=\"contained\"\r\n                            onClick={onRegisterClicked}\r\n                    >\r\n                        Зарегистрироваться\r\n                    </Button>\r\n\r\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\r\n\r\n                    <Button variant=\"outlined\"\r\n                            onClick={onLoginClicked}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegisterPage;","import React from \"react\";\r\n\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\n\r\nimport \"./AppHeader.css\";\r\n\r\nexport interface AppHeaderProps {\r\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\r\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\r\n    onLogoutButtonClicked: () => void,\r\n    isLogin: boolean,\r\n}\r\n\r\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\r\n    {\r\n        onMenuButtonClicked,\r\n        onSaveButtonClicked,\r\n        onLogoutButtonClicked,\r\n        isLogin,\r\n    }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const onSignInButtonClicked = () => {\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    const onSignOutButtonClicked = () => {\r\n        document.cookie = \"jwt=; path=/; secure; max-age=-99999999\";\r\n        onLogoutButtonClicked();\r\n    }\r\n\r\n    const onProfileButtonClicked = () => {\r\n        navigate(\"/me\");\r\n    }\r\n\r\n\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar variant=\"dense\">\r\n                <div className=\"app__header__left\">\r\n                    <Button className=\"app__header__button\"\r\n                            color=\"inherit\"\r\n                            onClick={onMenuButtonClicked}\r\n                    >\r\n                        Меню\r\n                    </Button>\r\n\r\n                    <Button className=\"app__header__button\"\r\n                            color=\"inherit\"\r\n                            onClick={onSaveButtonClicked}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"app__header__right\">\r\n                    {\r\n                        isLogin &&\r\n                        <Button className=\"app__header__button\"\r\n                                color=\"inherit\"\r\n                                onClick={onProfileButtonClicked}\r\n                        >\r\n                            Профиль\r\n                        </Button>\r\n                    }\r\n\r\n                    <Button className=\"app__header__button\"\r\n                            color=\"inherit\"\r\n                            onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\r\n                    >\r\n                        {isLogin ? \"Выйти\" : \"Войти\"}\r\n                    </Button>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport \"./SuccessLoginPage.css\";\r\nimport {Alert, Container, Stack, Typography} from \"@mui/material\";\r\n\r\nexport interface SuccessLoginPageProps {\r\n    updateCurrentUser: () => void,\r\n}\r\n\r\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({updateCurrentUser}) => {\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const updateAuth = async () => {\r\n        const jwt = searchParams.get('jwt');\r\n\r\n        if (!jwt) {\r\n            setError(\"Не удалось войти в аккаунт\");\r\n            return;\r\n        }\r\n\r\n        console.log(`Jwt = ${jwt}`);\r\n\r\n        document.cookie = `jwt=${jwt}; path=/; secure; max-age=2592000`;\r\n\r\n        await updateCurrentUser();\r\n\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateAuth();\r\n    }, []);\r\n\r\n    const [searchParams] = useSearchParams();\r\n\r\n    return (\r\n        <div className=\"success-login-page\">\r\n            <Container maxWidth=\"xs\">\r\n                <Stack\r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                    style={{minHeight: '100vh'}}\r\n                >\r\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Входим в аккаунт...</Typography>\r\n\r\n                    {\r\n                        error && <Alert severity=\"error\">{error}</Alert>\r\n                    }\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SuccessLoginPage;","import React, {FC} from \"react\";\r\nimport \"./RegisteredPage.css\";\r\nimport {Button, Container, Stack, Typography} from \"@mui/material\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\ninterface RegisteredPageProps {\r\n}\r\n\r\nconst RegisteredPage: FC<RegisteredPageProps> = ({}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onLoginClicked = () => {\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"registered-page\">\r\n            <Container maxWidth=\"xs\">\r\n                <Stack\r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                    style={{minHeight: '100vh'}}\r\n                >\r\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>\r\n                        Новый аккаунт создан\r\n                    </Typography>\r\n\r\n                    <Button variant=\"outlined\"\r\n                            onClick={onLoginClicked}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegisteredPage;","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport {\r\n    // DataSet,\r\n    Network,\r\n    Options,\r\n    Data, \r\n} from \"vis-network/peer\";\r\nimport { DataSet } from \"vis-data/peer\";\r\nimport { Timeline } from \"vis-timeline/peer\";\r\n// vis-network/standalone/esm/vis-network\r\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\r\nimport { edge, graph, node } from \"./react-graph-vis-types\";\r\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\r\nimport { useKey } from \"rooks\";\r\n// import { Timeline } from \"vis-network\";\r\n\r\ninterface PropsVisNet {\r\n    nodes: DataSet<node>,\r\n    edges: DataSet<edge>,\r\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\r\n    onDoubleClick: (params?: any) => void,\r\n    onClick1: (params?: any) => void,\r\n    onClick2: (params?: any) => void,\r\n    onClick3: (params?: any) => void,\r\n    onClick4: (params?: any) => void,\r\n    network: any,\r\n    contextMenu?: any\r\n}\r\n\r\nexport const MyUseKey = (key: any, condition: boolean) => {\r\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\r\n\r\n    const downHadler = (k: any) => {\r\n        if (key === k) setIsKeyPressed(true)\r\n    }\r\n\r\n    const upHadler = (k: any) => {\r\n        if (key !== k) setIsKeyPressed(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (condition) {\r\n            window.addEventListener('keydown', downHadler)\r\n            window.addEventListener('keyup', upHadler)\r\n\r\n            return () => {\r\n                window.removeEventListener('keydown', downHadler)\r\n                window.removeEventListener('keyup', upHadler)\r\n            }\r\n        }\r\n    }, [])\r\n    return isKeyPressed\r\n}\r\n\r\nexport const VisNetwork = (props: PropsVisNet) => {\r\n    // A reference to the div rendered by this component\r\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\r\n\r\n    const [options, setOptions] = useState<Options>({\r\n        edges: {\r\n            smooth: {\r\n                enabled: true,\r\n                type: \"discrete\",\r\n                roundness: 0.5\r\n            },\r\n            // color: {\r\n            //     //color:'#848484',\r\n            //     highlight:'#848484',\r\n            //     hover: '#d3d2cd',\r\n            //     inherit: true,\r\n            //     opacity:1.0\r\n            // },\r\n            color: \"#000000\",\r\n            width: 0.5,\r\n            arrows: {\r\n                to: {\r\n                    enabled: true,\r\n                    scaleFactor: 0.5\r\n                }\r\n            },\r\n            length: 200\r\n        },\r\n        manipulation: {\r\n            enabled: false,\r\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\r\n                console.log('add edge', data);\r\n                callback(data);\r\n                // after each adding you will be back to addEdge mode\r\n                setKeyPressed(false)\r\n\r\n                props.network.current.disableEditMode()\r\n                // addEdgeMode();\r\n            }\r\n\r\n        },\r\n        // interaction: {\r\n        //     dragView: false,\r\n        //     keyboard: false,\r\n        //     dragNodes: false,\r\n        // },\r\n        layout: { improvedLayout: false },\r\n        nodes: {\r\n            shapeProperties: {\r\n                interpolation: false\r\n            },\r\n            shape: \"circle\",\r\n            font: \"18px Roboto black\",\r\n            labelHighlightBold: false,\r\n            size: 40,\r\n            borderWidth: 2,\r\n            color: {\r\n                background: \"#ffffff\",\r\n                border: \"#000000\",\r\n                highlight: {\r\n                    border: \"#000000\",\r\n                    background: \"#ffffff\"\r\n                }\r\n            },\r\n            // color: \"#ffffff\",\r\n        },\r\n        physics: {\r\n            enabled: false\r\n        }\r\n    });\r\n\r\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\r\n\r\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\r\n        event.preventDefault();\r\n        setContextMenu(\r\n            contextMenu === null\r\n                ? {\r\n                    mouseX: event.clientX - 2,\r\n                    mouseY: event.clientY - 4,\r\n                }\r\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\r\n                // Other native context menus might behave different.\r\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\r\n                null,\r\n        );\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setContextMenu(null);\r\n    };\r\n\r\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\r\n\r\n    const handleUserKeyPress = useCallback(event => {\r\n        if (event.keyCode === 17) {\r\n            if (!keyPressed) {\r\n                console.log('handleUserKeyPress')\r\n                props.network.current.addEdgeMode();\r\n                setKeyPressed(true);\r\n                console.log('-->' + keyPressed)\r\n            }\r\n        }\r\n    }, [keyPressed]);\r\n\r\n\r\n    const handleUserKeyUnPress = useCallback(event => {\r\n        if (event.keyCode === 17) {\r\n            if (keyPressed) {\r\n                console.log('handleUserKeyUnPress')\r\n                props.network.current.disableEditMode();\r\n                setKeyPressed(false);\r\n                console.log('-->' + keyPressed)\r\n            }\r\n        }\r\n    }, [keyPressed]);\r\n\r\n\r\n  // DOM element where the Timeline will be attached\r\n  const [container, _co] = useState(useRef<HTMLDivElement>(null)) ;\r\n//   document.getElementById(\"visualization\");\r\n\r\n  // Create a DataSet (allows two way data-binding)\r\n  const items = new DataSet([\r\n    { id: 1, content: \"item 1\", start: \"2014-04-20\" },\r\n    { id: 2, content: \"item 2\", start: \"2014-04-14\" },\r\n    { id: 3, content: \"item 3\", start: \"2014-04-18\" },\r\n    { id: 4, content: \"item 4\", start: \"2014-04-16\", end: \"2014-04-19\" },\r\n    { id: 5, content: \"item 5\", start: \"2014-04-25\" },\r\n    { id: 6, content: \"item 6\", start: \"2014-04-27\", type: \"point\" }\r\n  ]);\r\n\r\n  // Configuration for the Timeline\r\n  const timeLineOptions = {};\r\n\r\n  // Create a Timeline\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleUserKeyPress);\r\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\r\n        \r\n        console.log('--' + keyPressed)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\r\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\r\n        };\r\n    }, [handleUserKeyPress])\r\n    const timeline = React.createRef<Timeline | null>();\r\n    // const timeline\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (domNode.current) {\r\n            props.network.current = new Network(domNode.current, props.data, options);\r\n            // timeline = new Timeline(container, items, options)\r\n            // timeline.current = new Timeline(container.current, items, timeLineOptions);\r\n\r\n            console.log(\"HERE<-domNode.current\")\r\n        }\r\n\r\n        console.log(\"HERE<-\")\r\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\r\n\r\n        if (props.network.current) {\r\n            props.network.current.on('doubleClick', (params: any) => {\r\n                setKeyPressed(false)\r\n                props.onDoubleClick(params)\r\n            })\r\n            props.network.current.on('click', props.onClick1);\r\n            props.network.current.on('click', props.onClick2);\r\n            props.network.current.on('click', props.onClick3);\r\n            props.network.current.on('click', props.onClick4);\r\n            props.network.current.on('click', props.onClick4);\r\n\r\n            props.network.current.on('dragging', () => {\r\n                props.network.current.unselectAll();\r\n            });\r\n\r\n\r\n            props.network.current.on('controlNodeDragging', () => {\r\n                props.network.current.unselectAll();\r\n            });\r\n            \r\n        }\r\n\r\n\r\n    }, [domNode, props.data, props.network, options]);\r\n    // \r\n    const refContainer = () => {\r\n        return (\r\n            <div id={\"network\"}\r\n                style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n                ref={domNode}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        props.contextMenu === undefined\r\n            ?\r\n            refContainer()\r\n            :\r\n            <div onContextMenu={handleContextMenu}\r\n                style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n                {refContainer()}\r\n                <Menu\r\n                    open={contextMenu !== null}\r\n                    onClose={handleClose}\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={\r\n                        contextMenu !== null\r\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\r\n                            : undefined\r\n                    }\r\n                >\r\n                    {props.contextMenu(handleClose, handleContextMenu)}\r\n                </Menu>\r\n            </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useEffect } from 'react';\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport const NonDetermenisticModal = (props: { isNonDetermenistic: boolean, setIsNonDetermenistic: (v: boolean) => void }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        if (props.isNonDetermenistic) {\r\n            setOpen(props.isNonDetermenistic)\r\n            props.setIsNonDetermenistic(false)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Ошибка\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        Недетерменизм\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const NonMinimizableModal = (props: { isNonMinimizable: boolean, setIsNonMinimizable: (v: boolean) => void }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        if (props.isNonMinimizable) {\r\n            setOpen(props.isNonMinimizable)\r\n            props.setIsNonMinimizable(false)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Ошибка\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        Невозможно минимизровать\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport {\r\n    DataSet,\r\n    Network,\r\n    Options,\r\n    Data,\r\n} from \"vis-network/standalone/esm/vis-network\";\r\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\r\nimport { edge, graph, node } from \"./react-graph-vis-types\";\r\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\r\nimport { useKey } from \"rooks\";\r\nimport { network } from \"vis-network\";\r\n\r\ninterface PropsVisNet {\r\n    nodes: DataSet<node>,\r\n    edges: DataSet<edge>,\r\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\r\n    onDoubleClick: (params?: any) => void,\r\n    onClick1: (params?: any) => void,\r\n    onClick2: (params?: any) => void,\r\n    onClick3: (params?: any) => void,\r\n    onClick4: (params?: any) => void,\r\n    network: any,\r\n    contextMenu?: any\r\n}\r\n\r\nexport const MyUseKey = (key: any, condition: boolean) => {\r\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\r\n\r\n    const downHadler = (k: any) => {\r\n        if (key === k) setIsKeyPressed(true)\r\n    }\r\n\r\n    const upHadler = (k: any) => {\r\n        if (key !== k) setIsKeyPressed(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (condition) {\r\n            window.addEventListener('keydown', downHadler)\r\n            window.addEventListener('keyup', upHadler)\r\n\r\n            return () => {\r\n                window.removeEventListener('keydown', downHadler)\r\n                window.removeEventListener('keyup', upHadler)\r\n            }\r\n        }\r\n    }, [])\r\n    return isKeyPressed\r\n}\r\n\r\nexport const TreeHistory = (props: PropsVisNet) => {\r\n    // A reference to the div rendered by this component\r\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\r\n\r\n    const [options, setOptions] = useState<Options>({\r\n        edges: {\r\n            smooth: {\r\n                enabled: true,\r\n                type: \"discrete\",\r\n                roundness: 0.5\r\n            },\r\n            // color: {\r\n            //     //color:'#848484',\r\n            //     highlight:'#848484',\r\n            //     hover: '#d3d2cd',\r\n            //     inherit: true,\r\n            //     opacity:1.0\r\n            // },\r\n            color: \"#000000\",\r\n            width: 0.5,\r\n            arrows: {\r\n                to: {\r\n                    enabled: true,\r\n                    scaleFactor: 0.5\r\n                }\r\n            },\r\n            length: 200\r\n        },\r\n        manipulation: {\r\n            enabled: false,\r\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\r\n                console.log('add edge', data);\r\n                callback(data);\r\n                // after each adding you will be back to addEdge mode\r\n                setKeyPressed(false)\r\n\r\n                props.network.current.disableEditMode()\r\n                // addEdgeMode();\r\n            }\r\n\r\n        },\r\n        interaction: {\r\n            // dragView: false,\r\n            keyboard: false,\r\n            dragNodes: true,\r\n        },\r\n        layout: {\r\n         hierarchical: {\r\n        //  direction: directionInput,\r\n         treeSpacing:200,\r\n         direction: 'LR',\r\n         parentCentralization: false,\r\n         sortMethod: 'directed',\r\n         shakeTowards: 'roots'\r\n        //  directed\r\n      },\r\n    },\r\n        // layout: { improvedLayout: false },\r\n        nodes: {\r\n            shapeProperties: {\r\n                interpolation: false\r\n            },\r\n            shape: \"box\",\r\n            font: \"18px Roboto black\",\r\n            labelHighlightBold: false,\r\n            size: 40,\r\n            borderWidth: 2,\r\n            color: {\r\n                background: \"#ffffff\",\r\n                border: \"#000000\",\r\n                highlight: {\r\n                    border: \"#000000\",\r\n                    background: \"#ffffff\"\r\n                }\r\n            },\r\n            // color: \"#ffffff\",\r\n        },\r\n        physics: {\r\n            enabled: false\r\n        }\r\n    });\r\n\r\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\r\n\r\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\r\n        event.preventDefault();\r\n        setContextMenu(\r\n            contextMenu === null\r\n                ? {\r\n                    mouseX: event.clientX - 2,\r\n                    mouseY: event.clientY - 4,\r\n                }\r\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\r\n                // Other native context menus might behave different.\r\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\r\n                null,\r\n        );\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setContextMenu(null);\r\n    };\r\n\r\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\r\n\r\n    const handleUserKeyPress = useCallback(event => {\r\n        if (event.keyCode === 17) {\r\n            if (!keyPressed) {\r\n                console.log('handleUserKeyPress')\r\n                props.network.current.addEdgeMode();\r\n                setKeyPressed(true);\r\n                console.log('-->' + keyPressed)\r\n            }\r\n        }\r\n    }, [keyPressed]);\r\n\r\n\r\n    const handleUserKeyUnPress = useCallback(event => {\r\n        if (event.keyCode === 17) {\r\n            if (keyPressed) {\r\n                console.log('handleUserKeyUnPress')\r\n                props.network.current.disableEditMode();\r\n                setKeyPressed(false);\r\n                console.log('-->' + keyPressed)\r\n            }\r\n        }\r\n    }, [keyPressed]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleUserKeyPress);\r\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\r\n        \r\n        console.log('--' + keyPressed)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\r\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\r\n        };\r\n    }, [handleUserKeyPress])\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (domNode.current) {\r\n            props.network.current = new Network(domNode.current, props.data, options);\r\n            console.log(\"HERE<-domNode.current\")\r\n        }\r\n\r\n        console.log(\"HERE<-\")\r\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\r\n\r\n        if (props.network.current) {\r\n            props.network.current.on('doubleClick', (params: any) => {\r\n                setKeyPressed(false)\r\n                props.onDoubleClick(params)\r\n            })\r\n            props.network.current.on('click', props.onClick1);\r\n            props.network.current.on('click', props.onClick2);\r\n            props.network.current.on('click', props.onClick3);\r\n            props.network.current.on('click', props.onClick4);\r\n            props.network.current.on('click', props.onClick4);\r\n\r\n            props.network.current.on('dragging', () => {\r\n                props.network.current.unselectAll();\r\n            });\r\n\r\n\r\n            props.network.current.on('controlNodeDragging', () => {\r\n                props.network.current.unselectAll();\r\n            });\r\n            \r\n        }\r\n\r\n\r\n    }, [domNode, props.data, props.network, options]);\r\n    // \r\n    const refContainer = () => {\r\n        return (\r\n            <div id={\"vnc\"}\r\n                style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n                ref={domNode}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        props.contextMenu === undefined\r\n            ?\r\n            refContainer()\r\n            :\r\n            <div onContextMenu={handleContextMenu}\r\n                style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n                {refContainer()}\r\n                <Menu\r\n                    open={contextMenu !== null}\r\n                    onClose={handleClose}\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={\r\n                        contextMenu !== null\r\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\r\n                            : undefined\r\n                    }\r\n                >\r\n                    {props.contextMenu(handleClose, handleContextMenu)}\r\n                </Menu>\r\n            </div>\r\n    );\r\n};","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\r\n\r\nexport type RemoveSaveRequest = {\r\n    id: string\r\n};\r\n\r\nexport default function ApiRemoveSave(request: RemoveSaveRequest, onAuthFailed: () => void): Promise<void> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/save/${request.id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: headers,\r\n        })\r\n            .then(response => {\r\n                if (response.status == 401) {\r\n                    onAuthFailed();\r\n                }\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n}","import {BASE_URL, getAuthHeaders} from \"./apiBase\";\r\n\r\nexport type UpdateSaveRequest = {\r\n    isShared?: boolean,\r\n    name?: string,\r\n};\r\n\r\nexport default function ApiUpdateSave(id: string, request: UpdateSaveRequest, onAuthFailed: () => void): Promise<void> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/save/${id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        const body = JSON.stringify(request);\r\n\r\n        fetch(url, {\r\n            method: \"PUT\",\r\n            headers: headers,\r\n            body: body,\r\n        })\r\n            .then(response => {\r\n                if (response.status == 401) {\r\n                    onAuthFailed();\r\n                }\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n}","import { UserModel } from \"../Models/UserModel\";\r\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\r\n\r\nexport type UpdateUserRequest = {\r\n    about: string,\r\n};\r\n\r\nexport default function ApiUpdateUser(request: UpdateUserRequest): Promise<UserModel> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/user`;\r\n\r\n        const headers = getAuthHeaders();\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        const body = JSON.stringify(request);\r\n\r\n        fetch(url, {\r\n            method: \"PUT\",\r\n            headers: headers,\r\n            body: body,\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import React, { FC, useEffect, useState } from \"react\";\r\nimport \"./MePage.css\";\r\nimport {\r\n    Container,\r\n    Stack,\r\n    Typography,\r\n    IconButton,\r\n    TableContainer,\r\n    Table, TableHead, TableRow, TableCell, TableBody, DialogContentText, DialogContent, Button,\r\n    InputAdornment,\r\n    OutlinedInput,\r\n    Alert,\r\n    Box,\r\n    TextField,\r\n    DialogActions,\r\n} from \"@mui/material\";\r\nimport { UserModel } from \"../../../Models/UserModel\";\r\nimport LaunchOutlinedIcon from '@mui/icons-material/LaunchOutlined';\r\nimport DeleteOutlineRoundedIcon from '@mui/icons-material/DeleteOutlineRounded';\r\nimport ApiGetSaves from \"../../../Api/apiGetSaves\";\r\nimport { SaveModel } from \"../../../Models/SaveModel\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport ApiRemoveSave, { RemoveSaveRequest } from \"../../../Api/apiRemoveSave\";\r\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\r\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiUpdateSave, { UpdateSaveRequest } from \"../../../Api/apiUpdateSave\";\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport ApiUpdateUser, { UpdateUserRequest } from \"../../../Api/apiUpdateUser\";\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n\r\ninterface MePageProps {\r\n    user: UserModel | null,\r\n    onAuthFailed: () => void,\r\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\r\n    setUser: (user: UserModel) => void,\r\n}\r\n\r\nconst MePage: FC<MePageProps> = ({ user, onAuthFailed, changeComputerType, setUser }) => {\r\n    const [saves, setSaves] = useState<SaveModel[]>([]);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [shareDialogOpen, setShareDialogOpen] = useState<boolean>(false);\r\n    const [saveToRemoveId, setSaveToRemoveId] = useState<string | null>(null);\r\n    const [editAccountMode, setEditAccountMode] = useState<boolean>(false);\r\n    const [editedAbout, setEditedAbout] = useState<string>(user?.about ?? \"\");\r\n    const [editSaveDialogOpen, setEditSaveDialogOpen] = useState<boolean>(false);\r\n    const [saveToEditId, setSaveToEditId] = useState<string | null>(null);\r\n    const [editedSaveName, setEditedSaveName] = useState<string | null>(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\r\n\r\n    const onRemoveButtonClicked = (id: string) => {\r\n        setSaveToRemoveId(id);\r\n        setOpen(true);\r\n    }\r\n\r\n    const onRemoveConfirmClicked = async () => {\r\n        if (saveToRemoveId) {\r\n            await removeSave(saveToRemoveId);\r\n        }\r\n        await updateSaves();\r\n        closeDialog();\r\n    }\r\n\r\n    const onRemoveCancelClicked = () => {\r\n        closeDialog();\r\n    }\r\n\r\n    const onOpenClicked = async (id: string, name: string) => {\r\n        const save = await cloudSavesManager.getSave({ id: id, name: name });\r\n\r\n        if (save) {\r\n            changeComputerType(save.save.type, save.save.graph);\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    const onShareClicked = (id: string, isShared: boolean) => {\r\n        setSaveShareState(id, !isShared).then(updateSaves);\r\n        if (!isShared) {\r\n            setShareDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const onCopyShareLinkClicked = () => {\r\n        navigator.clipboard.writeText(`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user?.id}`);\r\n    }\r\n\r\n    const onEditAccountClicked = async () => {\r\n        if (!editAccountMode) {\r\n            setEditAccountMode(true);\r\n        } else {\r\n            await saveAccountChanges();\r\n            setEditAccountMode(false);\r\n        }\r\n    }\r\n\r\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setEditedAbout(value);\r\n    }\r\n\r\n    const onEditSaveClicked = (id: string, name: string) => {\r\n        setSaveToEditId(id);\r\n        setEditedSaveName(name);\r\n        setEditSaveDialogOpen(true);\r\n    }\r\n\r\n    const onEditedSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setEditedSaveName(value);\r\n    }\r\n\r\n    const onSaveEditConfirmed = () => {\r\n        const request: UpdateSaveRequest = {\r\n            name: editedSaveName!,\r\n        };\r\n\r\n        ApiUpdateSave(saveToEditId!, request, () => {}).then(async () =>{ await updateSaves(); closeEditSaveDialog()});\r\n    }\r\n\r\n    const saveAccountChanges = async () => {\r\n        if (editedAbout != user?.about) {\r\n            var request: UpdateUserRequest = {\r\n                about: editedAbout,\r\n            }\r\n\r\n            ApiUpdateUser(request).then(updatedUser => {\r\n                setUser(updatedUser);\r\n            });\r\n        }\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const closeShareDialog = () => {\r\n        setShareDialogOpen(false);\r\n    }\r\n\r\n    const closeEditSaveDialog = () => {\r\n        setEditSaveDialogOpen(false);\r\n    }\r\n\r\n    const updateSaves = async () => {\r\n        await ApiGetSaves(onAuthFailed)\r\n            .then(saves => setSaves(saves))\r\n            .catch(() => setSaves([]));\r\n    }\r\n\r\n    const removeSave = async (id: string) => {\r\n        const request: RemoveSaveRequest = {\r\n            id: id,\r\n        };\r\n\r\n        await ApiRemoveSave(request, onAuthFailed);\r\n    }\r\n\r\n    const setSaveShareState = async (id: string, shareState: boolean) => {\r\n        const request: UpdateSaveRequest = {\r\n            isShared: shareState,\r\n        }\r\n\r\n        await ApiUpdateSave(id, request, onAuthFailed);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateSaves();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setEditedAbout(user?.about ?? \"\");\r\n    }, [user])\r\n\r\n    return (\r\n        user &&\r\n        <div className=\"me-page\">\r\n            <Dialog open={open} onClose={closeDialog}>\r\n                <DialogTitle>Удаление сохранения</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Вы уверены, что хотите удалить выбранное сохранение?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <Button onClick={() => onRemoveConfirmClicked()}>Удалить</Button>\r\n                    <Button onClick={() => onRemoveCancelClicked()}>Не удалять</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog open={shareDialogOpen} onClose={closeShareDialog} maxWidth=\"md\" fullWidth>\r\n                <DialogTitle>Настройки доступа</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Доступно всем пользователям по ссылке. Закрыть доступ можно в профиле пользователя.\r\n                    </DialogContentText>\r\n                    <OutlinedInput\r\n                        sx={{ mt: 2 }}\r\n                        readOnly\r\n                        fullWidth\r\n                        value={`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user.id}`}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={onCopyShareLinkClicked} edge=\"end\">\r\n                                    <ContentCopyOutlinedIcon />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <Button onClick={() => closeShareDialog()}>Ок</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog open={editSaveDialogOpen} onClose={closeEditSaveDialog} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>Редактирование сохранения</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField sx={{ mt: 1 }} label=\"Название\" fullWidth size=\"small\" value={editedSaveName} onChange={onEditedSaveNameChanged}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onSaveEditConfirmed()}>Сохранить</Button>\r\n                    <Button onClick={() => closeEditSaveDialog()}>Отменить</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Container>\r\n                <Stack spacing={4}>\r\n                    <Stack spacing={1}>\r\n                        <Typography variant=\"h5\">Аккаунт</Typography>\r\n                        <Stack>\r\n                            <Typography variant=\"body1\">Имя пользователя: {user.userName}</Typography>\r\n                            {\r\n                                !editAccountMode &&\r\n                                <Typography variant=\"body1\">О себе: {user.about}</Typography>\r\n                            }\r\n                            {\r\n                                editAccountMode &&\r\n                                <TextField sx={{ mt: 1 }} size=\"small\" label=\"О себе\" value={editedAbout} onChange={onAboutChanged} />\r\n                            }\r\n                        </Stack>\r\n                        <Box>\r\n                            <Button size=\"small\" onClick={() => onEditAccountClicked()}>\r\n                                {editAccountMode ? \"Сохранить\" : \"Редактировать\"}\r\n                            </Button>\r\n                        </Box>\r\n                    </Stack>\r\n                    <Stack spacing={1}>\r\n                        <Typography variant=\"h5\">Сохранения</Typography>\r\n                        {\r\n                            saves.length > 0 &&\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Название</TableCell>\r\n                                            <TableCell>Время создания</TableCell>\r\n                                            <TableCell>Время изменения</TableCell>\r\n                                            <TableCell>Поделиться</TableCell>\r\n                                            <TableCell>Открыть</TableCell>\r\n                                            <TableCell>Редактировать</TableCell>\r\n                                            <TableCell>Удалить</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            saves.map(save => (\r\n                                                <TableRow key={save.id}>\r\n                                                    <TableCell>\r\n                                                        {save.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Button size=\"small\" onClick={() => onShareClicked(save.id, save.isShared)}>\r\n                                                            {save.isShared ? \"Закрыть доступ\" : \"Поделиться\"}\r\n                                                        </Button>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <IconButton onClick={() => onOpenClicked(save.id, save.name)}>\r\n                                                            <LaunchOutlinedIcon />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <IconButton onClick={() => onEditSaveClicked(save.id, save.name)}>\r\n                                                            <EditOutlinedIcon />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <IconButton onClick={() => onRemoveButtonClicked(save.id)}>\r\n                                                            <DeleteOutlineRoundedIcon />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        }\r\n                        {\r\n                            saves.length === 0 &&\r\n                            <Alert severity=\"warning\" icon={false}>\r\n                                Сохранённых вычислетелей ещё нет\r\n                            </Alert>\r\n                        }\r\n                    </Stack>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MePage;","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\r\nimport {UserModel} from \"../Models/UserModel\";\r\nimport {getCookie} from \"../utils\";\r\n\r\nexport default function ApiGetUserById(id: string): Promise<UserModel> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/user/${id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n        const params = getParams(headers);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\r\nimport { SaveModel } from \"../Models/SaveModel\";\r\n\r\nexport default function ApiGetUserSaves(id: string): Promise<SaveModel[]> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/save/user/${id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n        const params = getParams(headers);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import { SaveModel } from \"../Models/SaveModel\";\r\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\r\n\r\n\r\nexport default function ApiCloneSave(id: string): Promise<SaveModel> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + `/save/clone/${id}`;\r\n\r\n        const headers = getAuthHeaders();\r\n\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ApiGetUserById from \"../../../Api/apiGetUserById\";\r\nimport ApiGetUserSaves from \"../../../Api/apiGetUserSaves\";\r\nimport { UserModel } from \"../../../Models/UserModel\";\r\nimport { SaveModel } from \"../../../Models/SaveModel\";\r\nimport \"./UserPage.css\";\r\nimport { Alert, Button, Container, Dialog, DialogContent, DialogContentText, DialogTitle, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\r\nimport ApiCloneSave from \"../../../Api/apiCloneSave\";\r\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\r\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\r\n\r\n\r\n\r\ninterface UserPageProps {\r\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void\r\n}\r\n\r\n\r\nconst UserPage: FC<UserPageProps> = ({ changeComputerType }) => {\r\n    const [user, setUser] = useState<UserModel | null>(null);\r\n    const [saves, setSaves] = useState<SaveModel[]>([]);\r\n    const [cloneDialogOpen, setCloneDialogOpen] = useState<boolean>(false);\r\n    const [saveToCloneId, setSaveToCloneId] = useState<string | null>(null);\r\n    const [clonedSave, setClonedSave] = useState<SaveModel | null>(null);\r\n\r\n    const { userId } = useParams();\r\n\r\n    const cloudSavesManager = new CloudSavesManager(() => { });\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const onCloneClicked = (id: string) => {\r\n        setSaveToCloneId(id);\r\n        setCloneDialogOpen(true);\r\n    }\r\n\r\n    const onCloneDialogClose = () => {\r\n        setCloneDialogOpen(false);\r\n    }\r\n\r\n    const onCloneConfirmed = () => {\r\n        cloneSave(saveToCloneId!);\r\n    }\r\n\r\n    const getUser = async () => {\r\n        await ApiGetUserById(userId!)\r\n            .then(user => { console.log(user); setUser(user) });\r\n    }\r\n\r\n    const getSaves = async () => {\r\n        await ApiGetUserSaves(userId!)\r\n            .then(saves => { console.log(saves); setSaves(saves) });\r\n    }\r\n\r\n    const cloneSave = async (id: string) => {\r\n        await ApiCloneSave(id).then(async (response) => {\r\n            const save = await cloudSavesManager.getSave({ id: response.id, name: response.name });\r\n\r\n            if (save) {\r\n                changeComputerType(save.save.type, save.save.graph);\r\n                navigate(\"/\");\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => { getUser(); getSaves(); }, []);\r\n\r\n    return (\r\n        user &&\r\n        <div className=\"me-page\">\r\n            <Dialog open={cloneDialogOpen} onClose={onCloneDialogClose}>\r\n                <DialogTitle>Клонирование сохранения</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Копия сохранения появится в списке сохранений. Вы сможете изменять его независимо. Хотите продолжить?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <Button onClick={() => onCloneConfirmed()}>Да, клонировать</Button>\r\n                    <Button onClick={() => onCloneDialogClose()}>Нет</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Container>\r\n                <Stack spacing={4}>\r\n                    <Stack spacing={1}>\r\n                        <Typography variant=\"h5\">Аккаунт</Typography>\r\n                        <Stack>\r\n                            <Typography variant=\"body1\">О себе: {user.about}</Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack spacing={1}>\r\n                        <Typography variant=\"h5\">Сохранения</Typography>\r\n                        {\r\n                            saves.length > 0 &&\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Название</TableCell>\r\n                                            <TableCell>Время создания</TableCell>\r\n                                            <TableCell>Время изменения</TableCell>\r\n                                            <TableCell>Клонирование</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            saves.map(save => (\r\n                                                <TableRow key={save.id}>\r\n                                                    <TableCell>\r\n                                                        {save.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Button size=\"small\" onClick={() => onCloneClicked(save.id)}>\r\n                                                            Клонировать себе\r\n                                                        </Button>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        }\r\n                        {\r\n                            saves.length === 0 &&\r\n                            <Alert severity=\"warning\" icon={false}>\r\n                                Пользователь ещё не поделился своими сохранениями\r\n                            </Alert>\r\n                        }\r\n                    </Stack>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserPage;","import React, { ReactNode } from 'react';\r\nimport \"./App.css\"\r\nimport {\r\n    ComputerType,\r\n    edge,\r\n    graph,\r\n    histNode,\r\n    node\r\n} from \"./react-graph-vis-types\";\r\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\r\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\r\nimport {\r\n    computersInfo, decorateGraph, elementsToGraph, getNodeNamePrefix, getTransitionsTitles,\r\n    graphToElements, transitionsToLabel\r\n} from \"./utils\";\r\nimport RunControl from \"./Components/RunControl/RunControl\";\r\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\r\nimport {Route, Routes, HashRouter} from \"react-router-dom\";\r\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\r\nimport RegisterPage from \"./Components/Pages/RegisterPage/RegisterPage\";\r\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\r\nimport { TransitionParams } from \"./Logic/IGraphTypes\";\r\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\r\nimport RegisteredPage from \"./Components/Pages/RegisteredPage/RegisteredPage\";\r\nimport { VisNetwork } from './VisNetwork';\r\nimport {\r\n    DataSet,\r\n    Network,\r\n    Options,\r\n    Data,\r\n} from \"vis-network/standalone/esm/vis-network\";\r\nimport {Output} from './Logic/Types';\r\nimport {NonDetermenisticModal, NonMinimizableModal} from './ErrorModal';\r\nimport {TreeHistory} from './TreeHistory';\r\nimport MePage from \"./Components/Pages/MePage/MePage\";\r\nimport {UserModel} from \"./Models/UserModel\";\r\nimport ApiGetUser from \"./Api/apiGetUser\";\r\nimport UserPage from './Components/Pages/UserPage/UserPage';\r\n\r\n// import {ContextMenu, MenuItem as CotextMenuItem, ContextMenuTrigger} from \"react-contextmenu\";\r\n\r\ninterface appProps {\r\n}\r\n\r\nexport type Elements = {\r\n    nodes: DataSet<node, \"id\">,\r\n    edges: DataSet<edge, \"id\">\r\n}\r\n\r\nexport type HistElements = {\r\n    nodes: DataSet<histNode, \"id\">,\r\n    edges: DataSet<edge, \"id\">\r\n}\r\n\r\ninterface appState {\r\n    computerType: null | ComputerType,\r\n    selectedNode: node | null,\r\n    selectedEdge: edge | null,\r\n    inEdgeMode: boolean,\r\n    elements: Elements,\r\n    treeElems: HistElements,\r\n    options: any,\r\n    initiallyStabilized: boolean,\r\n    popout: ReactNode | null,\r\n    savePopoutOpen: boolean,\r\n    welcomePopoutOpen: boolean,\r\n    isLogin: boolean,\r\n    mem: string[] | undefined,\r\n    ptr: number | undefined,\r\n    wasComputerResetted: boolean,\r\n    byEmptyStack: boolean,\r\n    errIsNonDetermenistic: boolean,\r\n    errIsNonMinimizable: boolean,\r\n    showTree: boolean,\r\n    History: (() => JSX.Element),\r\n    user: UserModel | null,\r\n}\r\n\r\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\r\n\r\nexport const computerAction = {\r\n    init: (() => { }),\r\n    nfaToDfa: (() => { }),\r\n    minimizeDfa: (() => { }),\r\n    mooreToMealy: (() => { }),\r\n    mealyToMoore: (() => { })\r\n}\r\n\r\nexport const controlAction = {\r\n    changerByStack: (() => { }),\r\n    run: (() => { }),\r\n    step: (() => { }),\r\n    reset: (() => { }),\r\n}\r\n\r\n\r\n\r\ninterface RibbonProps {\r\n    computerType: null | ComputerType,\r\n    wasComputerResetted: boolean,\r\n    mem: string[] | undefined,\r\n    ptr: number | undefined\r\n    memRef: React.RefObject<HTMLDivElement>\r\n}\r\n\r\nexport const Ribbon = (props: RibbonProps) => {\r\n    return (\r\n        props.computerType === \"tm\" && props.wasComputerResetted\r\n            ?\r\n            <div className=\"app__mem_ribbon\">\r\n                {\r\n                    props.mem?.map((value, index) =>\r\n                        <div\r\n                            className=\"app__mem_cell\"\r\n                            style={{ border: `${index === props.ptr ? \"#0041d0\" : \"#000000\"} 2px solid` }}\r\n                        >\r\n                            {Math.abs(Math.abs(index) - Math.abs(props.ptr!)) <= 5\r\n                                ? <div ref={props.memRef} />\r\n                                : <div />\r\n                            }\r\n                            {value}\r\n                            {props.memRef?.current?.scrollIntoView({ behavior: 'smooth' })}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            : <div />\r\n    )\r\n}\r\n\r\nclass App extends React.Component<appProps, appState> {\r\n\r\n    memRef = React.createRef<HTMLDivElement>();\r\n    network = React.createRef<Network | null>();\r\n    networkTST = React.createRef<Network | null>();\r\n\r\n    constructor(props: appProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            computerType: null,\r\n\r\n            selectedNode: null,\r\n            selectedEdge: null,\r\n            inEdgeMode: false,\r\n            elements: { nodes: new DataSet<node>(), edges: new DataSet<edge>() },\r\n            treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() },\r\n            options: {\r\n                edges: {\r\n                    smooth: {\r\n                        enabled: true,\r\n                        type: \"discrete\",\r\n                        roundness: 0.5\r\n                    },\r\n                    length: 200\r\n                },\r\n                nodes: {\r\n                    shape: \"box\",\r\n                    font: \"18px Roboto black\",\r\n                    labelHighlightBold: false,\r\n                    widthConstraint: 40,\r\n                    color: \"red\",\r\n                    heightConstraint: 40\r\n                },\r\n                physics: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            initiallyStabilized: false,\r\n            popout: null,\r\n            savePopoutOpen: false,\r\n            welcomePopoutOpen: false,\r\n            isLogin: true,\r\n            mem: undefined,\r\n            ptr: undefined,\r\n            wasComputerResetted: false,\r\n            byEmptyStack: false,\r\n\r\n            errIsNonDetermenistic: false,\r\n            errIsNonMinimizable: false,\r\n\r\n            showTree: false,\r\n            History: () => ( <div></div> ),\r\n            user: null\r\n        };\r\n    }\r\n\r\n    setIsNonDetermenistic = (v: boolean) => this.setState({ errIsNonDetermenistic: v })\r\n\r\n    setIsNonMinimizable = (v: boolean) => this.setState({ errIsNonMinimizable: v })\r\n\r\n    async componentDidMount() {\r\n        await this.updateCurrentUser();\r\n\r\n        this.updateGraph();\r\n        this.subscribeToShortcuts();\r\n        this.openWelcomePopout();\r\n    }\r\n\r\n    lastNodeId = 0;\r\n\r\n    subscribeToShortcuts = () => {\r\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n            if (event.key === \"s\" && event.ctrlKey) {\r\n                event.preventDefault();\r\n                this.openSavePopout();\r\n            }\r\n        })\r\n    }\r\n\r\n    openSavePopout = () => {\r\n        this.setState({ savePopoutOpen: true });\r\n    }\r\n\r\n    closeSavePopout = () => {\r\n        this.setState({ savePopoutOpen: false });\r\n    }\r\n\r\n    openWelcomePopout = () => {\r\n        this.setState({ welcomePopoutOpen: true });\r\n    }\r\n\r\n    closeWelcomePopout = () => {\r\n        this.setState({ welcomePopoutOpen: false });\r\n    }\r\n\r\n    logout = () => {\r\n        document.cookie = `jwt=\"\"; path=/; secure; max-age=-1`;\r\n        this.setState({isLogin: false});\r\n        this.updateCurrentUser();\r\n    }\r\n\r\n    updateCurrentUser = async () => {\r\n        await ApiGetUser()\r\n            .then(user => this.setState({user: user}))\r\n            .catch(() => this.setState({user: null}));\r\n    }\r\n\r\n    setUser = (user: UserModel) => {\r\n        this.setState({ user: user })\r\n    }\r\n\r\n\r\n    updateGraph = (): void => {\r\n        decorateGraph(this.state.elements, this.state.computerType)\r\n    }\r\n\r\n    changeNodeLabel = (id: number, label: string): void => {\r\n        this.state.elements.nodes.forEach((node) => {\r\n            if (node.id === id) {\r\n                const lableTokens =\r\n                    label\r\n                        .split('')\r\n                        .filter(x => x !== \" \" && x !== \"\\n\")\r\n                        .join('')\r\n                        .split('|')\r\n                const output = lableTokens[1] !== undefined ? lableTokens[1] : \"\"\r\n                this.state.elements.nodes.update({\r\n                    id: node.id,\r\n                    label: label,\r\n                    output: output\r\n                })\r\n            }\r\n        })\r\n        this.updateGraph()\r\n    }\r\n\r\n\r\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\r\n        this.state.elements.nodes.forEach((node) => {\r\n            if (node.id === id) {\r\n                this.state.elements.nodes.update({\r\n                    id: node.id,\r\n                    isAdmit: isAdmit\r\n                })\r\n            }\r\n        })\r\n        this.updateGraph()\r\n    }\r\n\r\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\r\n        this.state.elements.nodes.forEach((node) => {\r\n            if (node.id === id) {\r\n                this.state.elements.nodes.update({\r\n                    id: node.id,\r\n                    isInitial: isInitial\r\n                })\r\n            }\r\n        })\r\n        this.updateGraph()\r\n    }\r\n\r\n\r\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\r\n        this.state.elements.nodes.forEach((node) => {\r\n            if (node.isCurrent) {\r\n                this.state.elements.nodes.update({\r\n                    id: node.id,\r\n                    isCurrent: false\r\n                })\r\n            }\r\n        })\r\n        this.state.elements.nodes.forEach((node) => {\r\n            if (ids.includes(node.id)) {\r\n                this.state.elements.nodes.update({\r\n                    id: node.id,\r\n                    isCurrent: isCurrent\r\n                })\r\n            }\r\n        })\r\n        this.updateGraph()\r\n    }\r\n\r\n    createNode = (e: { pointer: { canvas: { x: any; y: any; }; }; }) => {\r\n        this.lastNodeId++;\r\n        const node = {\r\n            id: this.lastNodeId,\r\n            label: 'S' + (this.lastNodeId),\r\n            x: e.pointer.canvas.x,\r\n            y: e.pointer.canvas.y,\r\n            isAdmit: false,\r\n            isInitial: false,\r\n            isCurrent: false,\r\n        }\r\n        this.state.elements.nodes.add(node);\r\n    }\r\n\r\n    lastHistNodeId = 0\r\n\r\n    createHistNode = (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => {\r\n        this.lastHistNodeId++;\r\n\r\n\r\n        const border = isInitial ? \"#0041d0\" : isAdmit ? \"#ff0072\" : \"#000000\"\r\n        const background = isCurrent ? \"#ffff55\" : \"#ffffff\";\r\n        const borderWidth = {\r\n            default: 1.5,\r\n            primary: 2,\r\n            highlight: 4\r\n        };\r\n\r\n        const node: histNode = {\r\n            id: this.lastHistNodeId,\r\n            idd,\r\n            label,\r\n            isAdmit,\r\n            isInitial,\r\n            isCurrent,\r\n            color: {\r\n                background: background,\r\n                border: border,\r\n                highlight: {\r\n                    border: border,\r\n                    background: background\r\n                }\r\n            }\r\n        }\r\n\r\n        this.state.treeElems.nodes.add(node);\r\n    }\r\n\r\n    createHistEdge = (from: number, to: number, by: any) => {\r\n        const transitions = new Set([[{ title: by }]])\r\n\r\n        this.state.treeElems.edges.add({\r\n            from: from,\r\n            to: to,\r\n            transitions: transitions,\r\n            label: by\r\n        })\r\n    }\r\n\r\n    historyEndRef = React.createRef<HTMLDivElement>();\r\n\r\n    getLastHistNodeId = () => this.lastHistNodeId\r\n\r\n    resetHistTree = () => {\r\n        for (let i = 0; i <= this.lastHistNodeId; i++) {\r\n            this.state.treeElems.nodes.remove(i)\r\n        }\r\n        this.state.treeElems.edges.forEach((e) => this.state.treeElems.edges.remove(e.id!))\r\n        this.lastHistNodeId = 0;\r\n    }\r\n\r\n    selectNode = (e: { nodes: number[]; }): void => {\r\n        const nodesIDs: number[] = e.nodes;\r\n        const selectedNodes = this.state.elements.nodes.get(nodesIDs);\r\n        this.setState({ selectedNode: selectedNodes[0] });\r\n    }\r\n\r\n\r\n    deselectNode = (e: { nodes: number[]; }): void => {\r\n        const nodesIDs: number[] = e.nodes;\r\n        if (nodesIDs.length === 0) {\r\n            this.setState({ selectedNode: null });\r\n        }\r\n    }\r\n\r\n    deleteNode = (id: number): void => {\r\n        this.state.elements.nodes.remove(id)\r\n\r\n        let rmEdges: string[] = []\r\n        this.state.elements.edges.forEach((edge) => {\r\n            if (edge.from === id || edge.to === id) {\r\n                rmEdges.push(edge.id!)\r\n            }\r\n        })\r\n        this.state.elements.edges.remove(rmEdges)\r\n    }\r\n\r\n    selectEdge = (e: { edges: any; }): void => {\r\n        const edgesIDs: number[] = e.edges;\r\n        const selectedEdges = this.state.elements.edges.get(edgesIDs);\r\n        this.setState({ selectedEdge: selectedEdges[0] });\r\n        console.log('click1  = selectEdge')\r\n    }\r\n\r\n    deselectEdge = (e: { edges: number[]; }): void => {\r\n        const edgesIDs: number[] = e.edges;\r\n        if (edgesIDs.length === 0) {\r\n            this.setState({ selectedEdge: null });\r\n        }\r\n    }\r\n\r\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\r\n        this.state.elements.edges.update({\r\n            id: id,\r\n            label: transitionsToLabel(transitions, this.state.computerType),\r\n            transitions: transitions\r\n        })\r\n    }\r\n\r\n    deleteEdge = (id: string): void => {\r\n        this.state.elements.edges.remove(id)\r\n    }\r\n\r\n    updMem = (mem: string[], ptr: number): void => {\r\n        this.setState({ mem: mem, ptr: ptr });\r\n    }\r\n\r\n    NFAContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={computerAction.nfaToDfa}\r\n                    >\r\n                        {\"НКА->ДКА\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    treeVisible = () => {\r\n        this.setState({ showTree: !this.state.showTree})\r\n        return !this.state.showTree\r\n    }\r\n\r\n    treeContextInfo = () => (this.state.showTree ? \"Закрыть\" : \"Открыть\") + \" дерево вычислений\"\r\n\r\n    DFAContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={computerAction.minimizeDfa}\r\n                    >\r\n                        {\"Минимизровать\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    MealyContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={computerAction.mealyToMoore}\r\n                    >\r\n                        {\"Мур\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    MooreContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={computerAction.mooreToMealy}\r\n                    >\r\n                        {\"Мили\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    PDAContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.changerByStack}\r\n\r\n                    >\r\n                        {this.state.byEmptyStack ? \"По стеку\" : \"По состоянию\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AnotherContextMenu = (handleContextMenu: any, handleClose: any) => {\r\n        return (\r\n            <div onContextMenu={handleContextMenu}>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.step}\r\n                    >\r\n                        {\"Шаг\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.run}\r\n                    >\r\n                        {\"Запуск\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={controlAction.reset}\r\n                    >\r\n                        {\"Сброс\"}\r\n                    </button>\r\n                </div>\r\n                <div onClick={handleClose}>\r\n                    <button\r\n                        className={\"button-context-menu\"}\r\n                        onClick={this.treeVisible}\r\n                    >\r\n                        {this.treeContextInfo()}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ContextMenu = (computerType: null | ComputerType) => {\r\n        switch (computerType) {\r\n            case \"nfa\":\r\n            case \"nfa-eps\": {\r\n                return this.NFAContextMenu\r\n            }\r\n            case \"dfa\": {\r\n                return this.DFAContextMenu\r\n            }\r\n            case \"mealy\":\r\n            case \"dmealy\": {\r\n                return this.MealyContextMenu\r\n            }\r\n            case \"moore\":\r\n            case \"dmoore\": {\r\n                return this.MooreContextMenu\r\n            }\r\n            case \"pda\":\r\n            case \"dpda\": {\r\n                return this.PDAContextMenu\r\n            }\r\n            default: {\r\n                return this.AnotherContextMenu\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route path=\"/login\" element={\r\n                        <LoginPage/>\r\n                    }/>\r\n                    <Route path=\"/register\" element={\r\n                        <RegisterPage/>\r\n                    }/>\r\n                    <Route path=\"/registered\" element={\r\n                        <RegisteredPage/>\r\n                    }/>\r\n                    <Route path=\"/success-login\" element={\r\n                        <SuccessLoginPage updateCurrentUser={this.updateCurrentUser}/>\r\n                    }/>\r\n                    <Route path=\"/me\" element={\r\n                        <MePage user={this.state.user}\r\n                                onAuthFailed={this.logout}\r\n                                changeComputerType={(computerType, graph: graph | null) => {\r\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\r\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\r\n\r\n                                    this.lastNodeId = defaultGraph.nodes.length;\r\n                                    this.setState({\r\n                                            computerType: computerType,\r\n                                            elements: graphToElements(defaultGraph)\r\n                                        }\r\n                                        , () => this.updateGraph()\r\n                                    );\r\n                                }\r\n                                }\r\n                                setUser={this.setUser}\r\n                        />\r\n                    }/>\r\n                    <Route path=\"/user/:userId\" element={\r\n                        <UserPage \r\n                            changeComputerType={\r\n                                (computerType, graph: graph | null) => {\r\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\r\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\r\n\r\n                                    this.lastNodeId = defaultGraph.nodes.length;\r\n                                    this.setState({\r\n                                            computerType: computerType,\r\n                                            elements: graphToElements(defaultGraph)\r\n                                        }\r\n                                        , () => this.updateGraph()\r\n                                    );\r\n                                }\r\n                            }\r\n                        />\r\n                    }/>\r\n                    <Route path=\"/\" element={\r\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\r\n                            <div className=\"app\">\r\n                                <WelcomePopout\r\n                                    open={this.state.welcomePopoutOpen}\r\n                                    onClose={this.closeWelcomePopout}\r\n                                    onAuthFailed={this.logout}\r\n                                    changeComputerType={(computerType, graph: graph | null) => {\r\n\r\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\r\n\r\n                                        console.log(defaultGraph);\r\n                                        console.log(defaultGraph[\"nodes\"]);\r\n                                        graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\r\n\r\n                                        this.lastNodeId = defaultGraph.nodes.length;\r\n                                        this.setState({\r\n                                                computerType: computerType,\r\n                                                elements: graphToElements(defaultGraph)\r\n                                            }\r\n                                            , () => this.updateGraph()\r\n                                        );\r\n                                    }}\r\n                                />\r\n\r\n                                {this.state.popout}\r\n\r\n                                <SavingPopout open={this.state.savePopoutOpen}\r\n                                              onClose={this.closeSavePopout}\r\n                                              isLogin={this.state.isLogin}\r\n                                              onAuthFailed={this.logout}\r\n                                              graph={elementsToGraph(this.state.elements)}\r\n                                              computerType={this.state.computerType!}/>\r\n                                <div className=\"history-container\">\r\n                                    {this.state.History()}\r\n                                </div>\r\n                                <div className=\"hint-container\">\r\n                                    <Paper className=\"hint\" variant=\"outlined\">\r\n                                        Ctrl+S — сохранить автомат\r\n                                    </Paper>\r\n                                    <Paper className=\"hint\" variant=\"outlined\">\r\n                                        Удерживайте Ctrl чтобы создать ребро\r\n                                    </Paper>\r\n                                    <Paper className=\"hint\" variant=\"outlined\">\r\n                                        Двойное нажатие чтобы создать вершину\r\n                                    </Paper>\r\n                                    <Paper className=\"hint\" variant=\"outlined\">\r\n                                        ПКМ для открытия контекстного меню\r\n                                    </Paper>\r\n                                </div>\r\n                                <NonDetermenisticModal\r\n                                    isNonDetermenistic={this.state.errIsNonDetermenistic}\r\n                                    setIsNonDetermenistic={this.setIsNonDetermenistic}\r\n                                />\r\n                                <NonMinimizableModal\r\n                                    isNonMinimizable={this.state.errIsNonMinimizable}\r\n                                    setIsNonMinimizable={this.setIsNonMinimizable}\r\n                                />\r\n                                <Ribbon\r\n                                    computerType={this.state.computerType}\r\n                                    wasComputerResetted={this.state.wasComputerResetted}\r\n                                    mem={this.state.mem}\r\n                                    ptr={this.state.ptr}\r\n                                    memRef={this.memRef}\r\n                                />\r\n\r\n                                <AppHeader\r\n                                    onMenuButtonClicked={this.openWelcomePopout}\r\n                                    onSaveButtonClicked={this.openSavePopout}\r\n                                    onLogoutButtonClicked={this.logout}\r\n                                    isLogin={this.state.isLogin}\r\n                                />\r\n\r\n\r\n                                <div className=\"field__container\">\r\n                                    <VisNetwork\r\n                                        nodes={this.state.elements.nodes}\r\n                                        edges={this.state.elements.edges}\r\n                                        data={this.state.elements}\r\n                                        onDoubleClick={this.createNode}\r\n                                        onClick1={this.selectEdge}\r\n                                        onClick2={this.selectNode}\r\n                                        onClick3={this.deselectNode}\r\n                                        onClick4={this.deselectEdge}\r\n                                        network={this.network}\r\n                                        contextMenu={this.ContextMenu(this.state.computerType)}\r\n                                    />\r\n                                </div>\r\n\r\n                                {this.state.showTree ?\r\n                                    <div className=\"eval-tree\">\r\n                                        <TreeHistory\r\n                                            nodes={this.state.treeElems.nodes}\r\n                                            edges={this.state.treeElems.edges}\r\n                                            data={this.state.treeElems}\r\n                                            onDoubleClick={this.createNode}\r\n                                            onClick1={this.selectEdge}\r\n                                            onClick2={this.selectNode}\r\n                                            onClick3={this.deselectNode}\r\n                                            onClick4={this.deselectEdge}\r\n                                            network={this.networkTST}\r\n                                            contextMenu={this.ContextMenu(this.state.computerType)}\r\n                                        />\r\n                                    </div>\r\n                                    : <div />}\r\n                                <div className=\"app__right-menu\">\r\n                                    <NodeControl\r\n                                        node={this.state.selectedNode}\r\n                                        changeNodeLabel={this.changeNodeLabel}\r\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\r\n                                        changeStateIsInitial={this.changeStateIsInitial}\r\n                                        deleteNode={this.deleteNode}\r\n                                        reinitComputer={computerAction.init}\r\n\r\n                                    />\r\n                                    <EdgeControl\r\n                                        edge={this.state.selectedEdge}\r\n                                        changeEdgeTransitions={this.changeEdgeTransition}\r\n                                        deleteEdge={this.deleteEdge}\r\n                                        computerType={this.state.computerType}\r\n                                        reinitComputer={computerAction.init}\r\n                                    />\r\n\r\n                                    <RunControl\r\n                                        updMem={this.updMem}\r\n                                        elements={this.state.elements}\r\n                                        treeElems={this.state.treeElems}\r\n                                        createHistNode={this.createHistNode}\r\n                                        byEmptyStack={this.state.byEmptyStack}\r\n                                        createHistEdge={this.createHistEdge}\r\n                                        getLastHistNodeId={this.getLastHistNodeId}\r\n                                        resetHistTree={this.resetHistTree}\r\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\r\n                                        network={this.network}\r\n                                        changerStack={controlAction.changerByStack}\r\n                                        setInit={(f: () => void) => computerAction.init = f}\r\n                                        setNfaToDfa={(f: () => void) => computerAction.nfaToDfa = f}\r\n                                        setMinimizeDfa={(f: () => void) => computerAction.minimizeDfa = f}\r\n                                        setMooreToMealy={(f: () => void) => computerAction.mooreToMealy = f}\r\n                                        setMealyToMoore={(f: () => void) => computerAction.mealyToMoore = f}\r\n                                        updateElements={(elements: Elements) => this.setState({ elements: elements }, () => this.updateGraph())}\r\n                                        setComputerType={(type: null | ComputerType) => this.setState({ computerType: type })}\r\n                                        setResettedStatus={(status: boolean) => this.setState({ wasComputerResetted: status })}\r\n                                        setByEmptyStack={(byEmptyStack: boolean) => this.setState({ byEmptyStack: byEmptyStack })}\r\n                                        setChangerByStack={(f: () => void) => controlAction.changerByStack = f}\r\n                                        setRun={(f: () => void) => controlAction.run = f}\r\n                                        setStep={(f: () => void) => controlAction.step = f}\r\n                                        setReset={(f: () => void) => controlAction.reset = f}\r\n                                        setHistory={(jsx: () => JSX.Element) => this.setState({ History: jsx },\r\n                                            () => this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' }) )}\r\n                                        historyEndRef={this.historyEndRef}\r\n                                        setIsNonDetermenistic={this.setIsNonDetermenistic}\r\n                                        setIsNonMinimizable={this.setIsNonMinimizable}\r\n                                        treeContextInfo={this.treeContextInfo}\r\n                                        treeVisible={this.treeVisible}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </ComputerTypeContext.Provider>\r\n                    }/>\r\n                </Routes>\r\n            </HashRouter>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import {BASE_URL, getParams} from \"./apiBase\";\r\nimport {UserModel} from \"../Models/UserModel\";\r\nimport {getCookie} from \"../utils\";\r\n\r\nexport default function ApiGetUser(): Promise<UserModel> {\r\n    return new Promise(function (resolve, reject) {\r\n        const url = BASE_URL + \"/user\";\r\n\r\n        const jwt = getCookie(\"jwt\");\r\n\r\n        if (!jwt) {\r\n            reject();\r\n        }\r\n\r\n        const headers = new Headers();\r\n        headers.set(\"Authorization\", `Bearer ${jwt}`);\r\n\r\n        const params = getParams(headers);\r\n\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    reject();\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then(json => resolve(json))\r\n            .catch(error => reject(error));\r\n    });\r\n}","import React, {createRef, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);","\"use strict\";\r\nexports.__esModule = true;\r\nvar Move;\r\n(function (Move) {\r\n    Move[Move[\"L\"] = 0] = \"L\";\r\n    Move[Move[\"R\"] = 1] = \"R\";\r\n})(Move = exports.Move || (exports.Move = {}));\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar NonDeterministic = /** @class */ (function (_super) {\r\n    __extends(NonDeterministic, _super);\r\n    function NonDeterministic() {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = 'NonDeterministic';\r\n        Object.setPrototypeOf(_this, NonDeterministic.prototype);\r\n        return _this;\r\n    }\r\n    return NonDeterministic;\r\n}(Error));\r\nexports.NonDeterministic = NonDeterministic;\r\nvar NonMinimizable = /** @class */ (function (_super) {\r\n    __extends(NonMinimizable, _super);\r\n    function NonMinimizable() {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = 'NonMinimizable';\r\n        Object.setPrototypeOf(_this, NonMinimizable.prototype);\r\n        return _this;\r\n    }\r\n    return NonMinimizable;\r\n}(Error));\r\nexports.NonMinimizable = NonMinimizable;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar Computer_1 = require(\"./Computer\");\r\nvar Stack_1 = require(\"./Stack\");\r\nvar lodash_1 = require(\"lodash\");\r\nvar Exceptions_1 = require(\"./Exceptions\");\r\nvar PDA = /** @class */ (function (_super) {\r\n    __extends(PDA, _super);\r\n    function PDA(graph, startStatements, input, byEmpty) {\r\n        var _this = _super.call(this, graph, startStatements) || this;\r\n        _this.stack = new Stack_1.Stack();\r\n        _this.setInput = function (input) {\r\n            _this.input = [];\r\n            input.forEach(function (value) {\r\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\r\n            });\r\n            _this.restart();\r\n        };\r\n        _this.haveEpsilon = function () {\r\n            return _this.epsId !== undefined;\r\n        };\r\n        // isDeterministic0(): boolean {\r\n        //     let ret = true\r\n        //     this.matrix.forEach(value => {\r\n        //         value.forEach(value1 => {\r\n        //             if (value1.length > 1) {\r\n        //                 let tmp: statementCell = value1[0]\r\n        //                 value1.forEach((value2, index) => {\r\n        //                     if (index !== 0 && tmp.stackDown === undefined && value2.stackDown || index !== 0 && tmp.stackDown === value2.stackDown ) {\r\n        //                         ret = false\r\n        //                     }\r\n        //                 })\r\n        //             }\r\n        //         })\r\n        //     })\r\n        //     return ret && (!this.haveEpsilon())\r\n        // }\r\n        _this.getStartStatements = function () {\r\n            // console.log('this.startStatements')\r\n            // console.log(this.curPosition)\r\n            // console.log('this.startStatements')\r\n            var curs = _this.curPosition.map(function (v) {\r\n                var _a;\r\n                var stmt = v.stmt;\r\n                stmt.stack = (_a = v.stack) === null || _a === void 0 ? void 0 : _a.getStorage();\r\n                return stmt;\r\n            });\r\n            return curs;\r\n        };\r\n        _this.byEmptyStackAdmt = function (isAdmt) {\r\n            _this.admitByEmptyStack = isAdmt;\r\n        };\r\n        _this.treeHist = [];\r\n        _this.pdaStep = function () {\r\n            var _a;\r\n            var histUnit = [];\r\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\r\n            _this.counterSteps = ret.counter;\r\n            _this.historiStep = ret.history;\r\n            _this.treeHist = ret.tree ? ret.tree : [];\r\n            // console.log(\"STEP stck: \")\r\n            // ret.history.forEach(value => value.nodes.forEach(value1 => console.log(value1.stack)))\r\n            // console.log(\"STEP admit: \")\r\n            // console.log(ret.isAdmit)\r\n            return ret;\r\n        };\r\n        _this.pdaRun = function () {\r\n            _this.historiRun = [];\r\n            _this.counterStepsForResult = 0;\r\n            var histUnit = [];\r\n            var histTrace = [];\r\n            for (var i = 0; i < _this.input.length - 1; i++) {\r\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\r\n                _this.counterStepsForResult = tmp.counter;\r\n                _this.historiRun = tmp.history;\r\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\r\n            }\r\n            var last = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\r\n            histTrace.push({ byEpsPred: last.byEpsPred, byLetter: last.byLetter, byEpsAfter: last.byEpsAfter });\r\n            var ret = {\r\n                nodes: last.nodes,\r\n                counter: last.counter,\r\n                isAdmit: last.isAdmit,\r\n                history: last.history,\r\n                histTrace: histTrace\r\n            };\r\n            console.log('ret.histTrace');\r\n            console.log(ret.histTrace);\r\n            console.log('ret.histTrace');\r\n            return ret;\r\n        };\r\n        _this.step = _this.pdaStep;\r\n        _this.run = _this.pdaRun;\r\n        // (): Step => {\r\n        //     return { counter: 0, history: [], isAdmit: false, nodes: [] }\r\n        // }\r\n        // this.pdaRun\r\n        _this._step = function (counter, tr, histori, unitHsit, histTrace) {\r\n            var byEpsPred = [];\r\n            var byEpsAfter = [];\r\n            var byLetter = [];\r\n            var newPosSet = [];\r\n            var updCurPos = function () {\r\n                _this.curPosition = [];\r\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\r\n                newPosSet = [];\r\n            };\r\n            var epsStep = function () {\r\n                _this.curPosition.forEach(function (value) {\r\n                    var _a;\r\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack, unitHsit);\r\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\r\n                });\r\n            };\r\n            var letterSter = function () {\r\n                _this.curPosition.forEach(function (value) {\r\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack, unitHsit);\r\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\r\n                });\r\n            };\r\n            var rmRepeations = function () {\r\n                var htable = new Map();\r\n                var positions = [];\r\n                _this.curPosition.forEach(function (value) {\r\n                    var v = {\r\n                        stmt: value.stmt, stack: value.stack\r\n                    };\r\n                    if (htable.get(JSON.stringify(v)) === undefined) {\r\n                        positions.push(value);\r\n                        htable.set(JSON.stringify(v), value);\r\n                    }\r\n                });\r\n                _this.curPosition = [];\r\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\r\n            };\r\n            if (_this.epsId !== undefined) {\r\n                epsStep();\r\n                updCurPos();\r\n                rmRepeations();\r\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsPred.push(v); });\r\n            }\r\n            if (counter < _this.input.length) {\r\n                letterSter();\r\n                updCurPos();\r\n                rmRepeations();\r\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byLetter.push(v); });\r\n                if (_this.epsId !== undefined) {\r\n                    epsStep();\r\n                    updCurPos();\r\n                    rmRepeations();\r\n                    _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsAfter.push(v); });\r\n                }\r\n            }\r\n            else {\r\n                rmRepeations();\r\n                // console.log(\":::::::::::::::::::\")\r\n                // this.curPosition.forEach(value => {\r\n                //     console.log(value.stmt)\r\n                //     console.log(value.stack)\r\n                // })\r\n                // console.log(\":::::::::::::::::::\")\r\n                _this.treeHist.push(unitHsit);\r\n                histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\r\n                return {\r\n                    nodes: _this.toNodes(_this.curPosition),\r\n                    counter: counter,\r\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\r\n                    history: histori,\r\n                    tree: _this.treeHist,\r\n                    byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\r\n                    histTrace: []\r\n                };\r\n            }\r\n            rmRepeations();\r\n            // console.log(\":::::::::::::::::::\")\r\n            // this.curPosition.forEach(value => {\r\n            //     console.log(value.stmt)\r\n            //     console.log(value.stack)\r\n            // })\r\n            // console.log(\":::::::::::::::::::\")\r\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\r\n            counter++;\r\n            _this.treeHist.push(unitHsit);\r\n            histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\r\n            return {\r\n                nodes: _this.toNodes(_this.curPosition),\r\n                counter: counter,\r\n                isAdmit: _this.haveAdmitting(_this.curPosition),\r\n                history: histori,\r\n                tree: _this.treeHist,\r\n                byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\r\n                histTrace: []\r\n            };\r\n        };\r\n        _this.restart = function () {\r\n            _this.counterSteps = 0;\r\n            _this.historiStep = [];\r\n            _this.curPosition = [];\r\n            _this.treeHist = [];\r\n            _this.startStatements.forEach(function (value) {\r\n                var stack = new Stack_1.Stack();\r\n                stack.push(Computer_1.BOTTOM);\r\n                _this.curPosition.push({\r\n                    stmt: _this.statements.get(value.id),\r\n                    stack: stack\r\n                });\r\n            });\r\n        };\r\n        // move to Nfa\r\n        _this.nfaToDfa = function () {\r\n            var nextStepPosition = function (position, by) {\r\n                return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) { return ({ stmt: v }); });\r\n            };\r\n            var _nextStepPositions = function (positions, by) {\r\n                var acc = [];\r\n                positions.map(function (v) {\r\n                    return nextStepPosition(v, by);\r\n                }).forEach(function (ps) {\r\n                    return ps.forEach(function (p) { return acc.push(p); });\r\n                });\r\n                return acc;\r\n            };\r\n            var nextStepPositions = function (positions, by) {\r\n                var afterEps = function (positions) {\r\n                    if (_this.epsId === undefined) {\r\n                        return positions;\r\n                    }\r\n                    var acc = [];\r\n                    var EPStack = new Stack_1.Stack();\r\n                    EPStack.push(Computer_1.EPS);\r\n                    positions.forEach(function (position) {\r\n                        var tmp = _this.epsilonStep(position.stmt.idLogic, Computer_1.EPS, EPStack, []);\r\n                        if (tmp !== undefined) {\r\n                            acc.push(tmp);\r\n                        }\r\n                    });\r\n                    var flatted = [];\r\n                    acc.forEach(function (ps) { return ps.forEach(function (p) { return flatted.push(p); }); });\r\n                    return flatted;\r\n                };\r\n                return afterEps(_nextStepPositions(afterEps(positions), by));\r\n            };\r\n            var pop = function () { return stack.shift(); };\r\n            var push = function (v) {\r\n                stack.push(v);\r\n            };\r\n            var stack = [];\r\n            var table = [];\r\n            var set = new ImSet();\r\n            var startPos = _this.curPosition;\r\n            _this.restart();\r\n            push(startPos);\r\n            var _loop_1 = function () {\r\n                var head = pop();\r\n                var acc = [];\r\n                if (head === undefined || head.length === 0) {\r\n                    return \"break\";\r\n                }\r\n                if (set.has(head)) {\r\n                    return \"continue\";\r\n                }\r\n                set.add(head.map(function (v) { return ({\r\n                    stmt: {\r\n                        id: v.stmt.id,\r\n                        idLogic: v.stmt.idLogic,\r\n                        isAdmit: v.stmt.isAdmit\r\n                    },\r\n                    stack: undefined\r\n                }); }));\r\n                _this.alphabet.forEach(function (value) {\r\n                    if (value !== _this.epsId) {\r\n                        var to = nextStepPositions(head, value);\r\n                        var _to = to.map(function (v) { return ({\r\n                            stmt: {\r\n                                id: v.stmt.id,\r\n                                idLogic: v.stmt.idLogic,\r\n                                isAdmit: v.stmt.isAdmit\r\n                            },\r\n                            stack: undefined\r\n                        }); });\r\n                        acc.push(_to);\r\n                        if (to.length > 0 && !set.has(to) && !set.has(_to)) {\r\n                            push(_to);\r\n                        }\r\n                    }\r\n                });\r\n                table.push(acc);\r\n            };\r\n            while (stack.length > 0) {\r\n                var state_1 = _loop_1();\r\n                if (state_1 === \"break\")\r\n                    break;\r\n            }\r\n            var _edges = [];\r\n            table.forEach(function (ps, from) {\r\n                _this.alphabet.forEach(function (tr, letter) {\r\n                    if (tr !== _this.epsId && ps[tr].length !== 0) {\r\n                        // console.log(ps[tr])\r\n                        // console.log(from, set.getIter(ps[tr]))\r\n                        _edges.push({\r\n                            from: from,\r\n                            to: set.getIter(ps[tr]),\r\n                            transitions: new Set([[{ title: letter }]])\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            var nodes = set.getStorage().map(function (v) { return ({\r\n                id: set.getIter(v),\r\n                isAdmit: _this.haveAdmitting(v)\r\n            }); });\r\n            var edges = [];\r\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\r\n            for (var i = 0; i < _edges.length; i++) {\r\n                var acc = [];\r\n                var delta = 0;\r\n                for (var j = i; j < _edges.length; j++) {\r\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\r\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\r\n                        delta++;\r\n                    }\r\n                }\r\n                edges.push({\r\n                    from: _edges[i].from,\r\n                    to: _edges[i].to,\r\n                    transitions: new Set([acc])\r\n                });\r\n                i += delta - 1;\r\n            }\r\n            return { nodes: nodes, edges: edges };\r\n        };\r\n        //https://www.usna.edu/Users/cs/wcbrown/courses/F17SI340/lec/l22/lec.html\r\n        _this.minimizeDfa = function () {\r\n            _this.restart();\r\n            var startId = _this.curPosition[0].stmt.idLogic;\r\n            var cutBy = function (by) {\r\n                var acc = [];\r\n                _this.matrix.forEach(function (_, it) { return acc.push(_this.cellMatrix(it, by)[0]); });\r\n                return acc;\r\n            };\r\n            var _lookUp = function (group) { return function (id) {\r\n                return group[id];\r\n            }; };\r\n            var _getJump = function (table) { return function (by) { return function (id) {\r\n                return table[by][id];\r\n            }; }; };\r\n            var createTableT = function (zero) {\r\n                var lookUp = _lookUp(zero);\r\n                var table = [];\r\n                _this.alphabet.forEach(function (tr) {\r\n                    var acc = [];\r\n                    var cutted = cutBy(tr);\r\n                    cutted.forEach(function (cell) {\r\n                        acc.push(lookUp(cell.idLogic));\r\n                    });\r\n                    table.push(acc);\r\n                });\r\n                return table;\r\n            };\r\n            var _updateGroups = function (zero) { return function (groups) { return function (getJump) { return function (group) {\r\n                var jmpGrp = getJump(group[0].node.idLogic).number;\r\n                var newGrp = [];\r\n                var newNumber = groups.length + 1;\r\n                var toRm = [];\r\n                group.forEach(function (value, index) {\r\n                    if (getJump(value.node.idLogic).number !== jmpGrp) {\r\n                        value.number = newNumber;\r\n                        toRm.push(value.node.idLogic);\r\n                        newGrp.push(value);\r\n                    }\r\n                });\r\n                for (var i = 0; i < group.length; i++) {\r\n                    if (toRm.includes(group[i].node.idLogic)) {\r\n                        group.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n                if (newGrp.length > 0) {\r\n                    groups.push(newGrp);\r\n                    return { fst: group, snd: newGrp };\r\n                }\r\n                return { fst: [], snd: [] };\r\n            }; }; }; };\r\n            var stack = [];\r\n            var pop = function () { return stack.shift(); };\r\n            var push = function (v) { return stack.push(v); };\r\n            var zero = [];\r\n            var first = [];\r\n            var second = [];\r\n            _this.statements.forEach(function (statement) {\r\n                var element = { number: -1, node: { idLogic: -1, id: -1, isAdmit: false } };\r\n                if (statement.isAdmit) {\r\n                    element = { number: 1, node: statement };\r\n                    first.push(element);\r\n                }\r\n                else {\r\n                    element = { number: 2, node: statement };\r\n                    second.push(element);\r\n                }\r\n                zero.push(element);\r\n            });\r\n            var byEveryLetter = _this.matrix.reduce(function (acc, line) {\r\n                return acc && line.reduce(function (accLine, cells) { return accLine && cells.length > 0; }, acc);\r\n            }, true);\r\n            if (first.length < 1 || !byEveryLetter) {\r\n                // console.log('CATHTHT')\r\n                throw new Exceptions_1.NonMinimizable();\r\n            }\r\n            // плюс если есть пробелы в таблице!\r\n            var groups = [];\r\n            groups.push(first);\r\n            groups.push(second);\r\n            var table = createTableT(zero);\r\n            _this.alphabet.forEach(function (tr) {\r\n                groups.forEach(function (stmt) { return push(stmt); });\r\n                var getJump = _getJump(table)(tr);\r\n                var updateGroups = _updateGroups(zero)(groups)(getJump);\r\n                while (stack.length > 0) {\r\n                    var head = pop();\r\n                    if (head === undefined) {\r\n                        break;\r\n                    }\r\n                    var newGrp = updateGroups(head);\r\n                    if (newGrp.fst.length > 0) {\r\n                        push(newGrp.fst);\r\n                        push(newGrp.snd);\r\n                    }\r\n                }\r\n            });\r\n            var toPositions = function (group) { return group.map(function (g) { return ({ stmt: g.node }); }); };\r\n            var grpAfterJmp = function (group, by) { return _getJump(table)(by)(group[0].node.idLogic).number; };\r\n            var nodes = groups.map(function (group) { return ({ id: group[0].number, isAdmit: _this.haveAdmitting(toPositions(group)) }); });\r\n            var edges = groups.reduce(function (acc, g) {\r\n                _this.alphabet.forEach(function (tr, letter) {\r\n                    acc.push({\r\n                        from: g[0].number,\r\n                        to: grpAfterJmp(g, tr),\r\n                        transitions: new Set([[{ title: letter }]])\r\n                    });\r\n                });\r\n                return acc;\r\n            }, []);\r\n            // console.log(nodes)\r\n            var startGrp = groups.filter(function (g) {\r\n                var gIds = g.map(function (v) { return v.node.idLogic; });\r\n                return gIds.includes(startId);\r\n            });\r\n            var start = nodes[startGrp[0][0].number - 1];\r\n            return { graphcore: { nodes: nodes, edges: edges }, start: start };\r\n        };\r\n        _this.admitByEmptyStack = byEmpty;\r\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\r\n        // this.createMatrix()\r\n        // this.matrix.forEach(value => {\r\n        //     value.forEach(value1 => value1.forEach(value2 => {\r\n        //         console.log(value2.idLogic)\r\n        //         console.log(value2.stackDown)\r\n        //         console.log(value2.stackPush)\r\n        //         console.log(value2.stack)\r\n        //\r\n        //     }))\r\n        // })\r\n        _this.stack.push(Computer_1.BOTTOM);\r\n        _this.curPosition = []; //{stack: new Stack<string>(), stmt: startStatements}\r\n        _this.treeHist = [];\r\n        startStatements.forEach(function (value) {\r\n            var stack = new Stack_1.Stack();\r\n            stack.push(Computer_1.BOTTOM);\r\n            _this.curPosition.push({\r\n                stmt: _this.statements.get(value.id),\r\n                stack: stack\r\n            });\r\n        });\r\n        _this.setInput(input);\r\n        if (_this.epsId) { //\r\n            _this.curPosition.forEach(function (value) {\r\n                _this.cycleEps(value.stmt.idLogic, value.stack);\r\n            });\r\n            ////// this.cycleEps(this.curPosition[0].stmt.idLogic, this.curPosition[0].stack!)\r\n        } //\r\n        return _this;\r\n        // console.log('{{{{{{{{{{}}}}}}}}}}')\r\n        // console.log(this.curPosition)\r\n        // console.log(this.startStatements)\r\n        // console.log('{{{{{{{{{{}}}}}}}}}}')\r\n        // console.log('-------------------------')\r\n        // console.log(this.isDeterministic())\r\n        // console.log(\"ALPHBT\")\r\n        // this.alphabet.forEach((value, key) => console.log(value, key))\r\n        // console.log(\"STMTS\")\r\n        // this.statements.forEach(value => console.log(value))\r\n        // console.log(\"MTX\")\r\n        // this.matrix.forEach(value => {\r\n        //     console.log()\r\n        //     value.forEach(value1 => console.log(value1))\r\n        // })\r\n        // console.log('-------------------------')\r\n    }\r\n    PDA.prototype.copyPushList = function (value) {\r\n        var _a;\r\n        var cpy = [];\r\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\r\n        return cpy;\r\n    };\r\n    PDA.prototype.pushReverse = function (pushVals, stack) {\r\n        pushVals.reverse().forEach(function (value) {\r\n            stack.push(value);\r\n        });\r\n    };\r\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\r\n        newStack.pop();\r\n        var pushVals = this.copyPushList(value);\r\n        this.pushReverse(pushVals, newStack);\r\n    };\r\n    PDA.permute0 = function (permutation) {\r\n        var r = lodash_1.cloneDeep(permutation);\r\n        function cmp(a, b) {\r\n            if (a.stackDown && b.stackDown) {\r\n                if (a.stackDown < b.stackDown) {\r\n                    return -1;\r\n                }\r\n                if (a.stackDown > b.stackDown) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n            return 0;\r\n        }\r\n        r = r.sort(cmp);\r\n        var tmp = [];\r\n        var _tmp = [];\r\n        var dwn = r[0].stackDown;\r\n        for (var i = 0; i < r.length; i++) {\r\n            if (r[i].stackDown === dwn) {\r\n                _tmp.push(r[i]);\r\n            }\r\n            else {\r\n                tmp.push(_tmp);\r\n                dwn = r[i].stackDown;\r\n                _tmp = [];\r\n                _tmp.push(r[i]);\r\n            }\r\n        }\r\n        tmp.push(_tmp);\r\n        var ret = [];\r\n        var _detour = function (lvl, cur, acc) {\r\n            if (lvl < tmp.length) {\r\n                for (var i = 0; i < tmp[lvl].length; i++) {\r\n                    var a = lodash_1.cloneDeep(acc);\r\n                    a.push(tmp[lvl][i]);\r\n                    _detour(lvl + 1, i, a);\r\n                }\r\n            }\r\n            else {\r\n                ret.push(acc);\r\n            }\r\n        };\r\n        _detour(0, 0, []);\r\n        return ret;\r\n    };\r\n    PDA.permute = function (permutation) {\r\n        var length = permutation.length;\r\n        var result = [permutation.slice()];\r\n        var c = new Array(length).fill(0);\r\n        var i = 1;\r\n        var k;\r\n        var p;\r\n        while (i < length) {\r\n            if (c[i] < i) {\r\n                k = i % 2 && c[i];\r\n                p = permutation[i];\r\n                permutation[i] = permutation[k];\r\n                permutation[k] = p;\r\n                c[i]++;\r\n                i = 1;\r\n                result.push(permutation.slice());\r\n            }\r\n            else {\r\n                c[i] = 0;\r\n                i++;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\r\n        var wasCreated = function (hash) {\r\n            return htable.get(hash) !== undefined;\r\n        };\r\n        if (!wasCreated(JSON.stringify(value))) {\r\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\r\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\r\n        }\r\n    };\r\n    PDA.prototype.cycleEps = function (curLId, stack0) {\r\n        var _this = this;\r\n        var htable = new Map();\r\n        var positions = [];\r\n        var visited = [];\r\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\r\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined\r\n            ? PDA.permute0(this.cellMatrix(curLId, this.epsId))\r\n            : [(this.cellMatrix(curLId, this.epsId))];\r\n        // permutes.push(this.cellMatrix(curLId, this.epsId))\r\n        // let permutes: statementCell[][] = PDA.permute(this.cellMatrix(curLId, this.epsId))\r\n        var cycle = function (cell, idx, idLogic, stack) {\r\n            visited[idx] = true;\r\n            cell.forEach(function (value, index) {\r\n                if (value.idLogic === idLogic) {\r\n                    if (value.stackDown === stack.peek()) {\r\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\r\n                        _this.matchPushEpsVal(value, newCycleStack); //\r\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\r\n                        if (!visited[index]) {\r\n                            cycle(cell, index, idLogic, newCycleStack);\r\n                        }\r\n                    }\r\n                    else if (value.stackDown === Computer_1.EPS) {\r\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\r\n                        _this.matchDownEpsVal(value, newCycleStack);\r\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\r\n                        if (!visited[index]) {\r\n                            cycle(cell, index, idLogic, newCycleStack);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        permutes.forEach(function (value) {\r\n            for (var i = 0; i < visited.length; i++) {\r\n                visited[i] = false;\r\n            }\r\n            cycle(value, 0, curLId, stack0);\r\n        });\r\n        return positions;\r\n    };\r\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack, hist) {\r\n        var _this = this;\r\n        if (this.epsId === undefined) {\r\n            return;\r\n        }\r\n        var visited = [];\r\n        for (var i = 0; i < this.statements.size; i++) {\r\n            visited.push(false);\r\n        }\r\n        var dfs = function (id, stack, stDwn, elements) {\r\n            _this.cycleEps(id, stack).forEach(function (value) {\r\n                elements.push({\r\n                    idLogic: id,\r\n                    top: value.stack\r\n                });\r\n            });\r\n            elements.push({\r\n                idLogic: id,\r\n                top: stack\r\n            });\r\n            visited[id] = true;\r\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\r\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\r\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\r\n                        case stDwn: {\r\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\r\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\r\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\r\n                            break;\r\n                        }\r\n                        case Computer_1.EPS: {\r\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\r\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\r\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return elements;\r\n        };\r\n        var histUnit = [];\r\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\r\n        var positions = [];\r\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\r\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\r\n            positions.push({\r\n                stmt: stmt, stack: endsOfEpsWay[i].top,\r\n                from: this.nodes[curLId],\r\n                cur: this.nodes[stmt.idLogic],\r\n                by: Computer_1.EPS,\r\n                oldStack: stack,\r\n                stackDown: stackDown\r\n                /////////\r\n                //?\r\n            });\r\n            hist.push({ by: Computer_1.EPS, from: this.nodes[curLId], value: this.nodes[stmt.idLogic] });\r\n        }\r\n        // hist.push(histUnit)\r\n        return positions;\r\n    };\r\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\r\n        if (value.stackPush[0] === Computer_1.EPS) {\r\n            if (value.stackPush.length !== 1) {\r\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\r\n            }\r\n            else {\r\n                newStack.pop();\r\n            }\r\n        }\r\n        else {\r\n            this.pushTopToNewStack0(newStack, value);\r\n        }\r\n    };\r\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\r\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\r\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\r\n        }\r\n        else if (value.stackPush[0] !== Computer_1.EPS) {\r\n            var pushVals = this.copyPushList(value);\r\n            this.pushReverse(pushVals, newStack);\r\n        }\r\n    };\r\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack, hist) {\r\n        var _this = this;\r\n        var positions = [];\r\n        var histUnit = [];\r\n        var getLetter = function (id) {\r\n            var ret;\r\n            _this.alphabet.forEach(function (v, k) {\r\n                if (id === v) {\r\n                    ret = k;\r\n                }\r\n            });\r\n            return ret;\r\n        };\r\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\r\n            switch (value.stackDown) {\r\n                case stackDown: {\r\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\r\n                    _this.matchPushEpsVal(value, newStack);\r\n                    positions.push({\r\n                        stmt: _this.statements.get(value.id), stack: newStack,\r\n                        from: _this.nodes[curLId],\r\n                        cur: _this.nodes[value.idLogic],\r\n                        by: getLetter(transformedInput),\r\n                        oldStack: stack,\r\n                        stackDown: stackDown\r\n                        //? \r\n                    });\r\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\r\n                    break;\r\n                }\r\n                case Computer_1.EPS: {\r\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\r\n                    _this.matchDownEpsVal(value, newStack);\r\n                    positions.push({\r\n                        stmt: _this.statements.get(value.id), stack: newStack,\r\n                        from: _this.nodes[curLId],\r\n                        cur: _this.nodes[value.idLogic],\r\n                        by: getLetter(transformedInput),\r\n                        oldStack: stack,\r\n                        stackDown: Computer_1.EPS\r\n                        //? \r\n                    });\r\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        return positions;\r\n    };\r\n    PDA.prototype.isDeterministic = function () {\r\n        var ret = true;\r\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\r\n            var fstCell = cells[0];\r\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\r\n            if (cells.length > 1 && hasDublicates) {\r\n                ret = false;\r\n            }\r\n        }); });\r\n        return ret && (!this.haveEpsilon());\r\n    };\r\n    PDA.prototype.haveAdmitting = function (positions) {\r\n        var ret = false;\r\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\r\n            positions.forEach(function (value) {\r\n                if (value.stmt.isAdmit) {\r\n                    ret = true;\r\n                }\r\n            });\r\n            return ret;\r\n        }\r\n        else {\r\n            positions.forEach(function (value) {\r\n                if (value.stack.size() === 0) {\r\n                    ret = true;\r\n                }\r\n            });\r\n            return ret;\r\n        }\r\n    };\r\n    PDA.prototype.toNodes = function (positions) {\r\n        var _this = this;\r\n        var retNodes = [];\r\n        positions.forEach(function (value) {\r\n            var _a, _b;\r\n            var from = {\r\n                id: value.from.id,\r\n                isAdmit: value.from.isAdmit,\r\n                stack: value.oldStack ? value.oldStack.getStorage() : undefined,\r\n                move: (_a = value.from) === null || _a === void 0 ? void 0 : _a.move,\r\n                output: (_b = value.from) === null || _b === void 0 ? void 0 : _b.output\r\n            };\r\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage(), from: from, cur: value.cur, by: value.by, oldStack: value.oldStack.getStorage(), stackDown: value.stackDown });\r\n            retNodes.push(temp);\r\n        });\r\n        return retNodes;\r\n    };\r\n    return PDA;\r\n}(Computer_1.Computer));\r\nexports.PDA = PDA;\r\nvar Queue = /** @class */ (function () {\r\n    function Queue(capacity) {\r\n        if (capacity === void 0) { capacity = Infinity; }\r\n        this.capacity = capacity;\r\n        this.storage = [];\r\n    }\r\n    Queue.prototype.enqueue = function (item) {\r\n        if (this.size() === this.capacity) {\r\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\r\n        }\r\n        this.storage.push(item);\r\n    };\r\n    Queue.prototype.dequeue = function () {\r\n        return this.storage.shift();\r\n    };\r\n    Queue.prototype.size = function () {\r\n        return this.storage.length;\r\n    };\r\n    Queue.prototype.getStorage = function () {\r\n        return this.storage;\r\n    };\r\n    return Queue;\r\n}());\r\nvar ImSet = /** @class */ (function () {\r\n    function ImSet() {\r\n        this.table = new Map();\r\n        this.set = [];\r\n    }\r\n    ImSet.prototype.normalize = function (v) {\r\n        var _v = lodash_1.cloneDeep(v);\r\n        _v = _v.sort();\r\n        return _v;\r\n    };\r\n    ImSet.prototype.getItter = function (value) {\r\n        if (!this.has(value)) {\r\n            throw Error;\r\n        }\r\n        var it = 0;\r\n        var _v = this.normalize(value);\r\n        this.set.forEach(function (value1, index) {\r\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\r\n                it = index;\r\n            }\r\n        });\r\n        return it;\r\n    };\r\n    ImSet.prototype.has = function (value) {\r\n        var _v = this.normalize(value);\r\n        var k = JSON.stringify(_v);\r\n        return this.table.has(k);\r\n    };\r\n    ImSet.prototype.myForEach = function (callback) {\r\n        this.set.forEach(function (value1, index) {\r\n            callback(value1, index);\r\n        });\r\n    };\r\n    ImSet.prototype.add = function (value) {\r\n        var _v = this.normalize(value);\r\n        var k = JSON.stringify(_v);\r\n        if (!this.table.has(k)) {\r\n            this.table.set(k, _v);\r\n            this.set.push(_v);\r\n        }\r\n    };\r\n    ImSet.prototype.size = function () {\r\n        return this.set.length;\r\n    };\r\n    ImSet.prototype.getNth = function (i) {\r\n        return this.set[i];\r\n    };\r\n    ImSet.prototype.getIter = function (value) {\r\n        var _v = this.normalize(value);\r\n        var k = JSON.stringify(_v);\r\n        var iter = 0;\r\n        this.set.forEach(function (v, index) {\r\n            if (JSON.stringify(v) === k) {\r\n                iter = index;\r\n            }\r\n        });\r\n        return iter;\r\n    };\r\n    ImSet.prototype.getStorage = function () {\r\n        return this.set;\r\n    };\r\n    return ImSet;\r\n}());\r\nexports.ImSet = ImSet;\r\nvar nfa = new PDA({\r\n    nodes: [\r\n        { id: 1, isAdmit: false },\r\n        { id: 2, isAdmit: false },\r\n        { id: 3, isAdmit: false },\r\n    ],\r\n    edges: [\r\n        {\r\n            from: 1, to: 1, transitions: new Set([\r\n                [\r\n                    { title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0'] },\r\n                    { title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0'] },\r\n                    { title: '0', stackDown: '0', stackPush: ['0', '0'] },\r\n                    { title: '0', stackDown: '1', stackPush: ['0', '1'] },\r\n                    { title: '1', stackDown: '0', stackPush: ['1', '0'] },\r\n                    { title: '1', stackDown: '1', stackPush: ['1', '1'] }\r\n                ]\r\n            ])\r\n        },\r\n        {\r\n            from: 1, to: 2, transitions: new Set([\r\n                [\r\n                    { title: Computer_1.EPS, stackDown: 'Z0', stackPush: ['Z0'] },\r\n                    { title: Computer_1.EPS, stackDown: '0', stackPush: ['0'] },\r\n                    { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'] }\r\n                ]\r\n            ])\r\n        },\r\n        {\r\n            from: 2, to: 2, transitions: new Set([\r\n                [\r\n                    { title: '0', stackDown: '0', stackPush: [Computer_1.EPS] },\r\n                    { title: '1', stackDown: '1', stackPush: [Computer_1.EPS] }\r\n                ]\r\n            ])\r\n        },\r\n        { from: 2, to: 3, transitions: new Set([[{ title: Computer_1.EPS, stackDown: 'Z0', stackPush: [Computer_1.EPS] }]]) },\r\n    ]\r\n}, [\r\n    { id: 1, isAdmit: false }\r\n], ['0', '0']);\r\n// console.log(nfa.isDeterministic())\r\n// nfa.step()\r\n// const aa = nfa.run()\r\n// console.log('_____-_--')\r\n// aa.histTrace!.forEach(v => {\r\n//     // console.log(v.byEpsPred)\r\n//     console.log(v.byEpsAfter)\r\n//     // console.log(v.byLetter)\r\n//     console.log()\r\n// })\r\n// const a = nfa.step()\r\n// console.log()\r\n// console.log()\r\n// console.log('Letter')\r\n// console.log(a.byLetter)\r\n// console.log('byEpsPred')\r\n// console.log(a.byEpsPred)\r\n// console.log('byEpsAfter')\r\n// console.log(a.byEpsAfter)\r\n// a.tree?.forEach((v) => {\r\n//     v.forEach((vv) => console.log(vv.by, vv.from, vv.value))\r\n//     console.log()\r\n// })\r\n// let nfa = new PDA(\r\n//     {\r\n//         nodes: [\r\n//             {id: 0, isAdmit: false},\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: false},\r\n//             {id: 3, isAdmit: false},\r\n//             {id: 4, isAdmit: true},\r\n//             {id: 5, isAdmit: true},\r\n//             {id: 6, isAdmit: false},\r\n//\r\n//         ],\r\n//         edges: [\r\n//\r\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0' }]])},\r\n//             {from: 0, to: 2, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 1, to: 3, transitions: new Set([    [{title:      '0' }]])},\r\n//             {from: 1, to: 4, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 2, to: 3, transitions: new Set([    [{title:      '0' }]])},\r\n//             {from: 2, to: 5, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 3, to: 3, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\r\n//             // {from: 3, to: 3, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 4, to: 4, transitions: new Set([    [{title:      '0' }]])},\r\n//             {from: 4, to: 6, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 5, to: 5, transitions: new Set([    [{title:      '0' }]])},\r\n//             {from: 5, to: 6, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//             {from: 6, to: 6, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\r\n//             // {from: 6, to: 6, transitions: new Set([    [{title:      '1' }]])},\r\n//\r\n//\r\n//         ]\r\n//     }, [{id: 0, isAdmit: false}], [\"0\", \"1\", \"0\"], )\r\n//\r\n// nfa.nfaToDfa()\r\n// console.log(nfa.run())\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar PDA_1 = require(\"./PDA\");\r\nvar EpsilonNFA = /** @class */ (function (_super) {\r\n    __extends(EpsilonNFA, _super);\r\n    function EpsilonNFA(graph, startStatement, input) {\r\n        var _this = _super.call(this, graph, startStatement, input) || this;\r\n        _this.enfaStep = function () {\r\n            var _a;\r\n            var histUnit = [];\r\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\r\n            _this.counterSteps = ret.counter;\r\n            _this.historiStep = ret.history;\r\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\r\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\r\n            return ret;\r\n        };\r\n        _this.enfaRun = function () {\r\n            var histUnit = [];\r\n            var histTrace = [];\r\n            _this.historiRun = [];\r\n            _this.counterStepsForResult = 0;\r\n            for (var i = 0; i < _this.input.length - 1; i++) {\r\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\r\n                _this.counterStepsForResult = tmp.counter;\r\n                _this.historiRun = tmp.history;\r\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\r\n            }\r\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\r\n            histTrace.push({ byEpsPred: ret.byEpsPred, byLetter: ret.byLetter, byEpsAfter: ret.byEpsAfter });\r\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\r\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\r\n            console.log('histTrace');\r\n            console.log(histTrace);\r\n            console.log('histTrace');\r\n            return __assign(__assign({}, ret), { histTrace: histTrace });\r\n        };\r\n        _this.step = _this.enfaStep;\r\n        _this.run = _this.enfaRun;\r\n        return _this;\r\n    }\r\n    return EpsilonNFA;\r\n}(PDA_1.PDA));\r\nexports.EpsilonNFA = EpsilonNFA;\r\n// let nfa = new EpsilonNFA (\r\n//     {\r\n//         nodes: [\r\n//             {id: 0, isAdmit: false},\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: false},\r\n//             {id: 3, isAdmit: false},\r\n//             {id: 4, isAdmit: false},\r\n//             // {id: 2, isAdmit: false},\r\n//\r\n//         ],\r\n//         edges: [\r\n//             // {from: 0, to: 0, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\r\n//             {from: 0, to: 1, transitions: new Set([ [{title: EPS}] ])},\r\n//             {from: 1, to: 2, transitions: new Set([ [{title: \"a\"}] ])},\r\n//             {from: 2, to: 3, transitions: new Set([ [{title: \"a\"}] ])},\r\n//             {from: 3, to: 4, transitions: new Set([ [{title: \"a\"}] ])},\r\n//             // {from: 1, to: 2, transitions: new Set([ [{title: EPS}] ])},\r\n//         ]\r\n//     }, [{id: 0, isAdmit: false}, {id: 3, isAdmit: false}], ['a', 'a'],\r\n// )\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n// nfa.nfaToDfa()\r\n//\r\n// let nfa = new EpsilonNFA(\r\n//     {\r\n//         nodes: [\r\n//             {id: 1, isAdmit: false},\r\n//             {id: 2, isAdmit: false},\r\n//             {id: 3, isAdmit: false},\r\n//             {id: 4, isAdmit: false},\r\n//             {id: 5, isAdmit: false},\r\n//             {id: 6, isAdmit: false},\r\n//             {id: 7, isAdmit: false},\r\n//             {id: 8, isAdmit: false},\r\n//             {id: 9, isAdmit: false},\r\n//             {id: 10, isAdmit: false},\r\n//             {id: 11, isAdmit: false},\r\n//             {id: 12, isAdmit: false},\r\n//\r\n//         ],\r\n//         edges: [\r\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\r\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\r\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\r\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\r\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\r\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\r\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\r\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\r\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//             //\r\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\r\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\r\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\r\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\r\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\r\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\r\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\r\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\r\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\r\n//             //\r\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\r\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\r\n//         ]\r\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\r\n// console.log(nfa.step())\r\n// console.log(nfa.step())\r\n"],"sourceRoot":""}