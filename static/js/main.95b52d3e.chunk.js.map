{"version":3,"sources":["Logic/Mealy.js","Logic/Moore.js","Logic/Stack.js","Logic/OutputAutomata.js","Logic/DFA.js","Logic/NFA.js","Logic/TM.js","Logic/DPDA.js","Logic/DMealy.js","Logic/DMoore.js","Logic/Computer.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Components/RunControl/History.tsx","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/apiGetSaves.ts","Api/apiGetSave.ts","Api/apiSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Api/apiSignIn.ts","Components/Pages/LoginPage/LoginPage.tsx","Api/apiSignUp.ts","Components/Pages/RegisterPage/RegisterPage.tsx","Components/AppHeader/AppHeader.tsx","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","Components/Pages/RegisteredPage/RegisteredPage.tsx","VisNetwork.tsx","ErrorModal.tsx","TreeHistory.tsx","Api/apiRemoveSave.ts","Api/apiUpdateSave.ts","Api/apiUpdateUser.ts","Components/Pages/MePage/MePage.tsx","Api/apiGetUserById.ts","Api/apiGetUserSaves.ts","Api/apiCloneSave.ts","Components/Pages/UserPage/UserPage.tsx","App.tsx","Api/apiGetUser.ts","index.tsx","Logic/IGraphTypes.js","Logic/Exceptions.js","Logic/PDA.js","Logic/EpsilonNFA.js","react-graph-vis-types.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","exports","__esModule","Mealy","_super","graph","startStatements","input","_this","mealyToMoore","outs","Map","edges","forEach","edge","transitions","_","transition","out","output","has","set","size","outNumbs","v","k","push","console","log","diffEdges","reduce","acc","tmp","from","to","title","toOuts","nodes","id","fill","count","undefined","get","Error","nodesMoore","key","map","value","filter","find","node","outEdges","idLetter","startNodes","startMoore","_a","edgesMoore","sort","a","j","Set","graphcore","start","step","oaStep","run","oaRun","require","OutputAutomata","isAdmit","Moore","restart","counterSteps","historiStep","curPosition","stmt","statements","mooreToMealy","mapNodes","mealyEdges","tmpTransitions","tmpTransiton","add","statement","Stack","capacity","Infinity","storage","item","pop","peek","getStorage","list","cpyTo","stack","Computer_1","haveEpsilon","alphabet","EPS","histTrace","historiRun","counterStepsForResult","ref","after","_step","counter","history","haveAdmitting","toNodes","nextStepPosition","position","by","cellMatrix","idLogic","ret","getLetter","cur","nextStepPositions","positions","nextPOs","nextPs","pos","po","nextOs","index","outputs","byLetter","trNum","nextPositions","nodesOfCurPos","setInput","matrix","value1","isDeterministic","line","cells","fstCell","hasDublicates","stackDown","retNodes","temp","Computer","EpsilonNFA_1","Exceptions_1","DFA","startStatement","minimizeDfa","startId","_getJump","table","zero","first","second","element","number","byEveryLetter","accLine","NonMinimizable","groups","group","lookUp","tr","it","cutBy","cell","createTableT","getJump","updateGroups","jmpGrp","newGrp","newNumber","toRm","includes","splice","fst","snd","_updateGroups","head","shift","toPositions","g","letter","newEdges","_loop_1","NonDeterministic","enfaStep","enfaRun","EpsilonNFA","NFA","IGraphTypes_1","PDA_1","TMMemory","pointer","getPointer","reset","initialize","init","mvRight","curr","upd","mvLeft","tmp_1","TM","mem","__step","histori","mv","move","Move","R","stackPush","L","assignCurMt","memory","mtTrun","mtStep","checkMemFormat","isMtMem","value2","_b","curMt","newPos","stPush0","stPush1","PDA","DPDA","byEmpty","pdaStep","pdaRun","DMealy","nfa","DMoore","eof","BOTTOM","byEmptyStackAdmt","isAdmt","nfaToDfa","getCurrNode","currentNode","getStartStatements","localValue","this_1","getAlphabetFromEdges","getStatementsFromNodes","createMatrix","getInput","getAlphabet","alphabetSet","i_1","statementFrom","statementTo","letterId","stDwn","stPsh","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","_excluded","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","reinitComputer","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","epsSubstStr","epsText","epsSubstStrs","values","join","mvStr","transitionsToLabel","frmt","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","epsSubst","epsSubsts","str","getTransitionsTitles","decorateGraph","elements","update","lableTokens","split","x","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","graphToElements","DataSet","elementsToGraph","computersInfo","dfa","name","description","preview","defaultGraph","y","nfa-eps","pda","dpda","tm","mealy","dmealy","moore","dmoore","getCookie","_parts$pop","parts","document","cookie","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","activeTransition","changeTransitions","_ref","asyncToGenerator","regenerator_default","mark","_callee","accumulator","wrap","_context","prev","next","transitionsText","fth","trd","bebra","reverse","_value$trd","changeEdgeTransitions","stop","_x","deleteEdge","_callee2","_context2","changeEditMode","editMode","updateTransitions","_callee3","_context3","_value$trd2","deleteTransition","delete","helperText","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","onBlur","Edit_default","History","startNode","Tooltip","note","historyEndRef","creatButtons","buttons","buttonsComp","button","RunControl","computerShouldBeUpdated","current","some","isEqual","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","gElements","resetHistTree","computer","result","paddingTreeId","getLastHistNodeId","idd","gNode","gEl","createHistNode","lastHistUnits","onInputChanged","_this$state$computer","drawTreeLayot","pred","l","txt","stackDwn","bySymbRules","_v$from","_v$from2","_p$stack","_v$from$stack","toString","rule","createHistEdge","treeEps","byEpsPred","byEpsAfter","tmp1","tree","stepResult","_nodes","error","abrupt","setResettedStatus","wasRuned","currentInputIndex","changeStateIsCurrent","updMem","nodeCore","setHistory","History_History","t0","setIsNonDetermenistic","_this$state$computer2","_this$state$computer3","_callee4","_context4","_ref4","histStep","updateElements","setComputerType","admitByStack","curStbyEmp","setByEmptyStack","miniDFA","setIsNonMinimizable","starts","defaultButtonsLine","defaultButtons","buttonsTree","treeContextInfo","treeVisible","buttonNfa","buttonDfa","buttonMealy","buttonMoore","buttonsByStackByState","changerStack","buttonsNoRun","getButtons","_this2","setInit","haveEmpty","setNfaToDfa","setMinimizeDfa","setMooreToMealy","setMealyToMoore","setChangerByStack","setRun","setStep","setReset","snapshot","_this3","char","Done_default","Close_default","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","Number","save_index","findIndex","saves_json","JSON","stringify","setItem","parse","getItem","BASE_URL","process","getAuthHeaders","headers","Headers","getParams","method","ApiGetSaves","onAuthFailed","reject","url","params","fetch","then","response","status","ok","statusText","json","catch","ApiGetSave","request","ApiSave","body","postParams","CloudSavesManager","sent","data","serialized_save","WelcomePopout","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","getSave","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","href","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","ApiSignIn","redirect","text","LoginPage","objectDestructuringEmpty","navigate","useNavigate","email","setEmail","password","setPassword","setError","onLoginClicked","jwt","onSignInWithExternalProviderClicked","provider","window","location","Container","spacing","justifyContent","minHeight","align","sx","paddingBottom","Alert","severity","ApiSignUp","RegisterPage","about","setAbout","onRegisterClicked","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","AppBar","Toolbar","SuccessLoginPage","updateCurrentUser","updateAuth","searchParams","_useSearchParams","useSearchParams","RegisteredPage","VisNetwork","useRef","domNode","smooth","enabled","roundness","width","arrows","scaleFactor","manipulation","addEdge","callback","setKeyPressed","network","disableEditMode","layout","improvedLayout","shapeProperties","interpolation","shape","font","labelHighlightBold","physics","options","_React$useState","_React$useState2","contextMenu","setContextMenu","handleContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","handleClose","keyPressed","handleUserKeyPress","useCallback","keyCode","addEdgeMode","handleUserKeyUnPress","content","end","addEventListener","removeEventListener","createRef","useLayoutEffect","Network","on","onDoubleClick","onClick1","onClick2","onClick3","onClick4","unselectAll","refContainer","onContextMenu","Menu","anchorReference","anchorPosition","top","left","transform","bgcolor","boxShadow","NonDetermenisticModal","setOpen","isNonDetermenistic","react","Modal","aria-labelledby","aria-describedby","Box","component","mt","NonMinimizableModal","_React$useState3","_React$useState4","isNonMinimizable","TreeHistory","interaction","keyboard","dragNodes","hierarchical","treeSpacing","direction","parentCentralization","sortMethod","shakeTowards","ApiRemoveSave","ApiUpdateSave","ApiUpdateUser","MePage","_user$about","user","setUser","setSaves","shareDialogOpen","setShareDialogOpen","saveToRemoveId","setSaveToRemoveId","editAccountMode","setEditAccountMode","editedAbout","setEditedAbout","_useState13","_useState14","editSaveDialogOpen","setEditSaveDialogOpen","_useState15","_useState16","saveToEditId","setSaveToEditId","_useState17","_useState18","editedSaveName","setEditedSaveName","onRemoveConfirmClicked","removeSave","updateSaves","closeDialog","onOpenClicked","onEditAccountClicked","saveAccountChanges","_ref6","_callee5","_context5","updatedUser","closeShareDialog","closeEditSaveDialog","_ref7","_callee6","_context6","_ref8","_callee7","_context7","_x3","setSaveShareState","_ref9","_callee8","shareState","_context8","isShared","_x4","_x5","_user$about2","DialogContentText","OutlinedInput","readOnly","endAdornment","InputAdornment","navigator","clipboard","writeText","ContentCopyOutlined_default","userName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Date","createdDateTime","toLocaleString","lastModifiedDateTime","LaunchOutlined_default","EditOutlined_default","DeleteOutlineRounded_default","icon","ApiGetUserById","ApiGetUserSaves","ApiCloneSave","UserPage","cloneDialogOpen","setCloneDialogOpen","saveToCloneId","setSaveToCloneId","userId","useParams","onCloneDialogClose","getUser","cloneSave","createContext","computerAction","controlAction","changerByStack","Ribbon","_props$mem","wasComputerResetted","_props$memRef","_props$memRef$current","ptr","abs","memRef","scrollIntoView","behavior","App","networkTST","errIsNonDetermenistic","errIsNonMinimizable","lastNodeId","subscribeToShortcuts","ctrlKey","openSavePopout","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","logout","updateGraph","ids","createNode","canvas","lastHistNodeId","treeElems","remove","selectNode","nodesIDs","selectedNodes","selectedNode","deselectNode","rmEdges","selectEdge","edgesIDs","selectedEdges","selectedEdge","deselectEdge","changeEdgeTransition","NFAContextMenu","showTree","DFAContextMenu","MealyContextMenu","MooreContextMenu","PDAContextMenu","AnotherContextMenu","ContextMenu","inEdgeMode","widthConstraint","heightConstraint","initiallyStabilized","popout","react_router_dom","react_router","path","Pages_LoginPage_LoginPage","Pages_RegisterPage_RegisterPage","Pages_RegisteredPage_RegisteredPage","Pages_SuccessLoginPage_SuccessLoginPage","Pages_MePage_MePage","Pages_UserPage_UserPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","ErrorModal_NonDetermenisticModal","ErrorModal_NonMinimizableModal","App_Ribbon","Components_AppHeader_AppHeader","VisNetwork_VisNetwork","TreeHistory_TreeHistory","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","f","jsx","_this2$historyEndRef","_this2$historyEndRef$","ReactDOM","render","StrictMode","src_App_0","getElementById","Stack_1","lodash_1","epsId","admitByEmptyStack","treeHist","histUnit","last","unitHsit","newPosSet","updCurPos","epsStep","pPos","epsilonStep","rmRepeations","htable","letterStep","cycleEps","copyPushList","cpy","pushReverse","pushVals","pushTopToNewStack0","newStack","permute0","permutation","r","cloneDeep","_tmp","dwn","_detour","lvl","permute","slice","c","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","idx","newCycleStack","matchPushEpsVal","matchDownEpsVal","hist","endsOfEpsWay","dfs","oldStack","transformedInput","Queue","enqueue","dequeue","ImSet","normalize","_v","getItter","myForEach","getNth","getIter","iter","__spreadArrays","il","jl","startIds","fakeEdges","fakeStart","fakeNodes","fakeAutomat","_nextStepPositions","ps","startPos","afterEps","EPStack","flatted","wasPushed_1","_to","vv","_edges","_loop_2"],"mappings":"0FACA,IAAIA,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAazCI,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAEhCI,EAAQC,YAAa,EACrB,IACIC,EAAuB,SAAUC,GAEjC,SAASD,EAAME,EAAOC,EAAiBC,GACnC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,EAAiBC,IAAU9B,KA6OhE,OA5OA+B,EAAMC,aAAe,WACjB,IAAIC,EAAO,IAAIC,IACfH,EAAMI,MAAMC,QAAQ,SAAUC,GAC1BA,EAAKC,YAAYF,QAAQ,SAAUG,GAAK,OAAOA,EAAEH,QAAQ,SAAUI,GAC/D,IAAIC,EAAMD,EAAWE,OAChBT,EAAKU,IAAIF,IACVR,EAAKW,IAAIH,EAAKR,EAAKY,YAI/B,IAAIC,EAAW,GACfb,EAAKG,QAAQ,SAAUW,EAAGC,GAAK,OAAOF,EAASG,KAAKD,KACpDE,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIL,GACZ,IAAIM,EAAYrB,EAAMI,MAAMkB,OAAQ,SAAUC,EAAKjB,GAC/C,IAAIkB,EAAM,GAQV,OAPAlB,EAAKC,YAAYF,QAAQ,SAAUpB,GAAK,OAAOA,EAAEoB,QAAQ,SAAUW,GAAK,OAAOQ,EAAIN,KAAK,CACpFO,KAAMnB,EAAKmB,KACXC,GAAIpB,EAAKoB,GACTC,MAAOX,EAAEW,MACThB,OAAQK,EAAEL,OAASK,EAAEL,OAAS,SAElCa,EAAInB,QAAQ,SAAUW,GAAK,OAAOO,EAAIL,KAAKF,KACpCO,GACP,IAAI/C,OACR2C,QAAQC,IAAI,QACZC,EAAUhB,QAAQ,SAAUW,GACxBG,QAAQC,IAAIJ,KAEhBG,QAAQC,IAAI,SACZ,IAAIQ,EAAS,IAAIzB,IACjBH,EAAM6B,MAAMxB,QAAQ,SAAUW,GAC1B,OAAOY,EAAOf,IAAIG,EAAEc,GAAI,IAAItD,MAAM0B,EAAKY,MAAMiB,MAAM,MAEvD,IAAIC,EAAQ,EACZX,EAAUhB,QAAQ,SAAUC,GACxB,QAA4B2B,IAAxBL,EAAOM,IAAI5B,EAAKoB,IAChB,MAAM,IAAIS,MAAM,mBAGoC,IAAhDP,EAAOM,IAAI5B,EAAKoB,IAAIxB,EAAKgC,IAAI5B,EAAKK,WAClCiB,EAAOM,IAAI5B,EAAKoB,IAAIxB,EAAKgC,IAAI5B,EAAKK,SAAWqB,EAC7CA,OAIZ,IAAII,EAAa,GACjBR,EAAOvB,QAAQ,SAAUW,EAAGqB,GAAO,OAAOrB,EACrCsB,IAAI,SAAUtB,EAAGC,GAAK,MAAQ,CAAEsB,MAAOvB,EAAGN,IAAKK,EAASE,MACxDuB,OAAO,SAAUxB,GAAK,OAAoB,IAAbA,EAAEuB,QAC/BlC,QAAQ,SAAUW,GACnBoB,EAAWlB,KAAKnC,EAASA,EAAS,GAAIiB,EAAM6B,MAAMY,KAAK,SAAUC,GAAQ,OAAOA,EAAKZ,KAAOO,KAAU,CAAEP,GAAId,EAAEuB,MAAO5B,OAAQK,EAAEN,WAEnIS,QAAQC,IAAI,iBACZgB,EAAW/B,QAAQ,SAAUW,GAAK,OAAOG,QAAQC,IAAIJ,KACrDG,QAAQC,IAAI,iBACZQ,EAAOvB,QAAQ,SAAUW,EAAGqB,GACxBlB,QAAQC,IAAIiB,EAAM,QAAUrB,KAEhC,IAAI2B,EAAWtB,EAAUC,OAAO,SAAUC,EAAKP,GAC3C,QAA2BiB,IAAvBL,EAAOM,IAAIlB,EAAES,MACb,MAAM,IAAIU,MAAM,kBAYhB,OATeP,EAAOM,IAAIlB,EAAES,MAAMe,OAAO,SAAUV,GAAM,OAAe,IAARA,IACvDzB,QAAQ,SAAUyB,GACvB,IAAIc,EAAW1C,EAAKgC,IAAIlB,EAAEL,QAC1BY,EAAIL,KAAK,CACLO,KAAMK,EACNJ,GAAIE,EAAOM,IAAIlB,EAAEU,IAAIkB,GACrBjB,MAAOX,EAAEW,UAGVJ,GAEZ,IAAI/C,OACP2C,QAAQC,IAAI,YACZuB,EAAStC,QAAQ,SAAUW,GAAK,OAAOG,QAAQC,IAAIJ,KACnDG,QAAQC,IAAI,YACZD,QAAQC,IAAI,cACZ,IAAIyB,EAAa7C,EAAMF,gBAAgBwC,IAAI,SAAUtB,GAAK,OAAOhB,EAAM6B,MAAMb,EAAEc,MAC3EgB,EAAa,GACjBD,EAAWxC,QAAQ,SAAUW,GAAK,IAAI+B,EAAI,OAAmC,QAA3BA,EAAKnB,EAAOM,IAAIlB,EAAEc,WAAwB,IAAPiB,OAAgB,EAASA,EAAGP,OAAO,SAAUxB,GAAK,OAAc,IAAPA,IAAaX,QAAQ,SAAUW,GAAK,OAAO8B,EAAW5B,KAAKkB,EAAWK,KAAK,SAAUC,GAAQ,OAAOA,EAAKZ,KAAOd,SAC9P6B,EAAWxC,QAAQ,SAAUW,GAAK,OAAOG,QAAQC,IAAIJ,KACrDG,QAAQC,IAAI,uBACZ,IAAI4B,EAAa,GACjBL,EAASM,KAAK,SAAUC,EAAG9E,GAAK,OAAO8E,EAAEzB,KAAOrD,EAAEqD,MAAQyB,EAAExB,GAAKtD,EAAEsD,KACnEP,QAAQC,IAAI,kBACZuB,EAAStC,QAAQ,SAAUW,GAAK,OAAOG,QAAQC,IAAIJ,KACnDG,QAAQC,IAAI,kBACZ,IAAK,IAAIjC,EAAI,EAAGA,EAAIwD,EAASrD,OAAQH,IAAK,CAItC,IAHA,IAAIoC,EAAM,GAEN4B,EAAIhE,EACDgE,EAAIR,EAASrD,QAAUqD,EAASxD,GAAGsC,OAASkB,EAASQ,GAAG1B,MAAQkB,EAASxD,GAAGuC,KAAOiB,EAASQ,GAAGzB,IAClGH,EAAIL,KAAK,CAAES,MAAOgB,EAASQ,GAAGxB,QAC9BwB,IAEJhE,EAAIgE,EAAI,EACRH,EAAW9B,KAAK,CACZO,KAAMkB,EAASxD,GAAGsC,KAClBC,GAAIiB,EAASxD,GAAGuC,GAChBnB,YAAa,IAAI6C,IAAI,CAAC7B,MA+H9B,OAhHAJ,QAAQC,IAAI,mBACZ4B,EAAW3C,QAAQ,SAAUW,GACzBG,QAAQC,IAAIJ,KAEhBG,QAAQC,IAAI,mBA4GL,CACHiC,UAAW,CAAEjD,MAAO4C,EAAYnB,MAAOO,GACvCkB,MAAOR,IAGf9C,EAAMuD,KAAOvD,EAAMwD,OACnBxD,EAAMyD,IAAMzD,EAAM0D,MACX1D,EAEX,OAjPAhC,EAAU2B,EAAOC,GAiPVD,EAlPgB,CADJgE,EAAQ,KAoPZC,gBACnBnE,EAAQE,MAAQA,EAiChB,IAgCIuD,EAhCM,IAAIvD,EAAM,CAChBkC,MAAO,CACH,CAAEC,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,IAEtBzD,MAAO,CAaH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,KAAO,CAAEgB,MAAO,IAAKhB,OAAQ,SAC5F,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,WAEpE,CAAC,CAAEmB,GAAI,EAAG+B,SAAS,IAAU,IAIpB5D,eACZkB,QAAQC,IAAI8B,qCChVZ,IAAIlF,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IACIoE,EAAuB,SAAUlE,GAEjC,SAASkE,EAAMjE,EAAOC,EAAiBC,GACnC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,EAAiBC,IAAU9B,KAsChE,OArCA+B,EAAM+D,QAAU,WACZ/D,EAAMgE,aAAe,EACrBhE,EAAMiE,YAAc,GACpBjE,EAAMkE,YAAc,GACpBlE,EAAMF,gBAAgBO,QAAQ,SAAUkC,GACpCvC,EAAMkE,YAAYhD,KAAK,CACnBiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,SAI7C9B,EAAMqE,aAAe,WACjB,IAAIC,EAAW,IAAInE,IACnBH,EAAM6B,MAAMxB,QAAQ,SAAUqC,GAAQ,OAAO4B,EAASzD,IAAI6B,EAAKZ,GAAI,CAAEA,GAAIY,EAAKZ,GAAI+B,QAASnB,EAAKmB,QAASlD,OAAQ+B,EAAK/B,WACtH,IAAI4D,EAAavE,EAAMI,MAAMkC,IAAI,SAAUhC,GACvC,IAAIkE,EAAiB,IAAIpB,IACrBqB,EAAe,GAMnB,OALAnE,EAAKC,YAAYF,QAAQ,SAAUW,GAAK,OAAOA,EAAEX,QAAQ,SAAUI,GAC/D,IAAIsC,EACJ0B,EAAavD,KAAK,CAAES,MAAOlB,EAAWkB,MAAOhB,OAAyC,QAAhCoC,EAAKuB,EAASpC,IAAI5B,EAAKoB,WAAwB,IAAPqB,OAAgB,EAASA,EAAGpC,aAE9H6D,EAAeE,IAAID,GACZ,CAAEhD,KAAMnB,EAAKmB,KAAMC,GAAIpB,EAAKoB,GAAInB,YAAaiE,KAGxD,OADArD,QAAQC,IAAI,OAAQpB,EAAMF,iBACnB,CACHuD,UAAW,CAAEjD,MAAOmE,EAAY1C,MAAO7B,EAAM6B,MAAMS,IAAI,SAAUI,GAAQ,MAAQ,CAAEZ,GAAIY,EAAKZ,GAAI+B,QAASnB,EAAKmB,YAC9GP,MAAOtD,EAAMF,gBAAgBwC,IAAI,SAAUqC,GAAa,MAAQ,CAAE7C,GAAI6C,EAAU7C,GAAI+B,QAASc,EAAUd,aAG/G7D,EAAMuD,KAAOvD,EAAMwD,OAOnBxD,EAAMyD,IAAMzD,EAAM0D,MACX1D,EAEX,OA1CAhC,EAAU8F,EAAOlE,GA0CVkE,EA3CgB,CADJH,EAAQ,KA6CZC,gBACnBnE,EAAQqE,MAAQA,oCC5DhBrE,EAAQC,YAAa,EACrB,IAAIkF,EAAuB,WACvB,SAASA,EAAMC,QACM,IAAbA,IAAuBA,EAAWC,KACtC7G,KAAK4G,SAAWA,EAChB5G,KAAK8G,QAAU,GA0BnB,OAxBAH,EAAM/F,UAAUqC,KAAO,SAAU8D,GAC7B,GAAI/G,KAAK6C,SAAW7C,KAAK4G,SACrB,MAAM1C,MAAM,6DAEhBlE,KAAK8G,QAAQ7D,KAAK8D,IAEtBJ,EAAM/F,UAAUoG,IAAM,WAClB,OAAOhH,KAAK8G,QAAQE,OAExBL,EAAM/F,UAAUqG,KAAO,WACnB,OAAOjH,KAAK8G,QAAQ9G,KAAK6C,OAAS,IAEtC8D,EAAM/F,UAAUiC,KAAO,WACnB,OAAO7C,KAAK8G,QAAQzF,QAExBsF,EAAM/F,UAAUsG,WAAa,WACzB,IAAIC,EAAO,GAEX,OADAnH,KAAK8G,QAAQ1E,QAAQ,SAAUkC,GAAS,OAAO6C,EAAKlE,KAAKqB,KAClD6C,GAEXR,EAAM/F,UAAUwG,MAAQ,SAAUC,GAE9B,OADArH,KAAK8G,QAAQ1E,QAAQ,SAAUkC,GAAS,OAAO+C,EAAMpE,KAAKqB,KACnD+C,GAEJV,EA9BgB,GAgC3BnF,EAAQmF,MAAQA,oCCjChB,IAAI5G,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAazCI,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAEhCI,EAAQC,YAAa,EACrB,IAAI6F,EAAa5B,EAAQ,IACrBC,EAAgC,SAAUhE,GAE1C,SAASgE,EAAe/D,EAAOC,EAAiBC,GAC5C,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,IAAoB7B,KAmJzD,OAlJA+B,EAAMwF,YAAc,WAAc,YAA8CvD,IAAvCjC,EAAMyF,SAASvD,IAAIqD,EAAWG,MACvE1F,EAAM+D,QAAU,WACZ/D,EAAMgE,aAAe,EACrBhE,EAAMiE,YAAc,GACpBjE,EAAMkE,YAAc,GACpBlE,EAAMF,gBAAgBO,QAAQ,SAAUkC,GACpCvC,EAAMkE,YAAYhD,KAAK,CACnBiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,SAI7C9B,EAAM0D,MAAQ,WACV,IAGI/C,EAHAgF,EAAY,GAChB3F,EAAM4F,WAAa,GACnB5F,EAAM6F,sBAAwB,EAE9B,IAAK,IAAI1G,EAAI,EAAGA,EAAIa,EAAMD,MAAMT,OAAQH,IAAK,CACzC,IAAI2G,EAAM,CACN9B,aAAchE,EAAM6F,sBACpB3B,YAAalE,EAAMkE,YACnBD,YAAajE,EAAM4F,YAEnBG,EAAQ/F,EAAMgG,MAAMF,EAAKH,GAC7B3F,EAAM6F,sBAAwBC,EAAI9B,aAClC7C,QAAQC,IAAIpB,EAAM6F,uBAClB7F,EAAMkE,YAAc4B,EAAI5B,YACxBlE,EAAM4F,WAAaE,EAAI7B,YACvBtD,EAASoF,EAAMpF,OAEnB,MAAO,CACHsF,QAASjG,EAAM6F,sBACfK,QAASlG,EAAM4F,WACf/B,QAAS7D,EAAMmG,cAAcnG,EAAMkE,aACnCrC,MAAO7B,EAAMoG,QAAQpG,EAAMkE,aAC3BvD,OAAQA,EACRgF,UAAWA,IAGnB3F,EAAMqG,iBAAmB,SAAUC,EAAUC,GACzC,OAAOvG,EAAMwG,WAAWF,EAASnC,KAAKsC,QAASF,GAAIjE,IAAI,SAAUtB,GAiB7D,MAAQ,CAAEsF,SAPA,CACNnC,KAAMnD,EACNuF,GAXY,SAAUzE,GACtB,IAAI4E,EAMJ,OALA1G,EAAMyF,SAASpF,QAAQ,SAAUW,EAAGC,GAC5Ba,IAAOd,IACP0F,EAAMzF,KAGPyF,EAIHC,CAAUJ,GACdK,IAAK5G,EAAM6B,MAAMb,EAAEyF,SACnBhF,KAAMzB,EAAM6B,MAAMyE,EAASnC,KAAKsC,UAGX9F,OAAQK,EAAEL,WAG3CX,EAAM6G,kBAAoB,SAAUC,EAAWP,GAC3C,IAAIQ,EAAUD,EAAUxE,IAAI,SAAUtB,GAAK,OAAOhB,EAAMqG,iBAAiBrF,EAAGuF,KACxES,EAASD,EAAQzF,OAAO,SAAUC,EAAK0F,GAEvC,OADAA,EAAI5G,QAAQ,SAAU6G,GAAM,OAAO3F,EAAIL,KAAKgG,EAAGZ,YACxC/E,GACR,IACC4F,EAASJ,EAAQzF,OAAO,SAAUC,EAAK0F,GAOvC,OANAA,EAAI5G,QAAQ,SAAU6G,GAClB,QAAkBjF,IAAdiF,EAAGvG,OACH,MAAM,IAAIwB,MAAM,qBAEpBZ,EAAIL,KAAKgG,EAAGvG,UAETY,GACR,IAEH,OADAyF,EAAO3G,QAAQ,SAAUW,EAAGoG,GAAS,OAAOpG,EAAEL,OAASwG,EAAOC,KACvD,CAAEN,UAAWE,EAAQK,QAASF,IAEzCnH,EAAMgG,MAAQ,SAAUF,EAAKH,GACzB,IAAI5C,EACAuE,EAAW,GACXC,EAAQvH,EAAMyF,SAASvD,IAA6C,QAAxCa,EAAK/C,EAAMD,MAAM+F,EAAI9B,qBAAkC,IAAPjB,OAAgB,EAASA,EAAGR,OACxGiF,EAAgBxH,EAAM6G,kBAAkBf,EAAI5B,YAAaqD,GAC7DzB,EAAI5B,YAAcsD,EAAcV,UAChC,IAAIW,EAAgBzH,EAAMoG,QAAQN,EAAI5B,aAUtC,OATAuD,EAAcpH,QAAQ,SAAUqC,GAAQ,OAAO4E,EAASpG,KAAKwB,KAC7DoD,EAAI7B,YAAY/C,KAAK,CAAEW,MAAO4F,EAAelB,GAAIgB,IAC7CzB,EAAI5B,YAAY5E,OAAS,GACzBwG,EAAI9B,eAER7C,QAAQC,IAAI,mBACZD,QAAQC,IAAIkG,GACZnG,QAAQC,IAAI,mBACZuE,EAAUzE,KAAK,CAAEoG,SAAUA,IACpB,CACHrB,QAASH,EAAI9B,aACbkC,QAASJ,EAAI7B,YACbJ,QAAS7D,EAAMmG,cAAcL,EAAI5B,aACjCrC,MAAO4F,EACP9G,OAAQ6G,EAAcH,QACtBC,SAAUA,EACV3B,UAAWA,IAGnB3F,EAAMwD,OAAS,WACX,IAAIsC,EAAM,CACN9B,aAAchE,EAAMgE,aACpBE,YAAalE,EAAMkE,YACnBD,YAAajE,EAAMiE,aAEnB8B,EAAQ/F,EAAMgG,MAAMF,EAAK,IAI7B,OAHA9F,EAAMgE,aAAe8B,EAAI9B,aACzBhE,EAAMkE,YAAc4B,EAAI5B,YACxBlE,EAAMiE,YAAc6B,EAAI7B,YACjB,CACHgC,QAASF,EAAME,QACfC,QAASH,EAAMG,QACfrC,QAASkC,EAAMlC,QACfhC,MAAOkE,EAAMlE,MACblB,OAAQoF,EAAMpF,OACd2G,SAAUvB,EAAMuB,WAGxBtH,EAAM0H,SAAW,SAAU3H,GACvBC,EAAMD,MAAQ,GACdA,EAAMM,QAAQ,SAAUkC,GACpBvC,EAAMD,MAAMmB,KAAK,CAAEuF,QAASzG,EAAMyF,SAASvD,IAAIK,GAAQA,MAAOA,MAElEvC,EAAM+D,WAEV/D,EAAMkE,YAAc,GACpBpE,EAAgBO,QAAQ,SAAUkC,GAC9BvC,EAAMkE,YAAYhD,KAAK,CACnBiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,QAGzC9B,EAAM0H,SAAS3H,GACfC,EAAMgE,aAAe,EACrB7C,QAAQC,IAAI,UACZpB,EAAMyF,SAASpF,QAAQ,SAAUkC,EAAOF,GAAO,OAAOlB,QAAQC,IAAImB,EAAOF,KACzElB,QAAQC,IAAI,SACZpB,EAAMoE,WAAW/D,QAAQ,SAAUkC,GAAS,OAAOpB,QAAQC,IAAImB,KAC/DpB,QAAQC,IAAIpB,EAAMkE,aAClBlE,EAAM2H,OAAOtH,QAAQ,SAAUkC,GAC3BpB,QAAQC,MACRmB,EAAMlC,QAAQ,SAAUuH,GAAU,OAAOzG,QAAQC,IAAIwG,OAElD5H,EAyBX,OA9KAhC,EAAU4F,EAAgBhE,GAuJ1BgE,EAAe/E,UAAUgJ,gBAAkB,WACvC,IAAInB,GAAM,EAQV,OAPAzI,KAAK0J,OAAOtH,QAAQ,SAAUyH,GAAQ,OAAOA,EAAKzH,QAAQ,SAAU0H,GAChE,IAAIC,EAAUD,EAAM,GAChBE,EAAgBF,EAAMzG,OAAO,SAAUC,EAAK4C,GAAQ,OAAO5C,GAAQ4C,EAAK+D,YAAcF,EAAQE,YAAe,GAC7GH,EAAMzI,OAAS,GAAK2I,IACpBvB,GAAM,OAGPA,GAEX9C,EAAe/E,UAAUuH,QAAU,SAAUU,GACzC,IAAI9G,EAAQ/B,KACRkK,EAAW,GAKf,OAJArB,EAAUzG,QAAQ,SAAUkC,GACxB,IAAI6F,EAAOrJ,EAASA,EAAS,GAAIiB,EAAM6B,MAAMU,EAAM4B,KAAKsC,UAAW,CAAEhF,KAAMc,EAAMd,KAAMmF,IAAKrE,EAAMqE,IAAKL,GAAIhE,EAAMgE,GAAI5F,OAAQ4B,EAAM5B,OAAQ2E,WAAuBrD,IAAhBM,EAAM+C,WAAsBrD,EAAYM,EAAM+C,MAAMH,eACtMgD,EAASjH,KAAKkH,KAEXD,GAEXvE,EAAe/E,UAAUsH,cAAgB,SAAUW,GAC/C,OAAOA,EAAUxF,OAAO,SAAUC,EAAK9C,GAAK,OAAO8C,GAAO9C,EAAE0F,KAAKN,UAAY,IAE1ED,EA/KyB,CAgLlC2B,EAAW8C,UACb5I,EAAQmE,eAAiBA,oCC3MzB,IAAI5F,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IAAI4I,EAAe3E,EAAQ,IACvB4E,EAAe5E,EAAQ,IACvB6E,EAAqB,SAAU5I,GAE/B,SAAS4I,EAAI3I,EAAO4I,EAAgB1I,GAChC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAO4I,EAAgB1I,IAAU9B,KAyJ/D,OAxJA+B,EAAM0I,YAAc,WAChB1I,EAAM+D,UACN,IAAI4E,EAAU3I,EAAMkE,YAAY,GAAGC,KAAKsC,QASpCmC,EAAW,SAAUC,GAAS,OAAO,SAAUtC,GAAM,OAAO,SAAUzE,GACtE,OAAO+G,EAAMtC,GAAIzE,MAuCjBwD,EAAQ,GAERpE,EAAO,SAAUF,GAAK,OAAOsE,EAAMpE,KAAKF,IACxC8H,EAAO,GACPC,EAAQ,GACRC,EAAS,GACbhJ,EAAMoE,WAAW/D,QAAQ,SAAUsE,GAC/B,IAAIsE,EAAU,CAAEC,QAAS,EAAGxG,KAAM,CAAE+D,SAAU,EAAG3E,IAAK,EAAG+B,SAAS,IAC9Dc,EAAUd,SACVoF,EAAU,CAAEC,OAAQ,EAAGxG,KAAMiC,GAC7BoE,EAAM7H,KAAK+H,KAGXA,EAAU,CAAEC,OAAQ,EAAGxG,KAAMiC,GAC7BqE,EAAO9H,KAAK+H,IAEhBH,EAAK5H,KAAK+H,KAEd,IAAIE,EAAgBnJ,EAAM2H,OAAOrG,OAAO,SAAUC,EAAKuG,GACnD,OAAOvG,GAAOuG,EAAKxG,OAAO,SAAU8H,EAASrB,GAAS,OAAOqB,GAAWrB,EAAMzI,OAAS,GAAMiC,KAC9F,GACH,GAAIwH,EAAMzJ,OAAS,IAAM6J,EAErB,MAAM,IAAIZ,EAAac,eAG3B,IAAIC,EAAS,GACbA,EAAOpI,KAAK6H,GACZO,EAAOpI,KAAK8H,GACZ,IAAIH,EAlEe,SAAUC,GACzB,IAPoBS,EAOhBC,GAPgBD,EAOCT,EAPe,SAAUhH,GAC9C,OAAOyH,EAAMzH,KAOT+G,EAAQ,GASZ,OARA7I,EAAMyF,SAASpF,QAAQ,SAAUoJ,GAC7B,IAAIlI,EAAM,IAfN,SAAUgF,GAClB,IAAIhF,EAAM,GAEV,OADAvB,EAAM2H,OAAOtH,QAAQ,SAAUG,EAAGkJ,GAAM,OAAOnI,EAAIL,KAAKlB,EAAMwG,WAAWkD,EAAInD,GAAI,MAC1EhF,GAaUoI,CAAMF,GACZpJ,QAAQ,SAAUuJ,GACrBrI,EAAIL,KAAKsI,EAAOI,EAAKnD,YAEzBoC,EAAM3H,KAAKK,KAERsH,EAuDCgB,CAAaf,GACzB9I,EAAMyF,SAASpF,QAAQ,SAAUoJ,GAC7BH,EAAOjJ,QAAQ,SAAU8D,GAAQ,OAAOjD,EAAKiD,KAG7C,IAFA,IAAI2F,EAAUlB,EAASC,EAATD,CAAgBa,GAC1BM,EAzDqC,SAAUT,GAAU,OAAO,SAAUQ,GAAW,OAAO,SAAUP,GAC1G,IAAIS,EAASF,EAAQP,EAAM,GAAG7G,KAAK+D,SAASyC,OACxCe,EAAS,GACTC,EAAYZ,EAAOhK,OAAS,EAC5B6K,EAAO,GACXZ,EAAMlJ,QAAQ,SAAUkC,EAAO6E,GACvB0C,EAAQvH,EAAMG,KAAK+D,SAASyC,SAAWc,IACvCzH,EAAM2G,OAASgB,EACfC,EAAKjJ,KAAKqB,EAAMG,KAAK+D,SACrBwD,EAAO/I,KAAKqB,MAGpB,IAAK,IAAIpD,EAAI,EAAGA,EAAIoK,EAAMjK,OAAQH,IAC1BgL,EAAKC,SAASb,EAAMpK,GAAGuD,KAAK+D,WAC5B8C,EAAMc,OAAOlL,EAAG,GAChBA,KAGR,OAAI8K,EAAO3K,OAAS,GAChBgK,EAAOpI,KAAK+I,GACL,CAAEK,IAAKf,EAAOgB,IAAKN,IAEvB,CAAEK,IAAK,GAAIC,IAAK,MAmCJC,CAAoBlB,EAApBkB,CAA4BV,GACxCxE,EAAMhG,OAAS,GAAG,CACrB,IAAImL,EAlCmBnF,EAAMoF,QAmC7B,QAAazI,IAATwI,EACA,MAEJ,IAAIR,EAASF,EAAaU,GACtBR,EAAOK,IAAIhL,OAAS,IACpB4B,EAAK+I,EAAOK,KACZpJ,EAAK+I,EAAOM,SAIxB,IAAII,EAAc,SAAUpB,GAAS,OAAOA,EAAMjH,IAAI,SAAUsI,GAAK,MAAQ,CAAEzG,KAAMyG,EAAElI,SAEnFb,EAAQyH,EAAOhH,IAAI,SAAUiH,GAAS,MAAQ,CAAEzH,GAAIyH,EAAM,GAAGL,OAAQrF,QAAS7D,EAAMmG,cAAcwE,EAAYpB,OAC9GnJ,EAAQkJ,EAAOhI,OAAO,SAAUC,EAAKqJ,GAQrC,OAPA5K,EAAMyF,SAASpF,QAAQ,SAAUoJ,EAAIoB,GAHvB,IAAUtB,EAAOhD,EAI3BhF,EAAIL,KAAK,CACLO,KAAMmJ,EAAE,GAAG1B,OACXxH,IANgB6H,EAMAqB,EANOrE,EAMJkD,EANiBb,EAASC,EAATD,CAAgBrC,EAAhBqC,CAAoBW,EAAM,GAAG7G,KAAK+D,SAASyC,QAO/E3I,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAOkJ,UAGjCtJ,GACR,IACHnB,EAAM6C,KAAK,SAAUC,EAAG9E,GAAK,OAAO8E,EAAEzB,KAAOrD,EAAEqD,MAAQyB,EAAExB,GAAKtD,EAAEsD,KAEhE,IADA,IAAIoJ,EAAW,GACN3L,EAAI,EAAGA,EAAIiB,EAAMd,OAAQH,IAAK,CAUnC,IATA,IAAIoC,EAAM,GAEN4B,EAAIhE,EACJ4L,EAAU,WACV,IAAIvJ,EAAM,GACVpB,EAAM+C,GAAG5C,YAAYF,QAAQ,SAAUG,GAAK,OAAOA,EAAEH,QAAQ,SAAUW,GAAK,OAAOQ,EAAMR,EAAEW,UAC3FJ,EAAIL,KAAK,CAAES,MAAOH,IAClB2B,KAEGA,EAAI/C,EAAMd,QAAUc,EAAMjB,GAAGsC,OAASrB,EAAM+C,GAAG1B,MAAQrB,EAAMjB,GAAGuC,KAAOtB,EAAM+C,GAAGzB,IACnFqJ,IAEJ5L,EAAIgE,EAAI,EACR2H,EAAS5J,KAAK,CACVO,KAAMrB,EAAMjB,GAAGsC,KACfC,GAAItB,EAAMjB,GAAGuC,GACbnB,YAAa,IAAI6C,IAAI,CAAC7B,MAQ9B,MAAO,CAAE8B,UAAW,CAAExB,MAAOA,EAAOzB,MAAO0K,GAAYxH,MAD3CzB,EAJGyH,EAAO9G,OAAO,SAAUoI,GAEnC,OADWA,EAAEtI,IAAI,SAAUtB,GAAK,OAAOA,EAAE0B,KAAK+D,UAClC2D,SAASzB,KAEE,GAAG,GAAGO,OAAS,KAG9ClJ,EAAMuD,KAAO,WACT,IAAK3D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAMiL,YAEjBjL,EAAMyD,IAAM,WACR,IAAK7D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAMkL,WAEjBlL,EAAM0H,SAAS3H,GACRC,EAEX,OA7JAhC,EAAUwK,EAAK5I,GA6JR4I,EA9Jc,CA+JvBF,EAAa6C,YACf1L,EAAQ+I,IAAMA,oCChLd,IAAIxK,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IACI0L,EAAqB,SAAUxL,GAE/B,SAASwL,EAAIvL,EAAO4I,EAAgB1I,GAChC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAO4I,EAAgB1I,IAAU9B,KAC/D,GAAI+B,EAAMwF,cACN,MAAM,IAAIrD,MAAM,uBAEpB,OAAOnC,EAEX,OARAhC,EAAUoN,EAAKxL,GAQRwL,EATc,CADNzH,EAAQ,IAWZwH,YACf1L,EAAQ2L,IAAMA,oCC1Bd,IAAIpN,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAazCI,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAEhCI,EAAQC,YAAa,EACrB,IAAI2L,EAAgB1H,EAAQ,IACxB2H,EAAQ3H,EAAQ,IAChB4E,EAAe5E,EAAQ,IACvB4H,EAA0B,WAC1B,SAASA,IACLtN,KAAK8G,QAAU,CAAC,KAChB9G,KAAKuN,QAAU,EA8CnB,OA5CAD,EAAS1M,UAAU4M,WAAa,WAC5B,OAAOxN,KAAKuN,SAEhBD,EAAS1M,UAAU6M,MAAQ,WACvBzN,KAAK8G,QAAU,CAAC,KAChB9G,KAAKuN,QAAU,GAEnBD,EAAS1M,UAAU2K,OAAS,WACxB,OAAOvL,KAAK8G,QAAQ9G,KAAKuN,UAE7BD,EAAS1M,UAAU8M,WAAa,SAAUC,GACtC,IAAI5L,EAAQ/B,KACZ2N,EAAKvL,QAAQ,SAAUkC,GAAS,OAAOvC,EAAM6L,QAAQ,IAAKtJ,KAC1DtE,KAAKuN,QAAU,GAEnBD,EAAS1M,UAAUgN,QAAU,SAAUC,EAAMC,GACrC9N,KAAK8G,QAAQ9G,KAAKuN,WAAaM,IAC/B7N,KAAK8G,QAAQ9G,KAAKuN,SAAWO,EAC7B9N,KAAKuN,WAELvN,KAAKuN,UAAYvN,KAAK8G,QAAQzF,QAC9BrB,KAAK8G,QAAQ7D,KAAK,MAG1BqK,EAAS1M,UAAUmN,OAAS,SAAUF,EAAMC,GACxC,GAAqB,IAAjB9N,KAAKuN,QAAe,CAChBvN,KAAK8G,QAAQ9G,KAAKuN,WAAaM,IAC/B7N,KAAK8G,QAAQ9G,KAAKuN,SAAWO,EAC7B9N,KAAKuN,QAAU,GAEnB,IAAIS,EAAQ,CAAC,KACbhO,KAAK8G,QAAQ1E,QAAQ,SAAUkC,GAAS,OAAO0J,EAAM/K,KAAKqB,KAC1DtE,KAAK8G,QAAUkH,OAGXhO,KAAK8G,QAAQ9G,KAAKuN,WAAaM,IAC/B7N,KAAK8G,QAAQ9G,KAAKuN,SAAWO,EAC7B9N,KAAKuN,YAIjBD,EAAS1M,UAAUsG,WAAa,WAC5B,OAAOlH,KAAK8G,SAETwG,EAjDmB,GAmD9B9L,EAAQ8L,SAAWA,EACnB,IAAIW,EAAoB,SAAUtM,GAE9B,SAASsM,EAAGrM,EAAO4I,EAAgB1I,GAC/B,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAO4I,EAAgB1I,IAAU9B,KAiG/D,OAhGA+B,EAAMmM,IAAM,IAAIZ,EAChBvL,EAAMoM,OAAS,SAAUnG,EAASwD,EAAI4C,GAClC,IAEIC,EAFAhF,EAAW,GACX7F,EAAOzB,EAAMkE,YAAY,GAAGC,KAE5BoC,EAAK,GA6BT,OA5BAvG,EAAMwG,WAAWxG,EAAMkE,YAAY,GAAGC,KAAKsC,QAASgD,GAAIpJ,QAAQ,SAAUkC,GAClEA,EAAM2F,YAAclI,EAAMmM,IAAI3C,WAC1BjH,EAAMgK,OAASlB,EAAcmB,KAAKC,IAClCzM,EAAMmM,IAAIN,QAAQtJ,EAAM2F,UAAW3F,EAAMmK,UAAU,IACnDJ,EAAK/J,EAAMgK,KACXhG,EAAKhE,EAAM2F,WAEX3F,EAAMgK,OAASlB,EAAcmB,KAAKG,IAClC3M,EAAMmM,IAAIH,OAAOzJ,EAAM2F,UAAW3F,EAAMmK,UAAU,IAClDJ,EAAK/J,EAAMgK,KACXhG,EAAKhE,EAAM2F,WAEflI,EAAM4M,YAAY,CAAEzI,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,SAG7DuK,EAAQnL,KAAK,CACTW,MAAO,CAAC7B,EAAM6B,MAAM7B,EAAMkE,YAAY,GAAGC,KAAKsC,UAC9CF,GAAIA,IAERN,IACAqB,EAASpG,KAAK,CACVY,GAAI9B,EAAMkE,YAAY,GAAGC,KAAKrC,GAC9B+B,QAAS7D,EAAMkE,YAAY,GAAGC,KAAKN,QACnC0C,GAAIA,EACJ9E,KAAMA,EACNmF,IAAK5G,EAAMkE,YAAY,GAAGC,KAC1BoI,KAAMD,IAEH,CACHzK,MAAO,CAAC7B,EAAM6B,MAAM7B,EAAMkE,YAAY,GAAGC,KAAKsC,UAC9C5C,QAAS7D,EAAMkE,YAAY,GAAGC,KAAKN,QACnCoC,QAASA,EACTC,QAASmG,EACTQ,OAAQ7M,EAAMmM,IAAIhH,aAClBqG,QAASxL,EAAMmM,IAAIV,aACnBnE,SAAUA,IAGlBtH,EAAM+D,QAAU,WACZ/D,EAAMgE,aAAe,EACrBhE,EAAMiE,YAAc,GACpBjE,EAAMkE,YAAc,GACpBlE,EAAMmM,IAAIT,QACV1L,EAAMkE,YAAc,CAAC,CACbC,KAAMnE,EAAMoE,WAAWlC,IAAIlC,EAAMF,gBAAgB,GAAGgC,OAGhE9B,EAAM8M,OAAS,WACX,MAAM3K,MAAM,WAEhBnC,EAAM0H,SAAW,SAAU3H,GACvBC,EAAMD,MAAQ,GAEdC,EAAMmM,IAAIT,QACV1L,EAAMmM,IAAIR,WAAW5L,GACrBC,EAAMgE,aAAe,EACrBhE,EAAMiE,YAAc,GACpBjE,EAAMkE,YAAc,GACpBlE,EAAMkE,YAAc,CAAC,CACbC,KAAMnE,EAAMoE,WAAWlC,IAAIlC,EAAMF,gBAAgB,GAAGgC,MAE5DX,QAAQC,IAAIpB,EAAMkE,cAEtBlE,EAAM+M,OAAS,WACX5L,QAAQC,IAAI,SACZ,IAAIsF,EAAM1G,EAAMoM,OAAOpM,EAAMgE,aAAc,EAAGhE,EAAMiE,aAMpD,OALAjE,EAAMgE,aAAe0C,EAAIT,QACzBjG,EAAMiE,YAAcyC,EAAIR,QACuB,KAA3CQ,EAAIR,QAAQQ,EAAIR,QAAQ5G,OAAS,GAAGiH,KACpCG,EAAI7E,MAAQ,IAET9C,EAASA,EAAS,GAAI2H,GAAM,CAAEmG,OAAQ7M,EAAMmM,IAAIhH,gBAE3DnF,EAAMuD,KAAO,WACT,IAAKvD,EAAM6H,kBACP,MAAM,IAAIU,EAAayC,iBAE3B,OAAOhL,EAAM+M,UAEjB/M,EAAMyD,IAAM,WACR,IAAKzD,EAAM6H,kBACP,MAAM,IAAIU,EAAayC,iBAE3B,OAAOhL,EAAM8M,UAEjB9M,EAAMgN,eAAenN,GACrBG,EAAMmM,IAAIR,WAAW5L,GACrBC,EAAMkE,YAAc,CAAC,CACbC,KAAMnE,EAAMoE,WAAWlC,IAAIlC,EAAMF,gBAAgB,GAAGgC,MAErD9B,EA6CX,OAhJAhC,EAAUkO,EAAItM,GAqGdsM,EAAGrN,UAAUmO,eAAiB,SAAUnN,GACpC,IAAIoN,GAAU,EASd,GARApN,EAAMO,MAAMC,QAAQ,SAAUkC,GAAS,OAAOA,EAAMhC,YAAYF,QAAQ,SAAUuH,GAC9EA,EAAOvH,QAAQ,SAAU6M,GACrB,IAAInK,EAAIoK,GACyB,QAA3BpK,EAAKmK,EAAOR,iBAA8B,IAAP3J,OAAgB,EAASA,EAAGzD,UAAwC,QAA3B6N,EAAKD,EAAOR,iBAA8B,IAAPS,OAAgB,EAASA,EAAG7N,QAAU,IACvJ2N,GAAU,UAIjBA,EACD,MAAM9K,MAAM,eAGpB+J,EAAGrN,UAAUuO,MAAQ,WACjB,OAAOnP,KAAKiG,YAAY,IAE5BgI,EAAGrN,UAAU+N,YAAc,SAAUS,GACjCpP,KAAKiG,YAAY,GAAKmJ,GAE1BnB,EAAGrN,UAAUgJ,gBAAkB,WAC3B,IAAInB,GAAM,EAoBV,OAnBAzI,KAAK0J,OAAOtH,QAAQ,SAAUyH,GAAQ,OAAOA,EAAKzH,QAAQ,SAAU0H,GAChE,IAAIC,EAAUD,EAAM,GAUhBE,EAAgBF,EAAMzG,OAAO,SAAUC,EAAK4C,EAAMiD,GAClD,OAAiB,IAAVA,IACF7F,GAAQ4C,EAAK+D,YAAcF,EAAQE,YAXnBoF,EAWyCnJ,EAAKuI,UAXrCa,EAWgDvF,EAAQ0E,aAVjFY,IAAYC,IAGbD,EAAQhO,SAAWiO,EAAQjO,QAGxBgO,EAAQhM,OAAO,SAAUC,EAAKP,EAAGoG,GAAS,OAAO7F,GAAO+L,EAAQlG,KAAWmG,EAAQnG,KAAW,KAP1F,IAAUkG,EAASC,IAY/B,GACCxF,EAAMzI,OAAS,GAAK2I,IACpBvB,GAAM,OAGPA,GAEJwF,EAjJa,CAkJtBZ,EAAMkC,KACR/N,EAAQyM,GAAKA,oCCnOb,IAAIlO,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IAAI4L,EAAQ3H,EAAQ,IAChB4E,EAAe5E,EAAQ,IACvB8J,EAAsB,SAAU7N,GAEhC,SAAS6N,EAAK5N,EAAO4I,EAAgB1I,EAAO2N,GACxC,IAAI1N,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAO4I,EAAgB1I,EAAO2N,IAAYzP,KAgBxE,OAbA+B,EAAMuD,KAAO,WACT,IAAK3D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAM2N,WAEjB3N,EAAMyD,IAAM,WACR,IAAK7D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAM4N,UAEjB5N,EAAM0H,SAAS3H,GACRC,EAKX,OAvBAhC,EAAUyP,EAAM7N,GAuBT6N,EAxBe,CAyBxBnC,EAAMkC,KACR/N,EAAQgO,KAAOA,oCC1Cf,IAAIzP,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IAAI6I,EAAe5E,EAAQ,IAEvBkK,EAAwB,SAAUjO,GAElC,SAASiO,EAAOhO,EAAOC,EAAiBC,GACpC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,EAAiBC,IAAU9B,KAahE,OAZA+B,EAAMuD,KAAO,WACT,IAAK3D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAMwD,UAEjBxD,EAAMyD,IAAM,WACR,IAAK7D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAM0D,SAEV1D,EAEX,OAjBAhC,EAAU6P,EAAQjO,GAiBXiO,EAlBiB,CADdlK,EAAQ,KAoBZhE,OACVF,EAAQoO,OAASA,EACjB,IAAIC,EAAM,IAAID,EAAO,CACjBhM,MAAO,CACH,CAAEC,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,IAEtBzD,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,WAEpE,CAAC,CAAEmB,GAAI,EAAG+B,SAAS,IAAU,IAChC1C,QAAQC,IAAI0M,EAAIjG,qDC/ChB,IAAI7J,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IAAI6I,EAAe5E,EAAQ,IAEvBoK,EAAwB,SAAUnO,GAElC,SAASmO,EAAOlO,EAAOC,EAAiBC,GACpC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,EAAiBC,IAAU9B,KAahE,OAZA+B,EAAMuD,KAAO,WACT,IAAK3D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAMwD,UAEjBxD,EAAMyD,IAAM,WACR,IAAK7D,EAAOf,UAAUgJ,gBAAgBtI,KAAKS,GACvC,MAAM,IAAIuI,EAAayC,iBAE3B,OAAOhL,EAAM0D,SAEV1D,EAEX,OAjBAhC,EAAU+P,EAAQnO,GAiBXmO,EAlBiB,CADdpK,EAAQ,KAoBZG,OACVrE,EAAQsO,OAASA,EACjB,IAAID,EAAM,IAAIC,EAAO,CACjBlM,MAAO,CACH,CAAEC,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,GAClB,CAAE/B,GAAI,EAAG+B,SAAS,IAEtBzD,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,WAEvD,CAAC,CAAEG,GAAI,EAAG+B,SAAS,IAAU,IAChC1C,QAAQC,IAAI0M,EAAIjG,gHChDhB,IAAI9I,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAEhCI,EAAQC,YAAa,EACrBD,EAAQuO,IAAM,CAAEnK,SAAS,EAAO4C,SAAU,EAAG3E,IAAK,GAClDrC,EAAQiG,IAAM,UACdjG,EAAQwO,OAAS,KACjB,IAAI5F,EAA0B,WAC1B,SAASA,EAASxI,EAAOC,GACrB,IAAIE,EAAQ/B,KACZA,KAAK8B,MAAQ,GACb9B,KAAKwH,SAAW,IAAItF,IACpBlC,KAAKmG,WAAa,IAAIjE,IACtBlC,KAAK6B,gBAAkB,GACvB7B,KAAKmC,MAAQ,GACbnC,KAAK+F,aAAe,EACpB/F,KAAK4H,sBAAwB,EAC7B5H,KAAKgG,YAAc,GACnBhG,KAAK2H,WAAa,GAClB3H,KAAK0J,OAAS,GACd1J,KAAKiQ,iBAAmB,SAAUC,GAC9B,MAAM,IAAIhM,MAAM,kBAEpBlE,KAAKmQ,SAAW,WACZ,MAAM,IAAIjM,MAAM,mBAEpBlE,KAAKyK,YAAc,WACf,MAAM,IAAIvG,MAAM,mBAEpBlE,KAAKoG,aAAe,WAChB,MAAM,IAAIlC,MAAM,oBAEpBlE,KAAKgC,aAAe,WAChB,MAAM,IAAIkC,MAAM,oBAEpBlE,KAAKoQ,YAAc,WACf,OAAOrO,EAAMsO,YAAYxM,IAE7B7D,KAAKsQ,mBAAqB,WACtB,OAAOvO,EAAMF,iBAEjBD,EAAMO,MACD6C,KAAK,SAAUC,EAAG9E,GAAK,OAAO8E,EAAEzB,KAAOrD,EAAEqD,OACzCpB,QAAQ,SAAUkC,GAAS,OAAOvC,EAAMI,MAAMc,KAAK,CACpDX,iBAAmC0B,IAAtBM,EAAMhC,YAA4B,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,OAAUY,EAAMhC,YAClFkB,KAAMc,EAAMd,KACZC,GAAIa,EAAMb,GACV8M,WAAY,OAShB,IAPA,IAAIzD,EAAU,SAAU5L,GACpBsP,EAAOrO,MAAMjB,GAAGqP,WAAa,GAC7BC,EAAOrO,MAAMjB,GAAGoB,YAAYF,QAAQ,SAAUkC,GAC1C,OAAOA,EAAMlC,QAAQ,SAAUuH,GAAU,OAAO5H,EAAMI,MAAMjB,GAAGqP,WAAWtN,KAAK0G,QAGnF6G,EAASxQ,KACJkB,EAAI,EAAGA,EAAIlB,KAAKmC,MAAMd,OAAQH,IACnC4L,EAAQ5L,GAEZlB,KAAKyQ,uBACLzQ,KAAK0Q,uBAAuB9O,EAAMgC,OAClC5D,KAAK6B,gBAAkBA,EACvB7B,KAAKqQ,YAAcxO,EAAgB,GACnC7B,KAAK4D,MAAQhC,EAAMgC,MACnB5D,KAAK2Q,eA+ET,OA7EAvG,EAASxJ,UAAUgQ,SAAW,WAC1B,OAAO5Q,KAAK8B,OAEhBsI,EAASxJ,UAAUiQ,YAAc,WAC7B,OAAO7Q,KAAKwH,UAEhB4C,EAASxJ,UAAU6P,qBAAuB,WAGtC,IAFA,IAAI1O,EAAQ/B,KACR8Q,EAAc,IAAI3L,IACb4L,EAAM,EAAGA,EAAM/Q,KAAKmC,MAAMd,OAAQ0P,IACvC/Q,KAAKmC,MAAM4O,GAAKR,WAAWnO,QAAQ,SAAUkC,GACrB,KAAhBA,EAAMZ,OACNoN,EAAYrK,IAAInC,EAAMZ,SAIlC,IAAIxC,EAAI,EACR4P,EAAY1O,QAAQ,SAAUkC,GACZ,KAAVA,IACAvC,EAAMyF,SAAS5E,IAAI0B,EAAOpD,GAC1BA,QAIZkJ,EAASxJ,UAAU8P,uBAAyB,SAAU9M,GAClD,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAMvC,OAAQH,IAC9BlB,KAAKmG,WAAWvD,IAAIgB,EAAM1C,GAAG2C,GAAI,CAC7BA,GAAID,EAAM1C,GAAG2C,GACb+B,QAAShC,EAAM1C,GAAG0E,QAClB4C,QAAStH,EACTwB,OAAQkB,EAAM1C,GAAGwB,UAI7B0H,EAASxJ,UAAU+P,aAAe,WAC9B,IAAK,IAAIzP,EAAI,EAAGA,EAAIlB,KAAKmG,WAAWtD,KAAM3B,IAAK,CAC3ClB,KAAK0J,OAAOxI,GAAK,GACjB,IAAK,IAAIgE,EAAI,EAAGA,EAAIlF,KAAKwH,SAAS3E,KAAMqC,IACpClF,KAAK0J,OAAOxI,GAAGgE,GAAK,GAI5B,IAAShE,EAAI,EAAGA,EAAIlB,KAAKmC,MAAMd,OAAQH,IACnC,KAAI8P,EAAgBhR,KAAKmG,WAAWlC,IAAIjE,KAAKmC,MAAMjB,GAAGsC,MAClDyN,EAAcjR,KAAKmG,WAAWlC,IAAIjE,KAAKmC,MAAMjB,GAAGuC,IACpD,IAASyB,EAAI,EAAGA,EAAIlF,KAAKmC,MAAMjB,GAAGqP,WAAWlP,OAAQ6D,IAAK,CACtD,IAAIgM,EAAWlR,KAAKwH,SAASvD,IAAIjE,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGxB,OAI7D,QAAiBM,IAAbkN,EAAJ,CAGAhO,QAAQC,IAAI+N,GACZhO,QAAQC,IAAInD,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGxB,OACxC,IAAIyN,EAAQnR,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAG+E,UACpCmH,EAAQpR,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGuJ,UACpCJ,EAAKrO,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGoJ,KACjC5L,OAAgDsB,IAAvChE,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGxC,OAAuBuO,EAAYvO,OAAS1C,KAAKmC,MAAMjB,GAAGqP,WAAWrL,GAAGxC,YACnGsB,IAAVmN,QAAiCnN,IAAVoN,GAAiC,KAAVD,GAAiC,IAAjBC,EAAM/P,SACpE8P,EAAQ3P,EAAQiG,IAChB2J,EAAQ,CAAC5P,EAAQiG,MAGrBzH,KAAK0J,OAAOsH,EAAcxI,SAAS0I,GAAUjO,KAAKnC,EAASA,EAAS,GAAImQ,GAAc,CAAEhH,UAAWkH,EAAO1C,UAAW2C,EAAO9C,KAAMD,EAAI3L,OAAQA,OAGtJ1C,KAAKwH,SAASpF,QAAQ,SAAUkC,EAAOF,GAAO,OAAOlB,QAAQC,IAAImB,EAAO,IAAKF,KAC7EpE,KAAKmG,WAAW/D,QAAQ,SAAUkC,GAAS,OAAOpB,QAAQC,IAAImB,KAC9DtE,KAAK0J,OAAOtH,QAAQ,SAAUkC,GAC1BpB,QAAQC,MACRmB,EAAMlC,QAAQ,SAAUuH,GAAU,OAAOzG,QAAQC,IAAIwG,QAG7DS,EAASxJ,UAAU2H,WAAa,SAAUrH,EAAGgE,GACzC,OAAOlF,KAAK0J,OAAOxI,GAAGgE,IAEnBkF,EAxImB,GA0I9B5I,EAAQ4I,SAAWA,ghBChJbiH,8JAKF,WACI,IAAAC,EAAmEtR,KAAKuR,MAAjEC,EAAPF,EAAOE,QAAS9N,EAAhB4N,EAAgB5N,MAAO+N,EAAvBH,EAAuBG,MAAOC,EAA9BJ,EAA8BI,UAAWC,EAAzCL,EAAyCK,SAAaC,EAAtDxR,OAAAyR,EAAA,EAAAzR,CAAAkR,EAAAQ,GAEA,OACIC,EAAA9M,EAAA+M,cAACC,EAAA,EAAD7R,OAAAW,OAAA,CAAO2Q,UAAS,kBAAAQ,OAAoBV,EAAU,GAAK,WAAnC,KAAAU,OAAiDR,GAC1DS,QAAQ,WACRV,MAAOA,GACHG,GAEPG,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,4BACXK,EAAA9M,EAAA+M,cAAA,WACID,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MACfzO,IAITqO,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,0BACVC,YAtBIU,IAAMC,WAA7BjB,EACKkB,aAAe,CAClBf,SAAS,GA4BFH,qDC2FAmB,oDAvGX,SAAAA,EAAYjB,GAAyB,IAAAkB,EAAAC,EAAAC,EAAAC,EAAA7Q,EAAA,OAAA3B,OAAAyS,EAAA,EAAAzS,CAAAJ,KAAAwS,IACjCzQ,EAAAJ,EAAAL,KAAAtB,KAAMuR,IAuBVuB,cAAgB,SAACC,GACW,OAApBhR,EAAKwP,MAAM9M,OACX1C,EAAKwP,MAAMyB,gBAAgBjR,EAAKwP,MAAM9M,KAAKZ,GAAIkP,EAAME,OAAO3O,OAC5DvC,EAAKmR,SAAS,CAAEC,MAAOJ,EAAME,OAAO3O,UA3BPvC,EA+BrCqR,iBAAmB,SAACL,GACQ,OAApBhR,EAAKwP,MAAM9M,OACX1C,EAAKwP,MAAM8B,mBAAmBtR,EAAKwP,MAAM9M,KAAKZ,GAAIkP,EAAME,OAAOK,SAC/DvR,EAAKmR,SAAS,CAAEtN,QAASmN,EAAME,OAAOK,SAAW,kBAAMvR,EAAKwP,MAAMgC,qBAlCrCxR,EAsCrCyR,mBAAqB,SAACT,GACM,OAApBhR,EAAKwP,MAAM9M,MAAkB1C,EAAKwP,MAAM9M,KAAKmB,UAC7C7D,EAAKwP,MAAMkC,qBAAqB1R,EAAKwP,MAAM9M,KAAKZ,GAAIkP,EAAME,OAAOK,SACjEvR,EAAKmR,SAAS,CAAEQ,UAAWX,EAAME,OAAOK,SAAW,kBAAMvR,EAAKwP,MAAMgC,qBAzCvCxR,EA6CrC4R,cAAgB,WACY,OAApB5R,EAAKwP,MAAM9M,MACX1C,EAAKwP,MAAMqC,WAAW7R,EAAKwP,MAAM9M,KAAKZ,KA5C1C9B,EAAK8R,MAAQ,CACTC,WAAU,QAAArB,EAAE1Q,EAAKwP,MAAM9M,YAAb,IAAAgO,OAAA,EAAEA,EAAiB5O,GAC7BsP,OAAO,QAAAT,EAAA3Q,EAAKwP,MAAM9M,YAAX,IAAAiO,OAAA,EAAAA,EAAiBS,QAAS,GACjCvN,SAAS,QAAA+M,EAAA5Q,EAAKwP,MAAM9M,YAAX,IAAAkO,OAAA,EAAAA,EAAiB/M,WAAW,EACrC8N,WAAW,QAAAd,EAAA7Q,EAAKwP,MAAM9M,YAAX,IAAAmO,OAAA,EAAAA,EAAiBc,aAAa,GAPZ3R,wDAWrC,SAAmBgS,EAAuCC,GAAuC,IAAAC,EAC3CC,EAAAC,EAAAC,EAAAC,GAA9C,QAAAJ,EAAAjU,KAAKuR,MAAM9M,YAAX,IAAAwP,OAAA,EAAAA,EAAiBpQ,MAAOmQ,EAAUF,YAClC9T,KAAKkT,SAAS,CACVC,OAAO,QAAAe,EAAAlU,KAAKuR,MAAM9M,YAAX,IAAAyP,OAAA,EAAAA,EAAiBf,QAAS,GAGjCvN,SAAS,QAAAuO,EAAAnU,KAAKuR,MAAM9M,YAAX,IAAA0P,OAAA,EAAAA,EAAiBvO,WAAW,EACrC8N,WAAW,QAAAU,EAAApU,KAAKuR,MAAM9M,YAAX,IAAA2P,OAAA,EAAAA,EAAiBV,aAAa,EACzCI,WAAU,QAAAO,EAAErU,KAAKuR,MAAM9M,YAAb,IAAA4P,OAAA,EAAEA,EAAiBxQ,2BAgCzC,WACI,OACIkO,EAAA9M,EAAA+M,cAACsC,EAAD,CAAgB5Q,MAAM,yDAAY8N,QAA6B,OAApBxR,KAAKuR,MAAM9M,MAClDsN,EAAA9M,EAAA+M,cAACuC,EAAA,EAAD,KAEIxC,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CACIrB,MAAM,qBACNtQ,KAAK,QACLyB,MAAOtE,KAAK6T,MAAMV,MAClBsB,SAAUzU,KAAK8S,iBAIvBf,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAAC0C,EAAA,EAAD,CACIC,QACI5C,EAAA9M,EAAA+M,cAAC4C,EAAA,EAAD,CACItB,QAAStT,KAAK6T,MAAMH,UACpBe,SAAUzU,KAAKwT,qBAGvBL,MAAO,4DAIfpB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAAC0C,EAAA,EAAD,CACIC,QACI5C,EAAA9M,EAAA+M,cAAC4C,EAAA,EAAD,CACItB,QAAStT,KAAK6T,MAAMjO,QACpB6O,SAAUzU,KAAKoT,mBAGvBD,MAAM,wEAIdpB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACIC,QAAS9U,KAAK2T,eADlB,wDA3FEtB,IAAMC,2CCnB1ByC,EAAc,SAACC,GAAD,OAAqB,SAAC1Q,GAAD,OAAmBA,IAAUmD,MAAMuN,EAAU1Q,IAEhF2Q,EAAe,SAACD,GAAD,OAAqB,SAACE,GACvC,OAAOA,EAAO7Q,IAAI,SAAAtB,GAAC,OAAKgS,EAAYC,EAAZD,CAAqBhS,KAAIoS,KAAK,OAGpDC,EAAQ,SAAC9Q,GAAD,OAA2B,IAAVA,EAAc,IAAM,KAEtC+Q,EAAqB,SAAC/S,EAAsCgT,GAqBrE,IApBA,IAAMC,EAAY,WACd,IAAIC,EAAc,EAalB,YAZoBxR,IAAhB1B,GACAA,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAAAuH,GACV,QAAyB3F,IAArB2F,EAAOM,gBAAgDjG,IAArB2F,EAAO8E,UAAyB,CAClE,IAAMgH,EAAcC,KAAKF,IAALjU,MAAAmU,KAAItV,OAAAuV,EAAA,EAAAvV,CAAQuJ,EAAO8E,UAAUpK,IAAI,SAAAuR,GAAC,OAAIA,IAAMnO,MAAM,EAAImO,EAAEvU,UAApD6Q,OAAA,CAA6D,KAC/E2D,EAAclM,EAAOjG,QAAU+D,MAAM,EAAIkC,EAAOjG,MAAMrC,OACtDyU,EAAcnM,EAAOM,YAAcxC,MAAM,EAAIkC,EAAOM,UAAU5I,OACpEmU,EAAME,KAAKF,IAALjU,MAAAmU,KAAItV,OAAAuV,EAAA,EAAAvV,CAAQ,CAACqV,EAAKI,EAAKC,EAAKN,GAAKnR,IAAI,SAAAuR,GAAC,OAAIA,KAAtC1D,OAAA,CAA0C,UAK7DsD,GAGPO,EAAM,GAGD7U,EAAI,EAAGA,EAFD,EAEKqU,IAAuBrU,IACvC6U,GAAO,IAGX,IAAMC,EAAWjB,EAAY,UACvBkB,EAAYhB,EAAa,UAI3BiB,EAAM,IAFVH,EAAe,OAATT,EAAgB,UAAYS,GAsClC,YAnCoB/R,IAAhB1B,IACa,OAATgT,EACAhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACSiB,IAAhBjB,EAAEkH,gBAA2CjG,IAAhBjB,EAAE0L,gBAAsCzK,IAAXjB,EAAEuL,OAC5D4H,GAAOF,EAASjT,EAAEkH,WAAa,MAAQgM,EAAUlT,EAAE0L,WAAa,IAAM2G,EAAMrS,EAAEuL,MAAQ,KAAOyH,OAIzF,QAATT,GAA2B,SAATA,EACzBhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,QAAqB2C,IAAhBjB,EAAEkH,WAA2BlH,EAAEkH,UAAU5I,OAAS,QAAqB2C,IAAhBjB,EAAE0L,WAA2B1L,EAAE0L,UAAUpN,OAAS,IACxJ6U,GAAOF,EAASjT,EAAEW,OAAS,KAAOsS,EAASjT,EAAEkH,WAAa,MAAQgM,EAAUlT,EAAE0L,WAAa,MAAasH,OAIpG,QAATT,GAA2B,QAATA,GAA2B,YAATA,GAA+B,UAATA,GAA6B,WAATA,EACrFhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,IAC1C6U,GAAOF,EAASjT,EAAEW,OAAS,MAAaqS,OAIpC,UAATT,GAA6B,WAATA,GAC3BhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,QAAkB2C,IAAbjB,EAAEL,SACjDwT,GAAOF,EAASjT,EAAEW,OAAS,MAAQX,EAAEL,OAAS,KAAOqT,QAMlEG,GAIEC,EAAuB,SAAC7T,EAAsCgT,GACvE,IAAMU,EAAWjB,EAAY,OACvBkB,EAAYhB,EAAa,OAE3BiB,EAAM,GAqCV,YApCoBlS,IAAhB1B,IACa,OAATgT,EACAhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACSiB,IAAhBjB,EAAEkH,gBAA2CjG,IAAhBjB,EAAE0L,gBAAsCzK,IAAXjB,EAAEuL,OAC5D4H,GAAOF,EAASjT,EAAEkH,WAAa,MAAQgM,EAAUlT,EAAE0L,WAAa,IAAM2G,EAAMrS,EAAEuL,MAAQ,WAIlF,QAATgH,GAA2B,SAATA,EACzBhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,QAAqB2C,IAAhBjB,EAAEkH,WAA2BlH,EAAEkH,UAAU5I,OAAS,QAAqB2C,IAAhBjB,EAAE0L,WAA2B1L,EAAE0L,UAAUpN,OAAS,IACxJ6U,GAAOF,EAASjT,EAAEW,OAAS,KAAOsS,EAASjT,EAAEkH,WAAa,MAAQgM,EAAUlT,EAAE0L,WAAa,WAIvF,QAAT6G,GAA2B,QAATA,GAA2B,YAATA,GAA+B,UAATA,GAA6B,WAATA,EACrFhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,IAC1C6U,GAAOF,EAASjT,EAAEW,OAAS,WAIvB,UAAT4R,GAA6B,WAATA,GAC3BhT,EAAYF,QAAQ,SAAAkC,GAChBA,EAAMlC,QAAQ,SAACW,QACKiB,IAAZjB,EAAEW,OAAuBX,EAAEW,MAAMrC,OAAS,QAAkB2C,IAAbjB,EAAEL,SACjDwT,GAAOF,EAASjT,EAAEW,OAAS,MAAQX,EAAEL,OAAS,YAO3DwT,GAGEE,EAAgB,SAACC,EAAoBf,GAC9Ce,EAASlU,MAAMC,QAAQ,SAACC,GACpBgU,EAASlU,MAAMmU,OAAO,CAClBzS,GAAIxB,EAAKwB,GACTsP,MAAOkC,EAAmBhT,EAAKC,YAAagT,OAIpDe,EAASzS,MAAMxB,QAAQ,SAACqC,GACpB,IAAM8R,EACF9R,EAAK0O,MACAqD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACT9T,OAA4BsB,IAAnBuS,EAAY,GAAmBA,EAAY,QAAKvS,EAC/DS,EAAK/B,OAASA,EAEd,IAAMgU,EAASjS,EAAKiP,UAAY,UAAYjP,EAAKmB,QAAU,UAAY,UACjE+Q,EAAalS,EAAKmS,UAAY,UAAY,UAC1CC,EACO,IADPA,EAEO,EAFPA,EAGS,EAGfR,EAASzS,MAAM0S,OAAO,CAClBzS,GAAIY,EAAKZ,GAGTiT,MAAO,CACHH,WAAYA,EACZD,OAAQA,EACRK,UAAW,CACPL,OAAQA,EACRC,WAAYA,IAGpBE,YAAapS,EAAKiP,WAAajP,EAAKmB,QAAUiR,EAAsBA,EACpEG,oBAAqBH,OAMpBI,EAAkB,SAACrV,GAC5B,IAAI0B,EAAgB,CAACM,MAAO,IAAIsT,IAAuB/U,MAAO,IAAI+U,KASlE,OAPAtV,EAAMgC,MAAMxB,QAAQ,SAACqC,GACjBnB,EAAIM,MAAM6C,IAAIhC,KAElB7C,EAAMO,MAAMC,QAAQ,SAACC,GACjBiB,EAAInB,MAAMsE,IAAIpE,KAGXiB,GAGE6T,EAAkB,SAACd,GAC5B,IAAI/S,EAAa,CAACM,MAAO,GAAIzB,MAAO,IASpC,OAPAkU,EAASzS,MAAMxB,QAAQ,SAACqC,GACpBnB,EAAIM,MAAMX,KAAKwB,KAEnB4R,EAASlU,MAAMC,QAAQ,SAACC,GACpBiB,EAAInB,MAAMc,KAAKZ,KAGZiB,GAiBE8T,EAAoD,CAC7DC,IAAK,CACDC,KAAM,qBACNC,YAAa,+XACbC,QAAS,UACTC,aAAc,CACV7T,MAAO,CAOH,CAAEC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,GAC9E,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAOvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAOvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GACpF,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAOvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAOvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,GACnF,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAOvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,GACjF,CAAE/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAOvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,IAExFzU,MAAO,CASH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,KAAO,CAAEA,MAAO,SAElE,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,KAAO,CAAEA,MAAO,YAK9EmM,IAAK,CACDyH,KAAM,qBACNC,YAAa,wSACbC,QAAS,UACTC,aAAc,CACV7T,MAAO,CACH,CAACC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,GAC7E,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,IAErFzU,MAAO,CACH,CAACqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,KAAM,CAACA,MAAO,SAG9D,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAEhD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,YAK5DiU,UAAW,CACPL,KAAM,4BACNC,YAAa,sQACbC,QAAS,cACTC,aAAc,CACV7T,MAAO,CACH,CAACC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,IAAKvE,MAAO,IAAKvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,GAC9E,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,GACjF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAClF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,IAGrFzU,MAAO,CACH,CAACqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,KAAM,CAACA,MAAO,SAE9D,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,WAChD,CAACjE,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,WAChD,CAACjE,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAChD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,SAEhD,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,KAAM,CAACA,MAAO,SAE9D,CAACF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,KAAM,CAACA,MAAO,YAK1EkU,IAAK,CACDN,KAAM,4JACNC,YAAa,mNACbC,QAAS,UACTC,aAAc,CACV7T,MAAO,CACH,CAACC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,GAC7E,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAChF,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,IAEpFzU,MAAO,CACH,CACIqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CACjC,CACI,CAACzB,MAAO,IAAKuG,UAAW,KAAMwE,UAAW,CAAC,IAAK,OAC/C,CAAC/K,MAAO,IAAKuG,UAAW,KAAMwE,UAAW,CAAC,IAAK,OAC/C,CAAC/K,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAC,IAAK,MAC9C,CAAC/K,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAC,IAAK,MAC9C,CAAC/K,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAC,IAAK,MAC9C,CAAC/K,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAC,IAAK,UAI1D,CACIjL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CACjC,CACI,CAACzB,MAAO+D,MAAKwC,UAAW,KAAMwE,UAAW,CAAC,OAC1C,CAAC/K,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,MACzC,CAAC/K,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,UAGrD,CACIjL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CACjC,CACI,CAACzB,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAChH,QACzC,CAAC/D,MAAO,IAAKuG,UAAW,IAAKwE,UAAW,CAAChH,YAIrD,CAACjE,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,KAAMwE,UAAW,CAAChH,eAI9FoQ,KAAM,CACFP,KAAM,mQACNC,YAAa,GACbC,QAAS,UACTC,aAAc,CACV7T,MAAO,CACH,CAACC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,IAGjFzU,MAAO,CACH,CACIqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO,IAAKuG,UAAW,KAAMwE,UAAW,CAAC,IAAK,cAKtGqJ,GAAI,CACAR,KAAM,wFACNC,YAAa,mKACbC,QAAS,SACTC,aAAc,CACV7T,MAAO,CACH,CAACC,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAMkD,WAAW,GAC7E,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,EAAGvE,MAAO,KAAMvN,SAAS,EAAO8N,WAAW,EAAOkD,WAAW,GAChF,CAAC/S,GAAI,EAAG4S,EAAG,EAAGiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,GAC/E,CAAC/S,GAAI,EAAG4S,EAAG,IAAKiB,EAAG,IAAKvE,MAAO,KAAMvN,SAAS,EAAM8N,WAAW,EAAOkD,WAAW,IAErFzU,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKC,GAAI,CAAC9K,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKC,OACjK,CAAEhL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKG,OACnG,CAAElL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKG,OACnG,CAAElL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKG,OACnG,CAAElL,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAACzB,MAAO+D,MAAKwC,UAAW,IAAKwE,UAAW,CAAC,KAAMH,KAAMC,OAAKG,UAI/GqJ,MAAO,CACHT,KAAM,sEACNE,QAAS,YACTD,YAAa,qNACbE,aAAc,CACV7T,MAAO,CACH,CAAE6S,EAAG,EAAGiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAMP,MAAO,SAC/E,CAAEsD,EAAG,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,SACrF,CAAEsD,EAAG,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,UACrF,CAAEsD,GAAI,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,WAE1FhR,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,KAAO,CAAEgB,MAAO,IAAKhB,OAAQ,SAC5F,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,YAI3EsV,OAAQ,CACJV,KAAM,6KACNE,QAAS,YACTD,YAAa,GACbE,aAAc,CACV7T,MAAO,CACH,CAAE6S,EAAG,EAAGiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAMP,MAAO,SAC/E,CAAEsD,EAAG,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,SACrF,CAAEsD,EAAG,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,UACrF,CAAEsD,GAAI,IAAKiB,GAAI,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,WAE1FhR,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,KAAO,CAAEgB,MAAO,IAAKhB,OAAQ,SAC5F,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,SAC/D,CAAEc,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,IAAKhB,OAAQ,YAI3EuV,MAAO,CACHX,KAAM,sEACNC,YAAa,uOACbC,QAAS,YACTC,aAAc,CACV7T,MAAO,CACH,CAAE6S,EAAG,EAAGiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAMP,MAAO,UAC/E,CAAEsD,EAAG,IAAKiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,UAClF,CAAEsD,EAAG,IAAKiB,EAAG,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,WAExFhR,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,YAI9DwU,OAAQ,CACJZ,KAAM,6KACNC,YAAa,GACbC,QAAS,YACTC,aAAc,CACV7T,MAAO,CACH,CAAE6S,EAAG,EAAGiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAMP,MAAO,UAC/E,CAAEsD,EAAG,IAAKiB,EAAG,EAAG7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,UAClF,CAAEsD,EAAG,IAAKiB,EAAG,IAAK7T,GAAI,EAAG+B,SAAS,EAAOgR,WAAW,EAAOlD,WAAW,EAAOP,MAAO,WAExFhR,MAAO,CACH,CAAEqB,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAElD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,SAClD,CAAEF,KAAM,EAAGC,GAAI,EAAGnB,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO,aAOrDyU,EAAY,SAACb,GAAiB,IAAAc,EAEjCC,EADK,KAAAnG,OAAQoG,SAASC,QACR/B,MAAN,KAAAtE,OAAiBoF,EAAjB,MACd,GAAqB,IAAjBe,EAAMhX,OAAc,eAAA+W,EAAOC,EAAMrR,aAAb,IAAAoR,OAAA,EAAOA,EAAa5B,MAAM,KAAK/J,oCCjf9C+L,EAAmB,SAAClG,GAAD,OAC5B,SAACf,GAAD,OACIQ,EAAA9M,EAAA+M,cAACyG,GAAoBC,SAArB,KACM,SAAAC,GAAO,OAAI5G,EAAA9M,EAAA+M,cAACM,EAADlS,OAAAW,OAAA,CAAW6X,aAAcD,GAAapH,QCuWhDiH,sDArUX,SAAAK,EAAYtH,GAAyB,IAAAuH,EAAAC,EAAAC,EAAAC,EAAAlX,EAAA,OAAA3B,OAAAyS,EAAA,EAAAzS,CAAAJ,KAAA6Y,IACjC9W,EAAAJ,EAAAL,KAAAtB,KAAMuR,IA8BV2H,iBAAmB,SAAC1W,GACZT,EAAK8R,MAAMsF,mBAAqB3W,EAChCT,EAAKmR,SAAS,CAAEiG,iBAAkB,OAElCpX,EAAKmR,SAAS,CAAEiG,iBAAkB3W,KAnCLT,EAuCrCqX,kBAvCqC,eAAAC,EAAAjZ,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAuCjB,SAAAC,EAAO1G,GAAP,IAAAzO,EAAAoV,EAAApW,EAAAhB,EAAA,OAAAiX,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACVxV,EAAQyO,EAAME,OAAO3O,MAC3BvC,EAAKmR,SAAS,CAAE6G,gBAAiBzV,IAE7BoV,EAKE,GACFpW,EAA0B,GAEE,OAA5BvB,EAAKwP,MAAMqH,cACX7W,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAII0V,EAJAzW,EAAMe,EAAMkS,MAAM,IAClBnK,EAAM9I,EAAIkJ,QAEVwN,EADJ1W,EAAMA,EAAI4R,KAAK,IAAIqB,MAAM,KAIrB0D,EAAQ3W,EAAI4R,KAAK,IAAIqB,MAAM,KAC/B0D,EAAMC,UACNH,EAAME,EAAMzN,QACZyN,EAAMC,UACNF,EAAMC,EAENR,EAAYzW,KAAK,CAAEoJ,IAAK5E,MAAK6E,IAAKD,EAAK4N,IAAKA,EAAI9E,KAAK,KAAM6E,IAAKA,MAI5C,UAA5BjY,EAAKwP,MAAMqH,cAAwD,WAA5B7W,EAAKwP,MAAMqH,cAClD7W,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAAIf,EAAMe,EAAMkS,MAAM,KAClBnK,EAAM9I,EAAIkJ,QACVH,EAAM/I,EAAIkJ,QACdiN,EAAYzW,KAAK,CAAEoJ,IAAKA,EAAKC,IAAKA,EAAK2N,SAAKjW,EAAWgW,SAAKhW,MAGpE0V,EAAYtX,QAAQ,SAAAkC,QACEN,IAAdM,EAAM+H,KACN/I,EAAIL,KACA,CACIS,MAAqB,QAAdY,EAAM+H,IAAgB5E,MAAMnD,EAAM+H,IACzC3J,OAAQ4B,EAAMgI,UAO9BvK,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAAIf,EAAMe,EAAMkS,MAAM,KAClBnK,EAAM9I,EAAIkJ,QAEVH,GADJ/I,EAAMA,EAAI4R,KAAK,IAAIqB,MAAM,MACX/J,QACVwN,EAAM1W,EACVmW,EAAYzW,KAAK,CAAEoJ,IAAKA,EAAKC,IAAKA,EAAK2N,IAAKA,EAAI9E,KAAK,KAAM6E,SAAKhW,MAGxE0V,EAAYtX,QAAQ,SAAAkC,GACa,IAAA8V,OAAXpW,IAAdM,EAAM+H,KACN/I,EAAIL,KACA,CACIS,MAAqB,QAAdY,EAAM+H,IAAgB5E,MAAMnD,EAAM+H,IACzCpC,UAAyB,QAAd3F,EAAMgI,IAAgB7E,MAAMnD,EAAMgI,IAC7CmC,UAAS,QAAA2L,EAAE9V,EAAM2V,WAAR,IAAAG,OAAA,EAAEA,EAAW5D,MAAM,KAAKnS,IAAI,SAAAC,GAAK,MAAc,QAAVA,EAAkBmD,MAAMnD,IACtEgK,KAAoB,MAAdhK,EAAM0V,IAAczL,OAAKG,EAAkB,MAAdpK,EAAM0V,IAAczL,OAAKC,OAAIxK,OAQhF1B,EAAuC,IAAI6C,IAAwB,CAAC7B,IAExEvB,EAAKwP,MAAM8I,sBAAsBtY,EAAKwP,MAAMlP,KAAMwB,GAAKvB,GACvDY,QAAQC,IAAI,UAIZpB,EAAKmR,SAAS,CACV6G,gBAAiBzV,EACfhC,YAAaA,GAChB,kBAAMP,EAAKwP,MAAMgC,mBAnGJ,yBAAAqG,EAAAU,SAAAb,MAvCiB,gBAAAc,GAAA,OAAAlB,EAAA9X,MAAAvB,KAAAoB,YAAA,GAAAW,EA6IrCyY,WA7IqCpa,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KA6IxB,SAAAiB,IAAA,OAAAlB,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACe,OAApB/X,EAAKwP,MAAMlP,MACXN,EAAKwP,MAAMiJ,WAAWzY,EAAKwP,MAAMlP,KAAKwB,IAFjC6W,EAAAZ,KAAA,EAIH/X,EAAKwP,MAAMgC,iBAJR,wBAAAmH,EAAAJ,SAAAG,MA7IwB1Y,EA0JrC4Y,eAAiB,WACb5Y,EAAKmR,SAAS,CAAE0H,UAAW7Y,EAAK8R,MAAM+G,WACtC7Y,EAAK8Y,qBA5J4B9Y,EAgKrC8Y,kBAhKqCza,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAgKjB,SAAAsB,IAAA,IAAApB,EAAApW,EAAAhB,EAAA,OAAAiX,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACZJ,EAME,GAE0B,OAA5B3X,EAAKwP,MAAMqH,cACX7W,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAII0V,EAJAzW,EAAMe,EAAMkS,MAAM,IAClBnK,EAAM9I,EAAIkJ,QAEVwN,EADJ1W,EAAMA,EAAI4R,KAAK,IAAIqB,MAAM,KAIrB0D,EAAQ3W,EAAI4R,KAAK,IAAIqB,MAAM,KAC/B0D,EAAMC,UACNH,EAAME,EAAMzN,QACZyN,EAAMC,UACNF,EAAMC,EACNhX,QAAQC,IAAI,OACZD,QAAQC,IAAI+W,GAEZR,EAAYzW,KAAK,CAAEoJ,IAAK5E,MAAK6E,IAAKD,EAAK4N,IAAKA,EAAI9E,KAAK,KAAM6E,IAAKA,EAAKvX,SAAKuB,MAItD,UAA5BjC,EAAKwP,MAAMqH,cAAwD,WAA5B7W,EAAKwP,MAAMqH,aAClD7W,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAAIf,EAAMe,EAAMkS,MAAM,KAClBnK,EAAM9I,EAAIkJ,QACVH,EAAM/I,EAAIkJ,QACdiN,EAAYzW,KAAK,CAAEoJ,IAAKA,EAAKC,SAAKtI,EAAWiW,SAAKjW,EAAWgW,SAAKhW,EAAWvB,IAAK6J,MAI1FvK,EAAK8R,MAAMkG,gBACNvD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACNpU,QAAQ,SAAAkC,GACL,IAAIf,EAAMe,EAAMkS,MAAM,KAClBnK,EAAM9I,EAAIkJ,QAEVH,GADJ/I,EAAMA,EAAI4R,KAAK,IAAIqB,MAAM,MACX/J,QACVwN,EAAM1W,EACVmW,EAAYzW,KAAK,CAAEoJ,IAAKA,EAAKC,IAAKA,EAAK2N,IAAKA,EAAI9E,KAAK,KAAM6E,SAAKhW,EAAWvB,SAAKuB,MAKxFV,EAA0B,GAC9BoW,EAAYtX,QAAQ,SAAAkC,GACa,IAAA0W,OAAXhX,IAAdM,EAAM+H,KACN/I,EAAIL,KACA,CACIS,MAAqB,QAAdY,EAAM+H,IAAgB5E,MAAMnD,EAAM+H,IACzCpC,UAAyB,QAAd3F,EAAMgI,IAAgB7E,MAAMnD,EAAMgI,IAC7CmC,UAAS,QAAAuM,EAAE1W,EAAM2V,WAAR,IAAAe,OAAA,EAAEA,EAAWxE,MAAM,KAAKnS,IAAI,SAAAC,GAAK,MAAc,QAAVA,EAAkBmD,MAAMnD,IACtEgK,KAAoB,MAAdhK,EAAM0V,IAAczL,OAAKG,EAAkB,MAAdpK,EAAM0V,IAAczL,OAAKC,OAAIxK,EAChEtB,OAAQ4B,EAAM7B,QAO1BH,EAAuC,IAAI6C,IAAwB,CAAC7B,IAExEvB,EAAKmR,SAAS,CACV6G,gBAAiB5D,EAAqB7T,EAAaP,EAAKwP,MAAMqH,cAC9DtW,YAAaA,IApFDyY,EAAAjB,KAAA,EAuFV/X,EAAKwP,MAAMgC,iBAvFD,wBAAAwH,EAAAT,SAAAQ,MAhKiB/Y,EA2PrCkZ,iBAAmB,WACf,GAAwB,OAApBlZ,EAAKwP,MAAMlP,MAAiD,OAAhCN,EAAK8R,MAAMsF,iBAA2B,CAClE,IAAM7W,EAAcP,EAAK8R,MAAMvR,YAC/BA,EAAY4Y,OAAOnZ,EAAK8R,MAAMsF,kBAE9BpX,EAAKwP,MAAM8I,sBAAsBtY,EAAKwP,MAAMlP,KAAKwB,GAAKvB,GACtDP,EAAKmR,SAAS,CAAE5Q,YAAaA,EAAayX,gBAAiB5D,EAAqB7T,EAAaP,EAAKwP,MAAMqH,kBAjQ3E7W,EAqQrCoZ,WAAa,WACT,OAAQpZ,EAAKwP,MAAMqH,cACf,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,QACL,IAAK,SACD,MAAO,iOACX,IAAK,SACL,IAAK,QACD,MAAO,4CACX,IAAK,OACL,IAAK,MACD,MAAO,uHACX,IAAK,KACD,MAAO,8HACX,QACI,MAAO,KAnRf7W,EAAK8R,MAAQ,CACTuH,WAAU,QAAAtC,EAAE/W,EAAKwP,MAAMlP,YAAb,IAAAyW,OAAA,EAAEA,EAAiBjV,GAC7BvB,aAAa,QAAAyW,EAAAhX,EAAKwP,MAAMlP,YAAX,IAAA0W,OAAA,EAAAA,EAAiBzW,cAAe,IAAI6C,IACjD4U,gBAAiB5D,GAAqB,QAAA6C,EAAAjX,EAAKwP,MAAMlP,YAAX,IAAA2W,OAAA,EAAAA,EAAiB1W,cAAe,IAAI6C,IAA2BpD,EAAKwP,MAAMqH,cAChHyC,wBAAyBlF,GAAqB,QAAA8C,EAAAlX,EAAKwP,MAAMlP,YAAX,IAAA4W,OAAA,EAAAA,EAAiB3W,cAAe,IAAI6C,IAA2BpD,EAAKwP,MAAMqH,cACxHO,iBAAkB,KAClByB,UAAU,EACVU,WAAY,EACZC,MAAO,CACH,CAAE1X,GAAI,EAAGS,MAAO,OAZSvC,wDAiBrC,SAAmBgS,EAAuCC,GAAuC,IAAAwH,EAC3CC,EAAAC,EAAAC,GAA9C,QAAAH,EAAAxb,KAAKuR,MAAMlP,YAAX,IAAAmZ,OAAA,EAAAA,EAAiB3X,MAAOmQ,EAAUoH,YAElCpb,KAAKkT,SAAS,CACV5Q,aAAa,QAAAmZ,EAAAzb,KAAKuR,MAAMlP,YAAX,IAAAoZ,OAAA,EAAAA,EAAiBnZ,cAAe,IAAI6C,IACjDiW,WAAU,QAAAM,EAAE1b,KAAKuR,MAAMlP,YAAb,IAAAqZ,OAAA,EAAEA,EAAiB7X,GAC7BkW,gBAAiB5D,GAAqB,QAAAwF,EAAA3b,KAAKuR,MAAMlP,YAAX,IAAAsZ,OAAA,EAAAA,EAAiBrZ,cAAe,IAAI6C,IAA2BnF,KAAKuR,MAAMqH,cAChHO,iBAAkB,KAClByB,UAAU,kCA4HtB,SAAuBtW,GACnB,IAAIsX,EAAS,CAAE/X,GAAI7D,KAAK6T,MAAM0H,MAAMla,OAAQiD,MAAOA,GACnDtE,KAAKkT,SAAS,CAAEqI,MAAOvb,KAAK6T,MAAM0H,MAAMrJ,OAAO0J,2BAoInD,WACI,OACI7J,EAAA9M,EAAA+M,cAACsC,EAAD,CAAgB5Q,MAAM,6CAAU8N,QAA6B,OAApBxR,KAAKuR,MAAMlP,MAChD0P,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,2BACXK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,gDAEPK,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CACI3Q,GAAG,0BACHgY,WAAS,EACTC,KAAM,EACN3J,QAAQ,WACRgB,MAAM,mDACNtQ,KAAK,QACLyB,MAAOtE,KAAK6T,MAAMkG,gBAClBtF,SAAUzU,KAAKoZ,kBACf+B,WAAYnb,KAAKmb,aACjBY,OAAQ/b,KAAK6a,oBAIrB9I,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,iCACXoD,QAAS9U,KAAK2a,gBACd5I,EAAA9M,EAAA+M,cAACgK,EAAA/W,EAAD,QAMR8M,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACIC,QAAS9U,KAAKwa,YADlB,wDAzTEnI,IAAMC,kLCjCnB2J,GAAU,SAAC1K,GAMpB,OACIQ,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,0CACXK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,gCACXK,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MAApB,+CAGyB,IAAzBZ,EAAMtJ,QAAQ5G,OACV0Q,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,qCAIa1N,IAApBuN,EAAM2K,UAEFnK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,4BAA4BtN,IAAK,GAC5C2N,EAAA9M,EAAA+M,cAAA,QAAMN,UAAU,+BAA+B,GAE3CK,EAAA9M,EAAA+M,cAACmK,GAAA,EAAD,CACIzY,MAAOqO,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYV,UAAU,qBAAqB,MAClDK,EAAA9M,EAAA+M,cAAA,OACIN,UAAU,6BACVD,MAAO,CAAEiF,OAAM,GAAAxE,OAAKX,EAAM2K,UAAUxI,UAAY,UAAYnC,EAAM2K,UAAUtW,QAAU,UAAY,UAAnF,gBAEd2L,EAAM2K,UAAW/I,SAOhCpB,EAAA9M,EAAA+M,cAAA,YAINT,EAAMtJ,QAAQ5D,IAAI,SAACT,EAAOuF,GAAR,OACd4I,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,4BAA4BtN,IAAK+E,GAC5C4I,EAAA9M,EAAA+M,cAAA,QAAMN,UAAU,+BAA+BvI,EAAQ,GAEnDvF,EAAMS,IAAI,SAACI,EAAM0E,GAAP,OACN4I,EAAA9M,EAAA+M,cAACmK,GAAA,EAAD,CACIzY,MAAOqO,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYV,UAAU,0BAAmC1N,IAAdS,EAAK2X,KAAqB3X,EAAK2X,KAAKjH,KAAK,MAAQ,KACnGpD,EAAA9M,EAAA+M,cAAA,OACIN,UAAU,6BACVD,MAAO,CAAEiF,OAAM,GAAAxE,OAAKzN,EAAKA,KAAKiP,UAAY,UAAYjP,EAAKA,KAAKmB,QAAU,UAAY,UAAvE,gBAEdnB,EAAKA,KAAK0O,aAWvCpB,EAAA9M,EAAA+M,cAAA,WACID,EAAA9M,EAAA+M,cAAA,OAAKnK,IAAK0J,EAAM8K,kBAKxBtK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,qCAAf,yTCWd4K,GAAe,SAACC,GAClB,IAAMC,EAAcD,EAAQlZ,OAAO,SAACC,EAAYiZ,GAqB5C,OApBAjZ,EAAIL,KACA8O,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,0CAEP6K,EAAQlY,IAAI,SAACoY,GAAD,OACR1K,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,uBACXK,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACI1C,QAAQ,WACR2C,QACI,WAAQ2H,EAAO3H,YAGlB2H,EAAOnF,aASzBhU,GACR,IACH,OACIyO,EAAA9M,EAAA+M,cAAA,WACKwK,IAusBEhE,uDAjrBX,SAAAkE,EAAYnL,GAAwB,IAAAxP,EAAA,OAAA3B,OAAAyS,EAAA,EAAAzS,CAAAJ,KAAA0c,IAChC3a,EAAAJ,EAAAL,KAAAtB,KAAMuR,IAuDVoL,wBAA0B,SAAC9C,EAAa+C,GA2BpC,OAZQ/C,EAAK1X,MAAMd,SAAWub,EAAQza,MAAMd,QAIjCwY,EAAK1X,MAAM0a,KAAK,SAAChD,EAAM1Q,GAC1B,IAAM0E,EAAO+O,EAAQza,MAAMgH,GAC3B,OAAO0Q,EAAKhW,KAAOgK,EAAKhK,IACpBgW,EAAKrW,OAASqK,EAAKrK,MACnBqW,EAAKpW,KAAOoK,EAAKpK,KAChBqZ,kBAAQjP,EAAKvL,YAAauX,EAAKvX,gBAtBpCuX,EAAKjW,MAAMvC,SAAWub,EAAQhZ,MAAMvC,QAIjCwY,EAAKjW,MAAMiZ,KAAK,SAAChD,EAAM1Q,GAC1B,IAAM0E,EAAO+O,EAAQhZ,MAAMuF,GAC3B,OAAO0Q,EAAKhW,KAAOgK,EAAKhK,IACpBgW,EAAKjU,UAAYiI,EAAKjI,SACtBiU,EAAKnG,YAAc7F,EAAK6F,aAlEJ3R,EAsFpCgb,YAAc,SAACnE,EAA4BhX,EAAcob,EAAqBlb,GAC1E,OAAQ8W,GACJ,IAAK,MACD,IACI,OAAO,IAAIrO,MAAI3I,EAAOob,EAAalb,GACrC,MAAOmb,GACL,OAER,IAAK,MACD,OAAO,IAAI9P,MAAIvL,EAAOob,EAAalb,GACvC,IAAK,UACD,OAAO,IAAIoL,aAAWtL,EAAOob,EAAalb,GAC9C,IAAK,MACD,OAAO,IAAIyN,MAAI3N,EAAOob,EAAalb,EAAOC,EAAK8R,MAAMqJ,cACzD,IAAK,OACD,OAAO,IAAI1N,QAAK5N,EAAOob,EAAalb,EAAOC,EAAK8R,MAAMqJ,cAC1D,IAAK,KACD,OAAO,IAAIjP,KAAGrM,EAAOob,EAAalb,GACtC,IAAK,QACD,OAAO,IAAIJ,SAAME,EAAOob,EAAalb,GACzC,IAAK,SACD,OAAO,IAAI8N,UAAOhO,EAAOob,EAAalb,GAC1C,IAAK,QACD,OAAO,IAAI+D,SAAMjE,EAAOob,EAAalb,GACzC,IAAK,SACD,OAAO,IAAIgO,UAAOlO,EAAOob,EAAalb,KA/GdC,EAoHpCob,mBAAqB,WACjBja,QAAQka,KAAK,2BAEbrb,EAAKmR,SAAS,CAAEmK,UAAWlG,EAAgBpV,EAAKwP,MAAM8E,WAAa,WAC/DtU,EAAKwP,MAAM+L,gBAEX,IAAMN,EAAsB7F,EAAgBpV,EAAKwP,MAAM8E,UAAUzS,MAAMW,OAAO,SAAAE,GAAI,OAAIA,EAAKiP,YACrF5R,EAAQC,EAAK8R,MAAM/R,MAAM0U,MAAM,SAEjBxS,IAAhBgZ,EAKJjb,EAAKmR,SAAS,CACVqK,SAAUxb,EAAKgb,YAAYhb,EAAKwP,MAAMqH,aAAc7W,EAAK8R,MAAMwJ,UAAWL,EAAalb,GACvF0b,YAAQxZ,GAFZ5D,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAGG,SAAAC,IAAA,IAAAlW,EAAA,OAAAgW,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEOvW,EAAkB,SAEmBS,IAAxBjC,EAAK8R,MAAM0J,SACxBxb,EAAK8R,MAAM0J,SAASjN,qBACpB,IAEKlO,QAAQ,SAACW,EAAGoG,GACnB,IAAMsU,EAAgBtU,EAAQ,EAE9B5F,EAAIN,KAAK,CACLoE,MAAOtE,EAAEsE,MAAFjH,OAAAuV,EAAA,EAAAvV,CAAc2C,EAAEsE,OAAS,GAChC7D,KAAMT,EAAES,KACR8E,GAAIvF,EAAEuF,GACN2B,UAAWlH,EAAEkH,UACbkJ,MAAK,GAAAjB,OAAKnP,EAAEc,IACZ+B,QAAS7C,EAAE6C,QACX8N,WAAW,EACXkD,WAAW,EACX/S,GAAI9B,EAAKwP,MAAMmM,oBAAsBD,EACrCE,IAAK5a,EAAEc,OAIiB,QAA5B9B,EAAKwP,MAAMqH,cAAsD,SAA5B7W,EAAKwP,MAAMqH,aAChDrV,EAAInB,QAAQ,SAACW,GACT,IAAM6a,EAAQ7b,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAACqZ,GAAD,OAASA,EAAIha,KAAOd,EAAE4a,MAC9DxK,GAAa,OAALyK,QAAK,IAALA,OAAA,EAAAA,EAAOzK,OAAQ,WAASpQ,EAAEsE,MAAOhE,OAAO,SAACC,EAAK+D,GAAN,MAAgB,KAAOA,EAAQ/D,GAAK,IAE1FvB,EAAKwP,MAAMuM,eAAe/a,EAAE4a,IAAKxK,EAAOpQ,EAAE6C,QAAS7C,EAAE2Q,UAAW3Q,EAAE6T,aAGtErT,EAAInB,QAAQ,SAACW,GACT,IAAM6a,EAAQ7b,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAACqZ,GAAD,OAASA,EAAIha,KAAOd,EAAE4a,MACpE5b,EAAKwP,MAAMuM,eAAe/a,EAAE4a,IAAKC,EAAOzK,MAAOpQ,EAAE6C,QAAS7C,EAAE2Q,UAAW3Q,EAAE6T,aAnClFgD,EAAAE,KAAA,EAsCO/X,EAAKmR,SAAS,CAAE6K,cAAexa,IAtCtC,wBAAAqW,EAAAU,SAAAb,OAPCvW,QAAQka,KAAK,iEA9HWrb,EAkLpCic,eAAiB,SAACjL,GAA+C,IAAAkL,EACvDnc,EAAQiR,EAAME,OAAO3O,MAE3BvC,EAAK0L,QACL,QAAAwQ,EAAAlc,EAAK8R,MAAM0J,gBAAX,IAAAU,KAAqBxU,SAAS3H,EAAM0U,MAAM,KAE1CzU,EAAKmR,SAAS,CAAEpR,MAAOA,KAxLSC,EA6LpCmc,cAAgB,SAACta,EAAmBua,EAAkB5a,GAClDK,EAAMxB,QAAQ,SAACW,EAAGoG,GACd,IAAMsU,EAAgBtU,EAAQ,EACxByU,EAAQ7b,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAACqZ,GAAD,OAASA,EAAIha,KAAOd,EAAEc,KAEpEN,EAAIN,KAAK,CACLoE,MAAOtE,EAAEsE,MAAFjH,OAAAuV,EAAA,EAAAvV,CAAc2C,EAAEsE,OAAS,GAChC7D,KAAMT,EAAES,KACR8E,GAAIvF,EAAEuF,GACN2B,UAAWlH,EAAEkH,UACbqE,KAAMvL,EAAEuL,KACR5L,OAAQK,EAAEL,OACVyQ,MAAK,GAAAjB,OAAKnP,EAAEc,IACZ+B,QAAS7C,EAAE6C,QACX8N,UAAWkK,EAAOlK,UAClBkD,UAAWgH,EAAOhH,UAClB/S,GAAI9B,EAAKwP,MAAMmM,oBAAsBD,EACrCE,IAAK5a,EAAEc,OAIiB,QAA5B9B,EAAKwP,MAAMqH,cAAsD,SAA5B7W,EAAKwP,MAAMqH,aAChDrV,EAAInB,QAAQ,SAACW,GACT,IAAM6a,EAAQ7b,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAACqZ,GAAD,OAASA,EAAIha,KAAOd,EAAE4a,MAC9DxK,GAAa,OAALyK,QAAK,IAALA,OAAA,EAAAA,EAAOzK,OAAQ,WAAcpQ,EAAEsE,MAAOhE,OAAO,SAACC,EAAK+D,GAAN,MAAgB,KAAOA,EAAQ/D,GAAK,IAC/FvB,EAAKwP,MAAMuM,eAAe/a,EAAE4a,IAAKxK,EAAOpQ,EAAE6C,QAAS7C,EAAE2Q,UAAW3Q,EAAE6T,aAGtErT,EAAInB,QAAQ,SAACW,GACT,IAAM6a,EAAQ7b,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAACqZ,GAAD,OAASA,EAAIha,KAAOd,EAAE4a,MACpE5b,EAAKwP,MAAMuM,eAAe/a,EAAE4a,IAAKC,EAAOzK,MAAOpQ,EAAE6C,QAAS7C,EAAE2Q,UAAW3Q,EAAE6T,aAKjF,IAAMhK,EAAS,SAACwR,GAAD,OAAYA,IAAM3W,MAAM,SAAM2W,GAcvCC,EAAM,SAACD,EAAQjN,EAAY9C,EAAS5L,GAA9B,OAA2CmK,EAAOwR,GAZ7C,SAACjN,GAAD,MAA4C,QAA5BpP,EAAKwP,MAAMqH,cAAsD,SAA5B7W,EAAKwP,MAAMqH,aAC3E,KAAOhM,EAAOuE,GACd,GAU6DmN,CAASnN,GAR/D,SAAC9C,GAAD,MAAsD,OAA5BtM,EAAKwP,MAAMqH,aAC5CvK,IAAOE,OAAKG,EAAI,MAAQ,MACxB,GAM+EJ,CAAKD,GAJ3E,SAAC5L,GAAD,MAA0C,UAA5BV,EAAKwP,MAAMqH,cAAwD,WAA5B7W,EAAKwP,MAAMqH,aACzE,KAAOnW,EACP,GAE0FC,CAAOD,IAEjG8b,EAAchb,EAAIF,OAAO,SAACC,EAAgDP,GAc5E,OADAO,EAAIL,KAAK,CAAEO,KAZE,WACT,OAAQzB,EAAKwP,MAAMqH,cACf,IAAK,KACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACD,OAAOuF,EAAK5Z,OAAO,SAAC/D,GAAD,IAAAge,EAAA,OAAOzb,EAAES,MAAQhD,EAAEmd,OAAF,QAAAa,EAAUzb,EAAES,YAAZ,IAAAgb,OAAA,EAAUA,EAAQ3a,MAAI,GAAGA,GACjE,QACI,OAAOsa,EAAK5Z,OAAO,SAAC/D,GAAD,IAAAie,EAAAC,EAAAC,EAAA,OAAO5b,EAAES,MAAQhD,EAAEmd,OAAF,QAAAc,EAAU1b,EAAES,YAAZ,IAAAib,OAAA,EAAUA,EAAQ5a,MAAM,QAAA6a,EAAAle,EAAE6G,aAAF,IAAAqX,OAAA,EAAAA,EAASE,aAAT,QAAAD,EAAsB5b,EAAES,KAAK6D,aAA7B,IAAAsX,OAAA,EAAsBA,EAAcC,YAAU,GAAG/a,IAGxGL,GAAQC,GAAI,CAACV,EAAEc,IAAKyE,GAAI+V,EAAItb,EAAEuF,GAAIvF,EAAEkH,UAAWlH,EAAEuL,KAAMvL,EAAEL,UACnEY,GACR,IAEHJ,QAAQC,IAAI,UAEZob,EAAYnc,QAAQ,SAACyc,GAAD,OAAUA,EAAKpb,GAAGrB,QAAQ,SAACqB,GAAD,OAAQ1B,EAAKwP,MAAMuN,eAAeD,EAAKrb,KAAMC,EAAIob,EAAKvW,QAEpGvG,EAAKmR,SAAS,CAAE6K,cAAexa,KArQCxB,EAyQpCgd,QAAU,SAACC,EAAuB3V,EAAsB4V,GACpD/b,QAAQC,IAAI,MACZD,QAAQC,IAAI,SAAU6b,GACtB9b,QAAQC,IAAI,SAAUkG,GACtBnG,QAAQC,IAAI,SAAU8b,GACtB/b,QAAQC,IAAI,MAEZ,IAAMI,EAAkB,GACxBxB,EAAKmc,cAAcc,EAAWjd,EAAK8R,MAAMkK,cAAexa,GACxD,IAAM2b,EAAmB,GACzBnd,EAAKmc,cAAc7U,EAAU9F,EAAK2b,GAElCnd,EAAKmc,cAAce,EAAYC,EADN,KApROnd,EAwRpCod,KAAO,SAAC9V,GAEJtH,EAAKmc,cAAc7U,EAAUtH,EAAK8R,MAAMkK,cADhB,KAzRQhc,EA6RpCuD,KA7RoClF,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KA6R7B,SAAAiB,IAAA,IAAA2E,EAAA5B,EAAA5Z,EAAAob,EAAA3V,EAAA4V,EAAA1b,EAAA8b,EAAA,OAAA9F,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,eACyB9V,IAAxBjC,EAAK8R,MAAM0J,SADZ,CAAA7C,EAAAZ,KAAA,eAEC5W,QAAQoc,MAAM,mCAFf5E,EAAA6E,OAAA,oBAMHxd,EAAKwP,MAAMiO,mBAAkB,IAGzBzd,EAAK8R,MAAM4L,SATZ,CAAA/E,EAAAZ,KAAA,eAUC/X,EAAKmR,SAAS,CAAEuM,UAAU,IAC1B1d,EAAK0L,QAXNiN,EAAAZ,KAAA,EAYO/X,EAAKwP,MAAM+L,gBAZlB,UAeCvb,EAAK8R,MAAM6L,oBAAsB3d,EAAK8R,MAAM/R,MAAMT,OAAS,GAAiC,OAA5BU,EAAKwP,MAAMqH,aAf5E,CAAA8B,EAAAZ,KAAA,gBAAAY,EAAA6E,OAAA,0BAgBuBvb,IAAtBjC,EAAK8R,MAAM2J,SAA0D,IAAlCzb,EAAK8R,MAAM6L,mBAAwD,OAA5B3d,EAAKwP,MAAMqH,aAhBtF,CAAA8B,EAAAZ,KAAA,gBAAAY,EAAA6E,OAAA,qBAAA7E,EAAAb,KAAA,GAqBiC,KAF1BuF,EAAmBrd,EAAK8R,MAAM0J,SAASjY,QAE9B1B,MAAMvC,OArBtB,CAAAqZ,EAAAZ,KAAA,gBAAAY,EAAA6E,OAAA,kBAuBCxd,EAAKwP,MAAMoO,qBAAqBP,EAAWxb,MAAMS,IAAI,SAAAI,GAAI,OAAIA,EAAKZ,MAAK,GACvE9B,EAAKwP,MAAMqO,OAAOR,EAAWxQ,OAAQwQ,EAAW7R,SAE5CiQ,OAASxZ,EACTob,EAAWpX,UAAYjG,EAAK8R,MAAM/R,MAAMT,OACxCmc,EAAS4B,EAAWxZ,QACb7D,EAAK8R,MAAM6L,kBAAoB,IAAMN,EAAWpX,UACvDwV,GAAS,GAGP5Z,EAAQwb,EAAWxb,MACpBS,IAAI,SAAAwb,GAAQ,OAAI9d,EAAK8R,MAAMwJ,UAAUzZ,MAAMY,KAAK,SAAAC,GAAI,OAAIA,EAAKZ,KAAOgc,EAAShc,OAC7EU,OAAO,SAACE,GAAD,YAAiCT,IAATS,IAE9Bua,EAAYI,EAAWJ,UAAYI,EAAWJ,UAAY,GAE1D3V,EAAW+V,EAAW/V,SAAW+V,EAAW/V,SAAW,GAEvD4V,EAAaG,EAAWH,WAAaG,EAAWH,WAAa,GAEnC,OAA5Bld,EAAKwP,MAAMqH,cAAyB7W,EAAK8R,MAAM0J,SAAShW,eACxDrE,QAAQC,IAAI,gBAAiB8b,GAC7Bld,EAAKgd,QAAQC,EAAW3V,EAAU4V,KAElC/b,QAAQC,IAAI,WAAYkG,GAClB9F,EAAkB,GACxBxB,EAAKmc,cAAc7U,EAAUtH,EAAK8R,MAAMkK,cAAexa,IAGrD8b,EAASzb,EAAMS,IAAI,SAAC4Y,EAAG/b,GACzB,IAAMmG,EAAQ+X,EAAWxb,MAAM1C,GAAGmG,MAClC,MAAO,CACH5C,KAAMwY,EACNb,UAAgBpY,IAAVqD,EACAA,EAAM8S,eACgBnW,IAAtBob,EAAW1c,OACP0c,EAAW1c,YACXsB,KAIlBjC,EAAKmR,SAAS,CACVsK,OAAQA,EACRkC,kBAAmB3d,EAAK8R,MAAM6L,kBAAoB,EAClDzX,QAAO,GAAAiK,OAAA9R,OAAAuV,EAAA,EAAAvV,CAAM2B,EAAK8R,MAAM5L,SAAjB,CAA0BoX,IACjCzQ,OAAQwQ,EAAWxQ,QACpB,WACC7M,EAAKwP,MAAMuO,WAAW,kBAClB/N,EAAA9M,EAAA+M,cAAC+N,GAAD,CACI7D,UAAWna,EAAK8R,MAAMqI,UACtBjU,QAASlG,EAAK8R,MAAM5L,QACpBoU,cAAeta,EAAKwP,MAAM8K,oBA1EvC3B,EAAAZ,KAAA,iBAAAY,EAAAb,KAAA,GAAAa,EAAAsF,GAAAtF,EAAA,UA+EKA,EAAAsF,cAAajT,qBACbhL,EAAKwP,MAAM0O,uBAAsB,GACjC/c,QAAQC,IAAI,qBAGZD,QAAQC,IAARuX,EAAAsF,IApFL,yBAAAtF,EAAAJ,SAAAG,EAAA,mBA7R6B1Y,EAuXpC0L,MAAQ,WAAY,IAAAyS,EAAAC,EAChB,QAAAD,EAAAne,EAAK8R,MAAM0J,gBAAX,IAAA2C,KAAqBpa,UACrB/D,EAAKwP,MAAMoO,qBAAqB,IAAI,GACpC5d,EAAKmR,SAAS,CACVsK,YAAQxZ,EACR0b,mBAAoB,EACpBzX,QAAS,IAET,WACIlG,EAAKob,qBACLpb,EAAKwP,MAAMuO,WAAW,kBAClB/N,EAAA9M,EAAA+M,cAAC+N,GAAD,CACI7D,UAAWna,EAAK8R,MAAMqI,UACtBjU,QAASlG,EAAK8R,MAAM5L,QACpBoU,cAAeta,EAAKwP,MAAM8K,oBAI1C,QAAA8D,EAAApe,EAAK8R,MAAM0J,gBAAX,IAAA4C,KAAqB1W,SAAS1H,EAAK8R,MAAM/R,MAAM0U,MAAM,KACrDzU,EAAKwP,MAAMiO,mBAAkB,GAC7Bzd,EAAKwP,MAAM+L,iBA3YqBvb,EA8YpCyD,IA9YoCpF,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KA8Y9B,SAAA4G,IAAA,IAAA5C,EAAA,OAAAjE,EAAAtU,EAAA0U,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,eAC0B9V,IAAxBjC,EAAK8R,MAAM0J,SADb,CAAA8C,EAAAvG,KAAA,eAEE5W,QAAQoc,MAAM,mCAFhBe,EAAAd,OAAA,wBAAAc,EAAAvG,KAAA,EAMI/X,EAAK0L,QANT,OAQF,IACU+P,EAASzb,EAAK8R,MAAM0J,SAAS/X,OAEjBgY,EAAO9V,UAAY8V,EAAO9V,UAAY,IAE9CtF,QAAV,eAAAke,EAAAlgB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAkB,SAAAsB,EAAOyF,GAAP,IAAAvB,EAAA3V,EAAA4V,EAAA,OAAA1F,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACRkF,EAAYuB,EAASvB,UAAYuB,EAASvB,UAAY,GAEtD3V,EAAWkX,EAASlX,SAAWkX,EAASlX,SAAW,GAEnD4V,EAAasB,EAAStB,WAAasB,EAAStB,WAAa,GAE3Dld,EAAK8R,MAAM0J,UAAYxb,EAAK8R,MAAM0J,SAAShW,cAC3CxF,EAAKgd,QAAQC,EAAW3V,EAAU4V,GAElCld,EAAKod,KAAK9V,GAVA,wBAAA0R,EAAAT,SAAAQ,MAAlB,gBAAAP,GAAA,OAAA+F,EAAA/e,MAAAvB,KAAAoB,YAAA,IAcAW,EAAKmR,SAAS,CAAEsK,OAAQA,EAAO5X,QAAS8Z,mBAAoB,EAAGzX,QAAS,KACxElG,EAAKmR,SAAS,CAAEuM,UAAU,IAC5B,MAAOxC,GACDA,aAAalQ,sBACbhL,EAAKwP,MAAM0O,uBAAsB,GACjC/c,QAAQC,IAAI,qBAhClB,wBAAAkd,EAAA/F,SAAA8F,MA9Y8Bre,EAmbpCoO,SAAW,WACP,IAAMA,EAAWpO,EAAK8R,MAAM0J,SAAUpN,WAShCkN,EAAY,CACdzZ,MATUuM,EAASvM,MAAMS,IAAI,SAACtB,EAAG0I,GAAJ,MAAY,CACzC5H,GAAId,EAAEc,GACN+B,QAAS7C,EAAE6C,QACXuN,MAAOpQ,EAAEc,GAAG+a,WACZlL,UAAkB,IAAPjI,EACXmL,WAAW,KAKXzU,MAHUgO,EAAShO,OAMvBJ,EAAKmR,SAAS,CACVmK,UAAWA,GACZ,WACCtb,EAAKwP,MAAMiP,eAAevJ,EAAgBoG,IAC1Ctb,EAAKwP,MAAMkP,gBAAgB,UAtcC1e,EA0cpC2e,aAAe,WACX,IAAMC,EAAa5e,EAAK8R,MAAMqJ,aAC9Bnb,EAAKmR,SAAS,CAAEgK,cAAeyD,IAC/B5e,EAAKwP,MAAMqP,iBAAiBD,GAC5B5e,EAAK8R,MAAM0J,SAAUtN,kBAAkB0Q,GACvC5e,EAAK0L,SA/c2B1L,EAkdpC0I,YAAc,WACV1I,EAAKob,qBACLpb,EAAK0L,QAEL,IACI,IAAMoT,EAAqB9e,EAAK8R,MAAM0J,SAAU9S,cAS1C4S,EAAY,CACdzZ,MATUid,EAAQzb,UAAUxB,MAAMS,IAAI,SAACtB,GAAD,MAAQ,CAC9Cc,GAAId,EAAEc,GACN+B,QAAS7C,EAAE6C,QACXuN,MAAO,IAAMpQ,EAAEc,GAAG+a,WAClBlL,UAAW3Q,EAAEc,KAAOgd,EAAQxb,MAAMxB,GAClC+S,WAAW,KAKXzU,MAHU0e,EAAQzb,UAAUjD,OAMhCJ,EAAKmR,SAAS,CACVmK,UAAWA,GACZ,WACCtb,EAAKwP,MAAMiP,eAAevJ,EAAgBoG,MAEhD,MAAOJ,GACDA,aAAa7R,oBACbrJ,EAAKwP,MAAMuP,qBAAoB,GAC/B5d,QAAQC,IAAI,uBA7eYpB,EAkfpCqE,aAAe,WACXrE,EAAKob,qBACLpb,EAAK0L,QAEL,IAAMsK,EAA6BhW,EAAK8R,MAAM0J,SAAUnX,eAElD2a,EAAShJ,EAAM1S,MAAMhB,IAAI,SAACtB,GAAD,OAAOA,EAAEc,KAUlCwZ,EAAY,CACdzZ,MATUmU,EAAM3S,UAAUxB,MAAMS,IAAI,SAACtB,GAAD,MAAQ,CAC5Cc,GAAId,EAAEc,GACN+B,QAAS7C,EAAE6C,QACXuN,MAAO,IAAMpQ,EAAEc,GAAG+a,WAClBlL,UAAWqN,EAAO5U,SAASpJ,EAAEc,IAC7B+S,WAAW,KAKXzU,MAHU4V,EAAM3S,UAAUjD,OAK9BJ,EAAKmR,SAAS,CACVmK,UAAWA,GACZ,WACCtb,EAAKwP,MAAMiP,eAAevJ,EAAgBoG,IAC1Ctb,EAAKwP,MAAMkP,gBAAgB,YA1gBC1e,EA8gBpCC,aAAe,WACXD,EAAKob,qBACLpb,EAAK0L,QAEL,IAAMoT,EAA+B9e,EAAK8R,MAAM0J,SAAUvb,eAEpD+e,EAASF,EAAQxb,MAAMhB,IAAI,SAAAtB,GAAC,OAAIA,EAAEc,KAUlCwZ,EAAY,CACdzZ,MATUid,EAAQzb,UAAUxB,MAAMS,IAAI,SAACtB,GAAD,MAAQ,CAC9Cc,GAAId,EAAEc,GACN+B,QAAS7C,EAAE6C,QACXuN,MAAO,IAAMpQ,EAAEc,GAAG+a,WAAa,MAAQ7b,EAAEL,OACzCgR,UAAWqN,EAAO5U,SAASpJ,EAAEc,IAC7B+S,WAAW,KAKXzU,MAHU0e,EAAQzb,UAAUjD,OAKhCJ,EAAKmR,SAAS,CACVmK,UAAWA,GACZ,WACCtb,EAAKwP,MAAMiP,eAAevJ,EAAgBoG,IAC1Ctb,EAAKwP,MAAMkP,gBAAgB,YAtiBC1e,EA0iB5Bif,mBAAqC,CACzC,CAAE1J,KAAM,iBAAM,sBAAOxC,QAAS,kBAAM/S,EAAKuD,SACzC,CAAEgS,KAAM,iBAAM,wCAAUxC,QAAS,kBAAM/S,EAAKyD,QAC5C,CAAE8R,KAAM,iBAAM,oDAAYxC,QAAS,kBAAM/S,EAAK0L,WA7iBd1L,EAgjB5Bkf,eAAmC,CAAClf,EAAKif,oBAhjBbjf,EAkjB5Bmf,YAAgC,CACpCnf,EAAKif,mBACL,CAAC,CAAE1J,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,eApjBzBrf,EAujB5Bsf,UAA8B,CAClCtf,EAAKif,mBACL,CAAC,CAAE1J,KAAM,iBAAM,sBAAOxC,QAAS,kBAAM/S,EAAKoO,cAC1C,CAAC,CAAEmH,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,eA1jBzBrf,EA8jB5Buf,UAA8B,CAClCvf,EAAKif,mBACL,CAAC,CAAE1J,KAAM,iBAAM,wFAAkBxC,QAAS,kBAAM/S,EAAK0I,iBACrD,CAAC,CAAE6M,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,eAjkBzBrf,EAqkB5Bwf,YAAgC,CACpCxf,EAAKif,mBACL,CAAC,CAAE1J,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,cACzD,CAAC,CAAE9J,KAAM,iBAAM,sBAAOxC,QAAS,kBAAM/S,EAAKC,mBAxkBVD,EA2kB5Byf,YAAgC,CACpCzf,EAAKif,mBACL,CAAC,CAAE1J,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,cACzD,CAAC,CAAE9J,KAAM,iBAAM,4BAAQxC,QAAS,kBAAM/S,EAAKqE,mBA9kBXrE,EAilB5B0f,sBAA0C,CAC9C1f,EAAKif,mBACL,CACI,CAAE1J,KAAM,kBAAMvV,EAAKwP,MAAM2L,aAAe,8CAAa,uEAAgBpI,QAAS,kBAAM/S,EAAKwP,MAAMmQ,iBAC/F,CAAEpK,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,eArlB5Brf,EAylB5B4f,aAAiC,CACrC,CACI,CAAErK,KAAM,iBAAM,sBAAOxC,QAAS,kBAAM/S,EAAKuD,SACzC,CAAEgS,KAAM,iBAAM,oDAAYxC,QAAS,kBAAM/S,EAAK0L,WAElD,CAAC,CAAE6J,KAAMvV,EAAKwP,MAAM4P,gBAAiBrM,QAAS/S,EAAKwP,MAAM6P,eA9lBzBrf,EAimB5B6f,WAAa,WACjB,OAAQ7f,EAAKwP,MAAMqH,cACf,IAAK,MACD,OAAO0D,GAAava,EAAKuf,WAC7B,IAAK,MACL,IAAK,UACD,OAAOhF,GAAava,EAAKsf,WAC7B,IAAK,KACD,OAAO/E,GAAava,EAAK4f,cAC7B,IAAK,MACL,IAAK,OACD,OAAOrF,GAAava,EAAK0f,uBAC7B,IAAK,QACL,IAAK,SACD,OAAOnF,GAAava,EAAKwf,aAC7B,IAAK,QACL,IAAK,SACD,OAAOjF,GAAava,EAAKyf,aAC7B,QACI,OAAOlF,GAAava,EAAKmf,eAjnBjCnf,EAAK8R,MAAQ,CACT/R,MAAO,GACP0b,YAAQxZ,EACRuZ,cAAUvZ,EACV4W,UAAU,EACV8E,mBAAoB,EACpBzX,QAAS,GACTiV,cAAc,EACduC,UAAU,EACV7Q,YAAQ5K,EACRqZ,UAAWlG,EAAgBpV,EAAKwP,MAAM8E,UACtC6F,eAAWlY,EACX+Z,cAAe,GACflc,gBAAiB,IAhBWE,uDAoBpC,WAAoB,IAAA8f,EAAA7hB,KAChBA,KAAKuR,MAAMuQ,QAAQ,WACf,IAAIC,GAAY,EAMhB,GALAF,EAAKtQ,MAAM8E,SAASlU,MAAMC,QAAQ,SAAAC,GACX,KAAfA,EAAK8Q,QACL4O,GAAY,MAGfA,EACD,OAAOF,EAAK1E,uBAGpBnd,KAAKuR,MAAMyQ,YAAYhiB,KAAKmQ,UAC5BnQ,KAAKuR,MAAM0Q,eAAejiB,KAAKyK,aAC/BzK,KAAKuR,MAAM2Q,gBAAgBliB,KAAKoG,cAChCpG,KAAKuR,MAAM4Q,gBAAgBniB,KAAKgC,cAChChC,KAAKuR,MAAM6Q,kBAAkBpiB,KAAK0gB,cAClC1gB,KAAKuR,MAAM8Q,OAAOriB,KAAKwF,KACvBxF,KAAKuR,MAAM+Q,QAAQtiB,KAAKsF,MACxBtF,KAAKuR,MAAMgR,SAASviB,KAAKyN,OACzBzN,KAAKuR,MAAMuO,WAAW,kBAClB/N,EAAA9M,EAAA+M,cAAC+N,GAAD,CACI7D,UAAW2F,EAAKhO,MAAMqI,UACtBjU,QAAS4Z,EAAKhO,MAAM5L,QACpBoU,cAAewF,EAAKtQ,MAAM8K,kBAElCrc,KAAKmd,uDAGT,SAAmBpJ,EAAsCC,EAAsCwO,GACvFxiB,KAAK2c,wBAAwBxF,EAAgBpD,EAAUsC,UAAWc,EAAgBnX,KAAKuR,MAAM8E,YAC7FrW,KAAKmd,2CAqkBb,WAAS,IAAAsF,EAAAziB,KACL,OACI+R,EAAA9M,EAAA+M,cAACsC,EAAD,CAAgB5Q,MAAO,wCACnBqO,EAAA9M,EAAA+M,cAAA,WAEID,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,6CAEP1R,KAAK6T,MAAM+G,SAEP7I,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CACIrB,MAAM,kFACNtQ,KAAK,QACLyB,MAAOtE,KAAK6T,MAAM/R,MAClB2S,SAAUzU,KAAKge,eACfjC,OAAQ,WACJ0G,EAAK5O,MAAM/R,MAAMT,QAAUohB,EAAKvP,SAAS,CAAE0H,UAAU,GAAS,kBAAM6H,EAAKtF,0BAIjFpL,EAAA9M,EAAA+M,cAAA,OACIN,UAAU,2BACVoD,QAAS,WACL2N,EAAKvP,SAAS,CAAE0H,UAAU,MAI1Bra,MAAMiD,KAAKxD,KAAK6T,MAAM/R,OAAOuC,IAAI,SAACqe,EAAMvZ,GAAP,OAC7B4I,EAAA9M,EAAA+M,cAAA,QACIN,UAAW,4BAA8B+Q,EAAK5O,MAAM6L,oBAAsBvW,EAAQ,YAAc,IAChG/E,IAAK+E,GAEJuZ,MAOzB3Q,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,4BAEe1N,IAAtBhE,KAAK6T,MAAM2J,OAAuB,KAC9Bxd,KAAK6T,MAAM2J,OACLzL,EAAA9M,EAAA+M,cAAC2Q,EAAA1d,EAAD,CAAUwM,MAAO,CAAEqF,MAAO,qBAC1B/E,EAAA9M,EAAA+M,cAAC4Q,EAAA3d,EAAD,CAAWwM,MAAO,CAAEqF,MAAO,0BAKhD9W,KAAK4hB,sBA1qBDvP,IAAMC,oBC5HVuQ,sGACjB,WACI,IAAIC,EAAQD,EAAoBE,WAEhC,OAAO,IAAIC,QAAoB,SAAUC,GACjCA,EAAQH,4BAKpB,SAAQI,GACJ,IAEIC,EAFQN,EAAoBE,WAEfve,KAAK,SAAA2e,GAAI,OAAIA,EAAKtf,IAAMqf,EAASrf,KAElD,OAAO,IAAImf,QAAQ,SAAUC,GACzBA,EAAQE,GAAQ,4BAIxB,SAAK7L,EAAc1V,EAAcwhB,GAC7B,IAAKC,aACD,MAAM,IAAInf,MAAM,oBAGpB,IAAM4e,EAAQD,EAAoBE,WAC5BO,GAAW5N,KAAKF,IAALjU,MAAAmU,KAAItV,OAAAuV,EAAA,EAAAvV,CAAQ0iB,EAAMze,IAAI,SAAA8e,GAAI,OAAII,OAAOJ,EAAKtf,QAAQ,GAAG+a,WAChE4E,EAAaV,EAAMW,UAAU,SAAAN,GAAI,OAAIA,EAAK7L,MAAQA,IAClD6L,EAAO,CAACtf,GAAI,IAAKyT,KAAMA,EAAM6L,KAAM,CAACvhB,MAAOA,EAAOwhB,KAAMA,KAE3C,GAAfI,GACAL,EAAKtf,GAAKyf,EACVR,EAAM7f,KAAKkgB,KAEXA,EAAKtf,GAAKif,EAAMU,GAAY3f,GAC5Bif,EAAMU,GAAcL,GAGxB,IAAIO,EAAaC,KAAKC,UAAUd,EAAO,SAAC1e,EAAKE,GAAN,OAAgBA,aAAiBa,IAAM5E,MAAMiD,KAAKc,GAASA,IAIlG,OAFA+e,aAAaQ,QA1CJ,QA0CsBH,GAExB,IAAIV,QAAQ,SAAUC,GACzBA,gCAIR,WACI,IAAKI,aACD,MAAM,IAAInf,MAAM,oBAGpB,IAAI4e,EAAgB,GAEpB,IACIA,EAAQa,KAAKG,MAAMT,aAAaU,QAzD3B,UAyDgD,IACvD,MAAOzE,GAEL,OADApc,QAAQka,KAAK,mCAAqCkC,GAC3C,GAGX,OAAOwD,YCjEFkB,GAAQ,OAAGC,sCAA0C,mBAE3D,SAASC,KACZ,IAAMC,EAAU,IAAIC,QAIpB,OAFAD,EAAQvhB,IAAI,gBAAZ,UAAAsP,OAAuCiG,EAAU,SAE1CgM,EAGJ,SAASE,GAAUF,GACtB,MAAO,CACHG,OAAQ,MACRH,QAASA,GCZF,SAASI,GAAYC,GAChC,OAAO,IAAIxB,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAW,QAGjBW,EAASN,GADCH,MAGhBU,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAIF,GAHuB,KAAnBA,EAASC,QACTP,KAECM,EAASE,GACV,MAAM,IAAI9gB,MAAM4gB,EAASC,OAASD,EAASG,YAG/C,OAAOH,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCVpB,SAAS8F,GAAWC,EAAyBb,GACxD,OAAO,IAAIxB,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,SAAA9R,OAAYmT,EAAQxhB,IAGlC8gB,EAASN,GADCH,MAGhBU,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAIF,GAHuB,KAAnBA,EAASC,QACTP,KAECM,EAASE,GACV,MAAM,IAAI9gB,MAAM4gB,EAASC,OAASD,EAASG,YAG/C,OAAOH,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCxBpB,SAASgG,GAAQD,EAAsBb,GAClD,OAAO,IAAIxB,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAW,QAEjBuB,EAAO5B,KAAKC,UAAUyB,GAEtBV,EHMP,SAAoBR,EAAkBoB,GAGzC,OAFApB,EAAQvhB,IAAI,eAAgB,oBAErB,CACH0hB,OAAQ,OACRH,QAASA,EACToB,KAAMA,GGZSC,CADCtB,KACmBqB,GAEnCX,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAIF,GAHuB,KAAnBA,EAASC,QACTP,KAECM,EAASE,GACV,MAAM,IAAI9gB,MAAM4gB,EAASC,OAASD,EAASG,YAG/ChC,MAEHkC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,WCjBdmG,cAGjB,SAAAA,EAAYjB,GAA2BpkB,OAAAyS,EAAA,EAAAzS,CAAAJ,KAAAylB,GAAAzlB,KAFtBwkB,kBAEqB,EAClCxkB,KAAKwkB,aAAeA,mFAGxB,SAAA/K,EAAcyJ,GAAd,IAAAmC,EAAAlC,EAAA2B,EAAA,OAAAvL,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACUuL,EAA0B,CAC5BxhB,GAAIqf,EAASrf,IAGbsf,EAAO,KALfvJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQ+BsL,GAAWC,EAASrlB,KAAKwkB,cARxD,OAQcM,EARdlL,EAAA8L,KAUQvC,EAAO,CACHtf,GAAIihB,EAASjhB,GACbyT,KAAMwN,EAASxN,KACf6L,KAAMQ,KAAKG,MAAMgB,EAASa,OAbtC/L,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoG,GAAApG,EAAA,SAgBQ1W,QAAQoc,MAAR1F,EAAAoG,IAhBR,eAAApG,EAAA2F,OAAA,SAmBW4D,GAnBX,yBAAAvJ,EAAAU,SAAAb,EAAAzZ,KAAA,mIAsBA,SAAAya,IAAA,IAAAqI,EAAA,OAAAvJ,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACQgJ,EAAqB,GAD7BpI,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAIsByK,GAAYvkB,KAAKwkB,cAJvC,OAIQ1B,EAJRpI,EAAAgL,KAAAhL,EAAAZ,KAAA,gBAAAY,EAAAb,KAAA,EAAAa,EAAAsF,GAAAtF,EAAA,SAMQxX,QAAQoc,MAAR5E,EAAAsF,IANR,eAAAtF,EAAA6E,OAAA,SASWuD,EAAMze,IAAI,SAAAoS,GAKb,MAJ2B,CACvB5S,GAAI4S,EAAE5S,GACNyT,KAAMb,EAAEa,SAZpB,yBAAAoD,EAAAJ,SAAAG,EAAAza,KAAA,0HAkBA,SAAA8a,EAAWxD,EAAc1V,EAAcwhB,GAAvC,IAAAwC,EAAAP,EAAA,OAAA9L,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACU8L,EAAkBjC,KAAKC,UAAU,CACnChiB,MAAOA,EACPwhB,KAAMA,GACP,SAAChf,EAAKE,GAAN,OAAgBA,aAAiBa,IAAM5E,MAAMiD,KAAKc,GAASA,IAExD+gB,EAAuB,CACzB/N,KAAMA,EACNqO,KAAMC,GARd7K,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAYcwL,GAAQD,EAASrlB,KAAKwkB,cAZpC,OAAAzJ,EAAAjB,KAAA,gBAAAiB,EAAAlB,KAAA,EAAAkB,EAAAiF,GAAAjF,EAAA,SAcQ7X,QAAQoc,MAARvE,EAAAiF,IAdR,yBAAAjF,EAAAT,SAAAQ,EAAA9a,KAAA,sMCuLW6lB,GA/M2D,SAAAxM,GAMhE,IAJFyM,EAIEzM,EAJFyM,KACAC,EAGE1M,EAHF0M,QACAvB,EAEEnL,EAFFmL,aACAwB,EACE3M,EADF2M,mBAEEC,EAAsB,IAAIpD,GAC1BqD,EAAoB,IAAIT,GAAkBjB,GAY1C2B,EAAsB,eAAAC,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,EAAOyJ,GAAP,IAAAC,EAAA,OAAA5J,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRoM,EAAkBG,QAAQnD,GADlB,QACrBC,EADqBvJ,EAAA8L,QAIvBM,EAAmB7C,EAAKA,KAAKC,KAAMD,EAAKA,KAAKvhB,OAC7CmkB,KALuB,wBAAAnM,EAAAU,SAAAb,MAAH,gBAAAc,GAAA,OAAA6L,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAStBklB,EAAwB,eAAAC,EAAAnmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAiB,EAAOyI,GAAP,IAAAC,EAAA,OAAA5J,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACVmM,EAAoBI,QAAQnD,GADlB,QACvBC,EADuBzI,EAAAgL,QAIzBM,EAAmB7C,EAAKA,KAAKC,KAAMD,EAAKA,KAAKvhB,OAC7CmkB,KALyB,wBAAArL,EAAAJ,SAAAG,MAAH,gBAAA+L,GAAA,OAAAD,EAAAhlB,MAAAvB,KAAAoB,YAAA,GASxBqlB,EAAoB,eAAAnG,EAAAlgB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAsB,IAAA,IAAA4L,EAAA,OAAAnN,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACzB6M,GAAyB,GADA5L,EAAAjB,KAAA,EAGDoM,EAAkBU,eAHjB,OAGnBF,EAHmB3L,EAAA2K,KAIzBmB,EAAkBH,GAElBC,GAAyB,GANA,wBAAA5L,EAAAT,SAAAQ,MAAH,yBAAAwF,EAAA/e,MAAAvB,KAAAoB,YAAA,GASpB0lB,EAAsB,eAAAC,EAAA3mB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAA4G,IAAA,IAAAsG,EAAA,OAAAnN,EAAAtU,EAAA0U,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EACHmM,EAAoBW,eADjB,OACrBF,EADqBrG,EAAAqF,KAE3BsB,EAAoBN,GAFO,wBAAArG,EAAA/F,SAAA8F,MAAH,yBAAA2G,EAAAxlB,MAAAvB,KAAAoB,YAAA,GAK5B6lB,EAA4CC,mBAAqB,IAAjEC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAOI,EAAPF,EAAA,GAAuBN,EAAvBM,EAAA,GACAG,EAAgDJ,mBAAqB,IAArEK,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAOE,EAAPD,EAAA,GAAyBP,EAAzBO,EAAA,GACAE,EAA0DP,oBAAS,GAAnEQ,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAOE,EAAPD,EAAA,GAA8Bf,EAA9Be,EAAA,GAUA,OARAE,oBAAU,WACF9B,IACAgB,IACAL,MAEL,CAACX,IAIA/T,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAMA,EAAMC,QAASA,EAAS+B,SAAS,KAAKC,WAAS,GACzDhW,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,KACIjW,EAAA9M,EAAA+M,cAAA,2HAGJD,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CACIP,UAAU,uBACVS,QAAQ,YAERJ,EAAA9M,EAAA+M,cAACkW,GAAA,EAAD,CAAMC,OAAK,GAEuB,IAA1Bd,EAAehmB,OACX0Q,EAAA9M,EAAA+M,cAACoW,GAAA,EAAD,4JAGE,KAINT,EAEI5V,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,wCACXK,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,kDACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAQ,KAGZxW,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,kDACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAQ,KAGZxW,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,kDACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAQ,MAIU,IAA1BlB,EAAehmB,OACXgmB,EAAehjB,IAAI,SAAA6e,GAAQ,OACvBnR,EAAA9M,EAAA+M,cAACwW,GAAA,EAAD,CACIpkB,IAAK8e,EAASrf,GACd4kB,gBACI1W,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACI1C,QAAQ,YACRtP,KAAK,QACLiS,QAAS,kBAAMqR,EAAuBjD,KAH1C,+CASJnR,EAAA9M,EAAA+M,cAAC0W,GAAA,EAAD,KACKxF,EAAS5L,SAIpB,KAIkB,IAA5BkQ,EAAiBnmB,OACb0Q,EAAA9M,EAAA+M,cAACoW,GAAA,EAAD,wKAGE,KAIsB,IAA5BZ,EAAiBnmB,OACbmmB,EAAiBnjB,IAAI,SAAA6e,GAAQ,OACzBnR,EAAA9M,EAAA+M,cAACwW,GAAA,EAAD,CACIpkB,IAAK8e,EAASrf,GACd4kB,gBACI1W,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACI1C,QAAQ,YACRtP,KAAK,QACLiS,QAAS,kBAAMwR,EAAyBpD,KAH5C,+CASJnR,EAAA9M,EAAA+M,cAAC0W,GAAA,EAAD,KACKxF,EAAS5L,SAIpB,KAGVvF,EAAA9M,EAAA+M,cAACoW,GAAA,EAAD,qJAIIhoB,OAAOuoB,QAAQvR,GAAe/S,IAAI,SAAAukB,GAAK,OACnC7W,EAAA9M,EAAA+M,cAACwW,GAAA,EAAD,CACIpkB,IAAKwkB,EAAM,GAAGtR,KACdmR,gBACI1W,EAAA9M,EAAA+M,cAAA,WACID,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACInD,UAAU,sCACVS,QAAQ,OACRtP,KAAK,QACLiS,QAAS,kBAjKvBsO,EAiKkDwF,EAAM,GAhKlF5C,EAAmB5C,EAAM,CAACxf,MAAO,GAAIzB,MAAO,UAC5C4jB,IAFyB,IAAC3C,IA6JU,mFAQArR,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACI1C,QAAQ,YACRtP,KAAK,QACLiS,QAAS,kBA7KpBsO,EA6KkDwF,EAAM,GA5KrF5C,EAAmB5C,EAAM,WACzB2C,IAF4B,IAAC3C,IA0KO,gDAURrR,EAAA9M,EAAA+M,cAAC0W,GAAA,EAAD,CAAcG,QAASD,EAAM,GAAGtR,KAAMwR,UAAWF,EAAM,GAAGrR,mBAO9ExF,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,0BACXK,EAAA9M,EAAA+M,cAAC+W,GAAA,EAAD,CAAYC,KAAK,qDACbjX,EAAA9M,EAAA+M,cAACiX,GAAAhkB,EAAD,CAAYyM,UAAU,6ECR/BwX,WA5LyD,SAAA7P,GAQ9D,IANFyM,EAMEzM,EANFyM,KACAC,EAKE1M,EALF0M,QACAoD,EAIE9P,EAJF8P,QACA3E,EAGEnL,EAHFmL,aACA5iB,EAEEyX,EAFFzX,MACAgX,EACES,EADFT,aAgCEwQ,EAAW,eAAAhD,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,IAAAiN,EAAA,OAAAnN,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChBuP,GAAoB,GAEhB3C,EAAwB,GAHZ9M,EAAAoG,GAKRsJ,EALQ1P,EAAAE,KAMP,UANOF,EAAAoG,GAAA,EASP,YATOpG,EAAAoG,GAAA,yBAAApG,EAAAE,KAAA,EAOUoM,EAAkBU,eAP5B,cAORF,EAPQ9M,EAAA8L,KAAA9L,EAAA2F,OAAA,0BAAA3F,EAAAE,KAAA,GAUUmM,EAAoBW,eAV9B,eAURF,EAVQ9M,EAAA8L,KAAA9L,EAAA2F,OAAA,2BAaRgK,EAAa,IAbL3P,EAAA2F,OAAA,oBAiBhBgK,EAAa7C,GACb2C,GAAoB,GAlBJ,yBAAAzP,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAyBjB6lB,EAA8BC,mBAA8B,IAAIrE,IAAzDoD,EAAP7lB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,MACAK,EAA4BJ,mBAA4B,IAAIzB,GAAkBjB,IAAvE0B,EAAP9lB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,MACAG,EAAsCP,mBAAiBiC,EAAU,QAAU,WAA3EzB,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAO6B,EAAP5B,EAAA,GAAoB8B,EAApB9B,EAAA,GACA+B,EAAkCvC,mBAAqB,IAAvDwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAO/C,EAAPgD,EAAA,GAAkBH,EAAlBG,EAAA,GACAC,EAAgDzC,oBAAkB,GAAlE0C,EAAAxpB,OAAAgnB,GAAA,EAAAhnB,CAAAupB,EAAA,GAAOE,EAAPD,EAAA,GAAyBP,EAAzBO,EAAA,GACAE,EAAgC5C,mBAAiB,IAAjD6C,EAAA3pB,OAAAgnB,GAAA,EAAAhnB,CAAA0pB,EAAA,GAAOE,EAAPD,EAAA,GAAiBE,EAAjBF,EAAA,GAkBA,OAhBAnC,oBAAU,WACF9B,IAXJ0D,EAAeL,EAAU,QAAU,WAa/BC,MAEL,CAACtD,IAEJ8B,oBAAU,WACNwB,KACD,CAACE,IAEJ1B,oBAAU,WACNqC,EAAY,KACb,CAACX,EAAaxD,IAIb/T,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAMA,EAAMC,QAASA,GACzBhU,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,KACIjW,EAAA9M,EAAA+M,cAAA,0EAGJD,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,uBACXK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,gCACXK,EAAA9M,EAAA+M,cAACkY,GAAA,EAAD,CACIC,YAAY,WACZC,WAAS,EACT9lB,MAAOglB,EACP7U,SA3FK,SAAClS,EAAkC+B,GAE5DklB,EADAllB,EAAQA,GAASglB,KA4FGvX,EAAA9M,EAAA+M,cAACqY,GAAA,EAAD,CAAc/lB,MAAM,QAAQgmB,UAAWnB,GAAvC,wCACApX,EAAA9M,EAAA+M,cAACqY,GAAA,EAAD,CAAc/lB,MAAM,WAApB,gDAIRyN,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,6BACXK,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CACIP,UAAU,mCACVS,QAAQ,YAGJ0X,EAEI9X,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,uCACXK,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,2CACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAO,OAGXxW,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,2CACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAO,OAGXxW,EAAA9M,EAAA+M,cAACqW,GAAA,EAAD,CACI3W,UAAU,2CACV4W,UAAU,OACVnW,QAAQ,cACRoW,OAAO,QAIfxW,EAAA9M,EAAA+M,cAACkW,GAAA,EAAD,CAAMC,OAAK,GAEHzB,EAAUriB,IAAI,SAAA6e,GAAQ,OAClBnR,EAAA9M,EAAA+M,cAACwW,GAAA,EAAD,CACIpkB,IAAK8e,EAASrf,GACd0mB,gBAAc,GAEdxY,EAAA9M,EAAA+M,cAACwY,GAAA,EAAD,CAAgB1V,QAAS,SAAAmI,GAAC,OAnIhD,SAAC1a,EAAqC2gB,GAC5D+G,EAAY/G,EAAS5L,MAkIqDmT,CAAkBxN,EAAGiG,KAC/CnR,EAAA9M,EAAA+M,cAAC0W,GAAA,EAAD,CAAcG,QAAS3F,EAAS5L,eAYxEvF,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CACI9C,UAAU,iCACVS,QAAQ,WACRtP,KAAK,QACLsQ,MAAM,kFACN7O,MAAO0lB,EACPvV,SAlJU,SAAC1B,GACvB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B2lB,EAAY3lB,MAmJJyN,EAAA9M,EAAA+M,cAAC0Y,GAAA,EAAD,KACI3Y,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACIiC,MAAM,UACNhC,QAnJE,SAACvS,GACnB,OAAQ+mB,GACJ,IAAK,QACDpD,EAAkB/C,KAAK6G,EAAUpoB,EAAOgX,GACxC,MACJ,IAAK,UACDqN,EAAoB9C,KAAK6G,EAAUpoB,EAAOgX,GAMlDwQ,IACArD,MAoIY,0DAOAhU,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CACIiC,MAAM,UACNhC,QAASiR,GAFb,+GC3ML,SAAS4E,GAAUtF,GAC9B,OAAO,IAAIrC,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAW,eAEjBuB,EAAO5B,KAAKC,UAAUyB,GAEtBlB,EAAU,IAAIC,QACpBD,EAAQvhB,IAAI,eAAgB,oBAE5BgiB,MAAMF,EAAK,CACPJ,OAAQ,OACRH,QAASA,EACToB,KAAMA,EACNqF,SAAU,WAET/F,KAAK,SAAAC,GACF,GAAIA,EAASE,GACT,OAAOF,EAAS+F,OAEhBpG,MAGPI,KAAK,SAAAgG,GACGA,EAGD5H,EAAQ4H,GAFRpG,MAKPU,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OC3BnC,IAqGewL,GArGuB,SAAAzR,GAASjZ,OAAA2qB,GAAA,EAAA3qB,CAAAiZ,GAC3C,IAEM2R,EAAWC,eAEjBhE,EAA0BC,mBAAiB,IAA3CC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAOiE,EAAP/D,EAAA,GAAcgE,EAAdhE,EAAA,GACAG,EAAgCJ,mBAAiB,IAAjDK,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAO8D,EAAP7D,EAAA,GAAiB8D,EAAjB9D,EAAA,GACAE,EAA0BP,mBAAwB,MAAlDQ,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAOnI,EAAPoI,EAAA,GAAc4D,EAAd5D,EAAA,GAYM6D,EAAc,eAAAnF,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,IAAA4L,EAAA,OAAA9L,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbuL,EAAU,CACZ6F,MAAOA,EACPE,SAAUA,GAHKxR,EAAAE,KAAA,EAMb6Q,GAAUtF,GACXR,KAAK,SAAA2G,GAAG,OAAIR,EAAQ,sBAAA9Y,OAAuBsZ,MAC3CrG,MAAM,SAAAlI,GAAC,OAAIqO,EAAQ,6IAAApZ,OAAgC+K,EAAhC,QARL,wBAAArD,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAedqqB,EAAsC,SAACC,GACzCC,OAAOC,SAAS5C,KAlCC/E,wBAkCkB,6BAAA/R,OAAgCwZ,IAOvE,OAJA9D,oBAAU,WACN0D,EAAS,OACV,CAACJ,EAAOE,IAGPrZ,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,cACXK,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,CAAW/D,SAAS,MAChB/V,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CACImlB,QAAS,EACTC,eAAe,SACfta,MAAO,CAACua,UAAW,UAEnBja,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,KAAK8Z,MAAM,SAASC,GAAI,CAACC,cAAe,SAA5D,8EAGI7M,GAASvN,EAAA9M,EAAA+M,cAACoa,GAAA,EAAD,CAAOC,SAAS,SAAS/M,GAGtCvN,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW3R,KAAK,QACLsQ,MAAM,2EACNiQ,KAAK,QACL9e,MAAO4mB,EACPzW,SAnDJ,SAAC1B,GACpB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B6mB,EAAS7mB,MAmDGyN,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW3R,KAAK,QACLsQ,MAAM,uCACNiQ,KAAK,WACL9e,MAAO8mB,EACP3W,SApDD,SAAC1B,GACvB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B+mB,EAAY/mB,MAoDAyN,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,YACR2C,QAASyW,GADjB,kCAMAxZ,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,WAAW8Z,MAAM,UAArC,sBAEAla,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,WACR2C,QAAS,kBAAM2W,EAAoC,YAD3D,mHAMA1Z,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,WACR2C,QAAS,kBAAM2W,EAAoC,YAD3D,iJAMA1Z,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,WAAW8Z,MAAM,UAArC,sBAEAla,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,WACR2C,QA7DE,WACtBkW,EAAS,eA2DG,2HC3FL,SAASsB,GAAUjH,GAC9B,OAAO,IAAIrC,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAW,eAEjBuB,EAAO5B,KAAKC,UAAUyB,GAEtBlB,EAAU,IAAIC,QACpBD,EAAQvhB,IAAI,eAAgB,oBAE5BgiB,MAAMF,EAAK,CACPJ,OAAQ,OACRH,QAASA,EACToB,KAAMA,IAELV,KAAK,SAAAC,GACEA,EAASE,GACT/B,IAEAwB,MAGPU,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCpBnC,IAkGeiN,GAlG6B,SAAAlT,GAASjZ,OAAA2qB,GAAA,EAAA3qB,CAAAiZ,GACjD,IAAM2R,EAAWC,eAEjBhE,EAA0BC,mBAAiB,IAA3CC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAOiE,EAAP/D,EAAA,GAAcgE,EAAdhE,EAAA,GACAG,EAAgCJ,mBAAiB,IAAjDK,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAO8D,EAAP7D,EAAA,GAAiB8D,EAAjB9D,EAAA,GACAE,EAA0BP,mBAAiB,IAA3CQ,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAO+E,EAAP9E,EAAA,GAAc+E,EAAd/E,EAAA,GACA+B,EAA0BvC,mBAAwB,MAAlDwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAOnK,EAAPoK,EAAA,GAAc4B,EAAd5B,EAAA,GAiBMgD,EAAiB,eAAAtG,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,IAAA4L,EAAA,OAAA9L,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBuL,EAAU,CACZ6F,MAAOA,EACPE,SAAUA,EACVoB,MAAOA,GAJW5S,EAAAE,KAAA,EAOhBwS,GAAUjH,GACXR,KAAK,kBAAMmG,EAAS,iBACpB7F,MAAM,kBAAMmG,EAAS,4QATJ,wBAAA1R,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAoBvB,OAJAwmB,oBAAU,WACN0D,EAAS,OACV,CAACJ,EAAOE,EAAUoB,IAGjBza,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,cACXK,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,CAAW/D,SAAS,MAChB/V,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CACImlB,QAAS,EACTC,eAAe,SACfta,MAAO,CAACua,UAAW,UAEnBja,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,KAAK8Z,MAAM,SAASC,GAAI,CAACC,cAAe,SAA5D,6EAGI7M,GAASvN,EAAA9M,EAAA+M,cAACoa,GAAA,EAAD,CAAOC,SAAS,SAAS/M,GAGtCvN,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW3R,KAAK,QACLsQ,MAAM,2EACNiQ,KAAK,QACL9e,MAAO4mB,EACPzW,SArDJ,SAAC1B,GACpB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B6mB,EAAS7mB,MAsDGyN,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW3R,KAAK,QACLsQ,MAAM,uCACNiQ,KAAK,WACL9e,MAAO8mB,EACP3W,SAvDD,SAAC1B,GACvB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B+mB,EAAY/mB,MAwDAyN,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAWrB,MAAM,kCACNiQ,KAAK,OACLvH,WAAS,EACTC,KAAM,EACNxX,MAAOkoB,EACP/X,SA1DJ,SAAC1B,GACpB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3BmoB,EAASnoB,MA2DGyN,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,YACR2C,QAAS4X,GADjB,gHAMA3a,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,WAAW8Z,MAAM,UAArC,sBAEAla,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,WACR2C,QArDD,WACnBkW,EAAS,YAmDG,0DCdL2B,WAjEmD,SAAAtT,GAMxD,IAJFuT,EAIEvT,EAJFuT,oBACAC,EAGExT,EAHFwT,oBACAC,EAEEzT,EAFFyT,sBACA3D,EACE9P,EADF8P,QAEE6B,EAAWC,eAgBjB,OACIlZ,EAAA9M,EAAA+M,cAAC+a,GAAA,EAAD,CAAQ1kB,SAAS,UACb0J,EAAA9M,EAAA+M,cAACgb,GAAA,EAAD,CAAS7a,QAAQ,SACbJ,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,qBACXK,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQnD,UAAU,sBACVoF,MAAM,UACNhC,QAAS8X,GAFjB,4BAOA7a,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQnD,UAAU,sBACVoF,MAAM,UACNhC,QAAS+X,GAFjB,2DAQJ9a,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBAEPyX,GACApX,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQnD,UAAU,sBACVoF,MAAM,UACNhC,QA7BG,WAC3BkW,EAAS,SA0BO,8CAQJjZ,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQnD,UAAU,sBACVoF,MAAM,UACNhC,QAASqU,EA1CF,WAC3B7Q,SAASC,OAAS,0CAClBuU,KAN0B,WAC1B9B,EAAS,YA+CQ7B,EAAU,iCAAU,uCCd9B8D,WAhDiE,SAAA5T,GAAyB,IAAvB6T,EAAuB7T,EAAvB6T,kBAC9EjG,EAA0BC,mBAAwB,MAAlDC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAO3H,EAAP6H,EAAA,GAAcmE,EAAdnE,EAAA,GAEM6D,EAAWC,eAEXkC,EAAU,eAAA/G,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,IAAA+R,EAAA,OAAAjS,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT0R,EAAM4B,EAAanpB,IAAI,OADd,CAAA2V,EAAAE,KAAA,eAIXwR,EAAS,4IAJE1R,EAAA2F,OAAA,wBAQfrc,QAAQC,IAAR,SAAA+O,OAAqBsZ,IAErBlT,SAASC,OAAT,OAAArG,OAAyBsZ,EAAzB,qCAVe5R,EAAAE,KAAA,EAYToT,IAZS,OAeflC,EAAS,KAfM,wBAAApR,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAkBhBwmB,oBAAU,WACNuF,KACD,IAEH,IAAAE,EAAuBC,eAAhBF,EAAPhtB,OAAAgnB,GAAA,EAAAhnB,CAAAitB,EAAA,MAEA,OACItb,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,sBACXK,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,CAAW/D,SAAS,MAChB/V,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CACImlB,QAAS,EACTC,eAAe,SACfta,MAAO,CAACua,UAAW,UAEnBja,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,KAAK8Z,MAAM,SAASC,GAAI,CAACC,cAAe,SAA5D,6FAGI7M,GAASvN,EAAA9M,EAAA+M,cAACoa,GAAA,EAAD,CAAOC,SAAS,SAAS/M,QCb3CiO,WA/BiC,SAAAlU,GAASjZ,OAAA2qB,GAAA,EAAA3qB,CAAAiZ,GAErD,IAAM2R,EAAWC,eAMjB,OACIlZ,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,mBACXK,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,CAAW/D,SAAS,MAChB/V,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CACImlB,QAAS,EACTC,eAAe,SACfta,MAAO,CAACua,UAAW,UAEnBja,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,KAAK8Z,MAAM,SAASC,GAAI,CAACC,cAAe,SAA5D,kHAIApa,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQ1C,QAAQ,WACR2C,QAjBD,WACnBkW,EAAS,YAeG,qEC0BPwC,GAAa,SAACjc,GAEvB,IAAA+V,EAA8BJ,mBAASuG,iBAAuB,OAA9DlG,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAOoG,EAAPnG,EAAA,GAEAE,GAFAF,EAAA,GAE8BL,mBAAkB,CAC5C/kB,MAAO,CACHwrB,OAAQ,CACJC,SAAS,EACTxK,KAAM,WACNyK,UAAW,IASf/W,MAAO,UACPgX,MAAO,GACPC,OAAQ,CACJtqB,GAAI,CACAmqB,SAAS,EACTI,YAAa,KAGrB3sB,OAAQ,KAEZ4sB,aAAc,CACVL,SAAS,EACTM,QAAS,SAAUvI,EAA+BwI,GAC9CjrB,QAAQC,IAAI,WAAYwiB,GACxBwI,EAASxI,GAETyI,GAAc,GAEd7c,EAAM8c,QAAQzR,QAAQ0R,oBAU9BC,OAAQ,CAAEC,gBAAgB,GAC1B5qB,MAAO,CACH6qB,gBAAiB,CACbC,eAAe,GAEnBC,MAAO,SACPC,KAAM,oBACNC,oBAAoB,EACpBhsB,KAAM,GACNgU,YAAa,EACbC,MAAO,CACHH,WAAY,UACZD,OAAQ,UACRK,UAAW,CACPL,OAAQ,UACRC,WAAY,aAKxBmY,QAAS,CACLlB,SAAS,MA/DjBlG,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAOsH,EAAPrH,EAAA,GAmEAsH,GAnEAtH,EAAA,GAmEsCrV,IAAM6U,SAA8C,OAA1F+H,EAAA7uB,OAAAgnB,GAAA,EAAAhnB,CAAA4uB,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GAEMG,EAAoB,SAACrc,GACvBA,EAAMsc,iBACNF,EACoB,OAAhBD,EACM,CACEI,OAAQvc,EAAMwc,QAAU,EACxBC,OAAQzc,EAAM0c,QAAU,GAK5B,OAINC,EAAc,WAChBP,EAAe,OAGnB1F,EAAoCvC,oBAAkB,GAAtDwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAOkG,EAAPjG,EAAA,GAAmB0E,EAAnB1E,EAAA,GAEMkG,EAAqBC,sBAAY,SAAA9c,GACb,KAAlBA,EAAM+c,UACDH,IACDzsB,QAAQC,IAAI,sBACZoO,EAAM8c,QAAQzR,QAAQmT,cACtB3B,GAAc,GACdlrB,QAAQC,IAAI,SAAQwsB,MAG7B,CAACA,IAGEK,EAAuBH,sBAAY,SAAA9c,GACf,KAAlBA,EAAM+c,SACFH,IACAzsB,QAAQC,IAAI,wBACZoO,EAAM8c,QAAQzR,QAAQ0R,kBACtBF,GAAc,GACdlrB,QAAQC,IAAI,SAAQwsB,KAG7B,CAACA,IAINhG,EAAyBzC,mBAASuG,iBAAuB,OAAzD7D,EAAAxpB,OAAAgnB,GAAA,EAAAhnB,CAAAupB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAIc,IAAI1S,KAAQ,CACxB,CAAErT,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,cACnC,CAAExB,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,cACnC,CAAExB,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,cACnC,CAAExB,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,aAAc6qB,IAAK,cACtD,CAAErsB,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,cACnC,CAAExB,GAAI,EAAGosB,QAAS,SAAU5qB,MAAO,aAAc+d,KAAM,WASvDwE,oBAAU,WAKN,OAJA+D,OAAOwE,iBAAiB,UAAWP,GACnCjE,OAAOwE,iBAAiB,QAASH,GAEjC9sB,QAAQC,IAAI,KAAOwsB,GACZ,WACHhE,OAAOyE,oBAAoB,UAAWR,GACtCjE,OAAOyE,oBAAoB,QAASJ,KAEzC,CAACJ,IACavd,IAAMge,YAGvBC,0BAAgB,WAER5C,EAAQ9Q,UACRrL,EAAM8c,QAAQzR,QAAU,IAAI2T,KAAQ7C,EAAQ9Q,QAASrL,EAAMoU,KAAMoJ,GAIjE7rB,QAAQC,IAAI,0BAGhBD,QAAQC,IAAI,UACZwoB,OAAOwE,iBAAiB,cAAe,SAAAlT,GAAC,OAAIA,EAAEoS,mBAE1C9d,EAAM8c,QAAQzR,UACdrL,EAAM8c,QAAQzR,QAAQ4T,GAAG,cAAe,SAAC7L,GACrCyJ,GAAc,GACd7c,EAAMkf,cAAc9L,KAExBpT,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMmf,UACxCnf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMof,UACxCpf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMqf,UACxCrf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMsf,UACxCtf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMsf,UAExCtf,EAAM8c,QAAQzR,QAAQ4T,GAAG,WAAY,WACjCjf,EAAM8c,QAAQzR,QAAQkU,gBAI1Bvf,EAAM8c,QAAQzR,QAAQ4T,GAAG,sBAAuB,WAC5Cjf,EAAM8c,QAAQzR,QAAQkU,kBAM/B,CAACpD,EAASnc,EAAMoU,KAAMpU,EAAM8c,QAASU,IAExC,IAAMgC,EAAe,WACjB,OACIhf,EAAA9M,EAAA+M,cAAA,OAAKnO,GAAI,UACL4N,MAAO,CACH8W,OAAQ,OACRuF,MAAO,QAEXjmB,IAAK6lB,KAKjB,YAC0B1pB,IAAtBuN,EAAM2d,YAEF6B,IAEAhf,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,EAChB3d,MAAO,CACH8W,OAAQ,OACRuF,MAAO,SAEViD,IACDhf,EAAA9M,EAAA+M,cAACif,GAAA,EAAD,CACInL,KAAsB,OAAhBoJ,EACNnJ,QAAS2J,EACTwB,gBAAgB,iBAChBC,eACoB,OAAhBjC,EACM,CAAEkC,IAAKlC,EAAYM,OAAQ6B,KAAMnC,EAAYI,aAC7CtrB,GAGTuN,EAAM2d,YAAYQ,EAAaN,0BC7Q9C3d,GAAQ,CACVpJ,SAAU,WACV+oB,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXxD,MAAO,IACPyD,QAAS,mBACT7a,OAAQ,iBACR8a,UAAW,GACXhxB,EAAG,GAGMixB,GAAwB,SAAClgB,GAClC,IAAAyd,EAAwB3c,YAAe,GAAvC4c,EAAA7uB,OAAAgnB,GAAA,EAAAhnB,CAAA4uB,EAAA,GAAOlJ,EAAPmJ,EAAA,GAAayC,EAAbzC,EAAA,GAUA,OAPArH,oBAAU,WACFrW,EAAMogB,qBACND,EAAQngB,EAAMogB,oBACdpgB,EAAM0O,uBAAsB,MAKhC2R,EAAA,yBACIA,EAAA,cAACC,GAAA,EAAD,CACI/L,KAAMA,EACNC,QAbQ,kBAAM2L,GAAQ,IActBI,kBAAgB,oBAChBC,mBAAiB,2BAEjBH,EAAA,cAACI,GAAA,EAAD,CAAK9F,GAAIza,IACLmgB,EAAA,cAACxf,EAAA,EAAD,CAAYvO,GAAG,oBAAoBsO,QAAQ,KAAK8f,UAAU,MAA1D,wCAGAL,EAAA,cAACxf,EAAA,EAAD,CAAYvO,GAAG,0BAA0BqoB,GAAI,CAAEgG,GAAI,IAAnD,sFASPC,GAAsB,SAAC5gB,GAChC,IAAA6gB,EAAwB/f,YAAe,GAAvCggB,EAAAjyB,OAAAgnB,GAAA,EAAAhnB,CAAAgyB,EAAA,GAAOtM,EAAPuM,EAAA,GAAaX,EAAbW,EAAA,GAUA,OAPAzK,oBAAU,WACFrW,EAAM+gB,mBACNZ,EAAQngB,EAAM+gB,kBACd/gB,EAAMuP,qBAAoB,MAK9B8Q,EAAA,yBACIA,EAAA,cAACC,GAAA,EAAD,CACI/L,KAAMA,EACNC,QAbQ,kBAAM2L,GAAQ,IActBI,kBAAgB,oBAChBC,mBAAiB,2BAEjBH,EAAA,cAACI,GAAA,EAAD,CAAK9F,GAAIza,IACLmgB,EAAA,cAACxf,EAAA,EAAD,CAAYvO,GAAG,oBAAoBsO,QAAQ,KAAK8f,UAAU,MAA1D,wCAGAL,EAAA,cAACxf,EAAA,EAAD,CAAYvO,GAAG,0BAA0BqoB,GAAI,CAAEgG,GAAI,IAAnD,mJCvBPK,GAAc,SAAChhB,GAExB,IAAA+V,EAA8BJ,mBAASuG,iBAAuB,OAA9DlG,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAOoG,EAAPnG,EAAA,GAEAE,GAFAF,EAAA,GAE8BL,mBAAkB,CAC5C/kB,MAAO,CACHwrB,OAAQ,CACJC,SAAS,EACTxK,KAAM,WACNyK,UAAW,IASf/W,MAAO,UACPgX,MAAO,GACPC,OAAQ,CACJtqB,GAAI,CACAmqB,SAAS,EACTI,YAAa,KAGrB3sB,OAAQ,KAEZ4sB,aAAc,CACVL,SAAS,EACTM,QAAS,SAAUvI,EAA+BwI,GAC9CjrB,QAAQC,IAAI,WAAYwiB,GACxBwI,EAASxI,GAETyI,GAAc,GAEd7c,EAAM8c,QAAQzR,QAAQ0R,oBAK9BkE,YAAa,CAETC,UAAU,EACVC,WAAW,GAEfnE,OAAQ,CACPoE,aAAc,CAEdC,YAAY,IACZC,UAAW,KACXC,sBAAsB,EACtBC,WAAY,WACZC,aAAc,UAKfpvB,MAAO,CACH6qB,gBAAiB,CACbC,eAAe,GAEnBC,MAAO,MACPC,KAAM,oBACNC,oBAAoB,EACpBhsB,KAAM,GACNgU,YAAa,EACbC,MAAO,CACHH,WAAY,UACZD,OAAQ,UACRK,UAAW,CACPL,OAAQ,UACRC,WAAY,aAKxBmY,QAAS,CACLlB,SAAS,MA1EjBlG,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAOsH,EAAPrH,EAAA,GA8EAsH,GA9EAtH,EAAA,GA8EsCrV,IAAM6U,SAA8C,OAA1F+H,EAAA7uB,OAAAgnB,GAAA,EAAAhnB,CAAA4uB,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GAEMG,EAAoB,SAACrc,GACvBA,EAAMsc,iBACNF,EACoB,OAAhBD,EACM,CACEI,OAAQvc,EAAMwc,QAAU,EACxBC,OAAQzc,EAAM0c,QAAU,GAK5B,OAINC,EAAc,WAChBP,EAAe,OAGnB1F,EAAoCvC,oBAAkB,GAAtDwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAOkG,EAAPjG,EAAA,GAAmB0E,EAAnB1E,EAAA,GAEMkG,EAAqBC,sBAAY,SAAA9c,GACb,KAAlBA,EAAM+c,UACDH,IACDzsB,QAAQC,IAAI,sBACZoO,EAAM8c,QAAQzR,QAAQmT,cACtB3B,GAAc,GACdlrB,QAAQC,IAAI,SAAQwsB,MAG7B,CAACA,IAGEK,EAAuBH,sBAAY,SAAA9c,GACf,KAAlBA,EAAM+c,SACFH,IACAzsB,QAAQC,IAAI,wBACZoO,EAAM8c,QAAQzR,QAAQ0R,kBACtBF,GAAc,GACdlrB,QAAQC,IAAI,SAAQwsB,KAG7B,CAACA,IAEJ/H,oBAAU,WAKN,OAJA+D,OAAOwE,iBAAiB,UAAWP,GACnCjE,OAAOwE,iBAAiB,QAASH,GAEjC9sB,QAAQC,IAAI,KAAOwsB,GACZ,WACHhE,OAAOyE,oBAAoB,UAAWR,GACtCjE,OAAOyE,oBAAoB,QAASJ,KAEzC,CAACJ,IAEJU,0BAAgB,WAER5C,EAAQ9Q,UACRrL,EAAM8c,QAAQzR,QAAU,IAAI2T,IAAQ7C,EAAQ9Q,QAASrL,EAAMoU,KAAMoJ,GACjE7rB,QAAQC,IAAI,0BAGhBD,QAAQC,IAAI,UACZwoB,OAAOwE,iBAAiB,cAAe,SAAAlT,GAAC,OAAIA,EAAEoS,mBAE1C9d,EAAM8c,QAAQzR,UACdrL,EAAM8c,QAAQzR,QAAQ4T,GAAG,cAAe,SAAC7L,GACrCyJ,GAAc,GACd7c,EAAMkf,cAAc9L,KAExBpT,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMmf,UACxCnf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMof,UACxCpf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMqf,UACxCrf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMsf,UACxCtf,EAAM8c,QAAQzR,QAAQ4T,GAAG,QAASjf,EAAMsf,UAExCtf,EAAM8c,QAAQzR,QAAQ4T,GAAG,WAAY,WACjCjf,EAAM8c,QAAQzR,QAAQkU,gBAI1Bvf,EAAM8c,QAAQzR,QAAQ4T,GAAG,sBAAuB,WAC5Cjf,EAAM8c,QAAQzR,QAAQkU,kBAM/B,CAACpD,EAASnc,EAAMoU,KAAMpU,EAAM8c,QAASU,IAExC,IAAMgC,EAAe,WACjB,OACIhf,EAAA9M,EAAA+M,cAAA,OAAKnO,GAAI,MACL4N,MAAO,CACH8W,OAAQ,OACRuF,MAAO,QAEXjmB,IAAK6lB,KAKjB,YAC0B1pB,IAAtBuN,EAAM2d,YAEF6B,IAEAhf,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,EAChB3d,MAAO,CACH8W,OAAQ,OACRuF,MAAO,SAEViD,IACDhf,EAAA9M,EAAA+M,cAACif,GAAA,EAAD,CACInL,KAAsB,OAAhBoJ,EACNnJ,QAAS2J,EACTwB,gBAAgB,iBAChBC,eACoB,OAAhBjC,EACM,CAAEkC,IAAKlC,EAAYM,OAAQ6B,KAAMnC,EAAYI,aAC7CtrB,GAGTuN,EAAM2d,YAAYQ,EAAaN,mJC5PrC,SAAS6D,GAAc5N,EAA4Bb,GAC9D,OAAO,IAAIxB,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,SAAA9R,OAAYmT,EAAQxhB,IAElCsgB,EAAUD,KAEhBU,MAAMF,EAAK,CACPJ,OAAQ,SACRH,QAASA,IAERU,KAAK,SAAAC,GACqB,KAAnBA,EAASC,QACTP,IAECM,EAASE,IACVP,IAGJxB,MAEHkC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCnBpB,SAAS4T,GAAcrvB,EAAYwhB,EAA4Bb,GAC1E,OAAO,IAAIxB,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,SAAA9R,OAAYrO,GAE1BsgB,EAAUD,KAChBC,EAAQvhB,IAAI,eAAgB,oBAC5B,IAAM2iB,EAAO5B,KAAKC,UAAUyB,GAE5BT,MAAMF,EAAK,CACPJ,OAAQ,MACRH,QAASA,EACToB,KAAMA,IAELV,KAAK,SAAAC,GACqB,KAAnBA,EAASC,QACTP,IAECM,EAASE,IACVP,IAGJxB,MAEHkC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,gCCvBpB,SAAS6T,GAAc9N,GAClC,OAAO,IAAIrC,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,QAEdG,EAAUD,KAChBC,EAAQvhB,IAAI,eAAgB,oBAC5B,IAAM2iB,EAAO5B,KAAKC,UAAUyB,GAE5BT,MAAMF,EAAK,CACPJ,OAAQ,MACRH,QAASA,EACToB,KAAMA,IAELV,KAAK,SAAAC,GAKF,OAJKA,EAASE,IACVP,IAGGK,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,gCCqSpB8T,GA1RiB,SAAA/Z,GAAyD,IAAAga,EAAtDC,EAAsDja,EAAtDia,KAAM9O,EAAgDnL,EAAhDmL,aAAcwB,EAAkC3M,EAAlC2M,mBAAoBuN,EAAcla,EAAdka,QACvEtM,EAA0BC,mBAAsB,IAAhDC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAOnE,EAAPqE,EAAA,GAAcqM,EAAdrM,EAAA,GACAG,EAAwBJ,oBAAkB,GAA1CK,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAOxB,EAAPyB,EAAA,GAAamK,EAAbnK,EAAA,GACAE,EAA8CP,oBAAkB,GAAhEQ,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAOgM,EAAP/L,EAAA,GAAwBgM,EAAxBhM,EAAA,GACA+B,EAA4CvC,mBAAwB,MAApEwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAOkK,EAAPjK,EAAA,GAAuBkK,EAAvBlK,EAAA,GACAC,EAA8CzC,oBAAkB,GAAhE0C,EAAAxpB,OAAAgnB,GAAA,EAAAhnB,CAAAupB,EAAA,GAAOkK,EAAPjK,EAAA,GAAwBkK,EAAxBlK,EAAA,GACAE,EAAsC5C,mBAAQ,QAAAmM,EAAA,OAASC,QAAT,IAASA,OAAT,EAASA,EAAM9G,aAAf,IAAA6G,IAAwB,IAAtEtJ,EAAA3pB,OAAAgnB,GAAA,EAAAhnB,CAAA0pB,EAAA,GAAOiK,EAAPhK,EAAA,GAAoBiK,EAApBjK,EAAA,GACAkK,EAAoD/M,oBAAkB,GAAtEgN,EAAA9zB,OAAAgnB,GAAA,EAAAhnB,CAAA6zB,EAAA,GAAOE,EAAPD,EAAA,GAA2BE,EAA3BF,EAAA,GACAG,EAAwCnN,mBAAwB,MAAhEoN,EAAAl0B,OAAAgnB,GAAA,EAAAhnB,CAAAi0B,EAAA,GAAOE,EAAPD,EAAA,GAAqBE,EAArBF,EAAA,GACAG,EAA4CvN,mBAAwB,MAApEwN,EAAAt0B,OAAAgnB,GAAA,EAAAhnB,CAAAq0B,EAAA,GAAOE,EAAPD,EAAA,GAAuBE,EAAvBF,EAAA,GAEM1J,EAAWC,eAEX/E,EAAoB,IAAIT,GAAkBjB,GAO1CqQ,EAAsB,eAAAzO,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,OAAAF,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACvB6Z,EADuB,CAAA/Z,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEjBgb,GAAWnB,GAFM,cAAA/Z,EAAAE,KAAA,EAIrBib,KAJqB,OAK3BC,KAL2B,wBAAApb,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAYtB6zB,EAAa,eAAA1O,EAAAnmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAiB,EAAO5W,EAAYyT,GAAnB,IAAA6L,EAAA,OAAA5J,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACCoM,EAAkBG,QAAQ,CAAExiB,GAAIA,EAAIyT,KAAMA,IAD3C,QACZ6L,EADYzI,EAAAgL,QAIdM,EAAmB7C,EAAKA,KAAKC,KAAMD,EAAKA,KAAKvhB,OAC7CopB,EAAS,MALK,wBAAAtQ,EAAAJ,SAAAG,MAAH,gBAAAF,EAAAiM,GAAA,OAAAD,EAAAhlB,MAAAvB,KAAAoB,YAAA,GAoBb8zB,EAAoB,eAAA5U,EAAAlgB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAsB,IAAA,OAAAvB,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACpB+Z,EADoB,CAAA9Y,EAAAjB,KAAA,QAErBga,GAAmB,GAFE/Y,EAAAjB,KAAA,sBAAAiB,EAAAjB,KAAA,EAIfqb,KAJe,OAKrBrB,GAAmB,GALE,wBAAA/Y,EAAAT,SAAAQ,MAAH,yBAAAwF,EAAA/e,MAAAvB,KAAAoB,YAAA,GAiCpB+zB,GAAkB,eAAAC,EAAAh1B,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAA6b,IAAA,OAAA9b,EAAAtU,EAAA0U,KAAA,SAAA2b,GAAA,cAAAA,EAAAzb,KAAAyb,EAAAxb,MAAA,OACnBia,IAAW,OAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9G,QAKrB2G,GAJiC,CAC7B3G,MAAOuH,IAGYlP,KAAK,SAAA0Q,GACxBhC,EAAQgC,KAPO,wBAAAD,EAAAhb,SAAA+a,MAAH,yBAAAD,EAAA7zB,MAAAvB,KAAAoB,YAAA,GAYlB4zB,GAAc,WAChBtD,GAAQ,IAGN8D,GAAmB,WACrB9B,GAAmB,IAGjB+B,GAAsB,WACxBrB,GAAsB,IAGpBW,GAAW,eAAAW,EAAAt1B,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAmc,IAAA,OAAApc,EAAAtU,EAAA0U,KAAA,SAAAic,GAAA,cAAAA,EAAA/b,KAAA+b,EAAA9b,MAAA,cAAA8b,EAAA9b,KAAA,EACVyK,GAAYC,GACbK,KAAK,SAAA/B,GAAK,OAAI0Q,EAAS1Q,KACvBqC,MAAM,kBAAMqO,EAAS,MAHV,wBAAAoC,EAAAtb,SAAAqb,MAAH,yBAAAD,EAAAn0B,MAAAvB,KAAAoB,YAAA,GAMX0zB,GAAU,eAAAe,EAAAz1B,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAsc,EAAOjyB,GAAP,IAAAwhB,EAAA,OAAA9L,EAAAtU,EAAA0U,KAAA,SAAAoc,GAAA,cAAAA,EAAAlc,KAAAkc,EAAAjc,MAAA,cACTuL,EAA6B,CAC/BxhB,GAAIA,GAFOkyB,EAAAjc,KAAA,EAKTmZ,GAAc5N,EAASb,GALd,wBAAAuR,EAAAzb,SAAAwb,MAAH,gBAAAE,GAAA,OAAAH,EAAAt0B,MAAAvB,KAAAoB,YAAA,GAQV60B,GAAiB,eAAAC,EAAA91B,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAA2c,EAAOtyB,EAAYuyB,GAAnB,IAAA/Q,EAAA,OAAA9L,EAAAtU,EAAA0U,KAAA,SAAA0c,GAAA,cAAAA,EAAAxc,KAAAwc,EAAAvc,MAAA,cAChBuL,EAA6B,CAC/BiR,SAAUF,GAFQC,EAAAvc,KAAA,EAKhBoZ,GAAcrvB,EAAIwhB,EAASb,GALX,wBAAA6R,EAAA/b,SAAA6b,MAAH,gBAAAI,EAAAC,GAAA,OAAAN,EAAA30B,MAAAvB,KAAAoB,YAAA,GAgBvB,OARAwmB,oBAAU,WACNmN,MACD,IAEHnN,oBAAU,WAAM,IAAA6O,EACZzC,EAAc,QAAAyC,EAAA,OAACnD,QAAD,IAACA,OAAD,EAACA,EAAM9G,aAAP,IAAAiK,IAAgB,KAC/B,CAACnD,IAGAA,GACAvhB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,WACXK,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAMA,EAAMC,QAASiP,IACzBjjB,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,sHACAjW,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC0kB,GAAA,EAAD,0RAIJ3kB,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAM+f,MAAvB,8CACA9iB,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,WA1H7BkgB,OA0HY,6DAIRjjB,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAM2N,EAAiB1N,QAASyP,GAAkB1N,SAAS,KAAKC,WAAS,GAC7EhW,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,0GACAjW,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC0kB,GAAA,EAAD,+bAGA3kB,EAAA9M,EAAA+M,cAAC2kB,GAAA,EAAD,CACIzK,GAAI,CAAEgG,GAAI,GACV0E,UAAQ,EACR7O,WAAS,EACTzjB,MAAK,2DAAA4N,OAA6DohB,EAAKzvB,IACvEgzB,aACI9kB,EAAA9M,EAAA+M,cAAC8kB,GAAA,EAAD,CAAgBzuB,SAAS,OACrB0J,EAAA9M,EAAA+M,cAAC+W,GAAA,EAAD,CAAYjU,QAxHT,WAC3BiiB,UAAUC,UAAUC,UAApB,2DAAA/kB,OAAA,OAAyFohB,QAAzF,IAAyFA,OAAzF,EAAyFA,EAAMzvB,MAuH1BxB,KAAK,OAC9C0P,EAAA9M,EAAA+M,cAACklB,GAAAjyB,EAAD,WAMpB8M,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAM0gB,OAAvB,kBAIRzjB,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAMqO,EAAoBpO,QAAS0P,GAAqB3N,SAAS,KAAKC,WAAS,GACnFhW,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,0JACAjW,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW0X,GAAI,CAAEgG,GAAI,GAAK/e,MAAM,mDAAW4U,WAAS,EAACllB,KAAK,QAAQyB,MAAOqwB,EAAgBlgB,SA/GzE,SAAC1B,GAC7B,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3BswB,EAAkBtwB,OA+GVyN,EAAA9M,EAAA+M,cAAC0Y,GAAA,EAAD,KACI3Y,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,WAxG7Boe,GAAcqB,EAJqB,CAC/Bjd,KAAMqd,GAG4B,cAAU9P,KAAhDzkB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAqD,SAAA4G,IAAA,OAAA7G,EAAAtU,EAAA0U,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EAAmBib,KAAnB,OAAkCU,KAAlC,wBAAApV,EAAA/F,SAAA8F,SAwGzC,0DACArO,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAM2gB,OAAvB,sDAIR1jB,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,KACI9Z,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MAApB,8CACAJ,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,KACIoL,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,SAApB,gGAA+CmhB,EAAK6D,WAE/CtD,GACD9hB,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,SAApB,oCAAqCmhB,EAAK9G,OAG1CqH,GACA9hB,EAAA9M,EAAA+M,cAACwC,EAAA,EAAD,CAAW0X,GAAI,CAAEgG,GAAI,GAAKrvB,KAAK,QAAQsQ,MAAM,kCAAS7O,MAAOyvB,EAAatf,SA9I/E,SAAC1B,GACpB,IAAMzO,EAAQyO,EAAME,OAAO3O,MAC3B0vB,EAAe1vB,OA+ICyN,EAAA9M,EAAA+M,cAACggB,GAAA,EAAD,KACIjgB,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQhS,KAAK,QAAQiS,QAAS,kBAAMogB,MAC/BrB,EAAkB,yDAAc,oFAI7C9hB,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MAApB,gEAEI2Q,EAAMzhB,OAAS,GACf0Q,EAAA9M,EAAA+M,cAAColB,GAAA,EAAD,KACIrlB,EAAA9M,EAAA+M,cAACqlB,GAAA,EAAD,KACItlB,EAAA9M,EAAA+M,cAACslB,GAAA,EAAD,KACIvlB,EAAA9M,EAAA+M,cAACulB,GAAA,EAAD,KACIxlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,yDACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,wFACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,8FACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,qEACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,mDACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,uFACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,qDAGRzlB,EAAA9M,EAAA+M,cAACylB,GAAA,EAAD,KAEQ3U,EAAMze,IAAI,SAAA8e,GAAI,OACVpR,EAAA9M,EAAA+M,cAACulB,GAAA,EAAD,CAAUnzB,IAAK+e,EAAKtf,IAChBkO,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACKrU,EAAK7L,MAEVvF,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACK,IAAIE,KAAKvU,EAAKwU,iBAAiBC,eAAe,UAEnD7lB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACK,IAAIE,KAAKvU,EAAK0U,sBAAsBD,eAAe,UAExD7lB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACIzlB,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQhS,KAAK,QAAQiS,QAAS,kBA1M1DjR,EA0M+Esf,EAAKtf,GA1MxEyyB,EA0M4EnT,EAAKmT,SAzMjHL,GAAkBpyB,GAAKyyB,GAAUzR,KAAKkQ,SACjCuB,GACD5C,GAAmB,IAHJ,IAAC7vB,EAAYyyB,IA2MqBnT,EAAKmT,SAAW,kFAAmB,iEAG5CvkB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACIzlB,EAAA9M,EAAA+M,cAAC+W,GAAA,EAAD,CAAYjU,QAAS,kBAAMmgB,EAAc9R,EAAKtf,GAAIsf,EAAK7L,QACnDvF,EAAA9M,EAAA+M,cAAC8lB,GAAA7yB,EAAD,QAGR8M,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACIzlB,EAAA9M,EAAA+M,cAAC+W,GAAA,EAAD,CAAYjU,QAAS,kBA3L9CjR,EA2LsEsf,EAAKtf,GA3L/DyT,EA2LmE6L,EAAK7L,KA1L3Gkd,EAAgB3wB,GAChB+wB,EAAkBtd,QAClB8c,GAAsB,GAHA,IAACvwB,EAAYyT,IA4LiBvF,EAAA9M,EAAA+M,cAAC+lB,GAAA9yB,EAAD,QAGR8M,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACIzlB,EAAA9M,EAAA+M,cAAC+W,GAAA,EAAD,CAAYjU,QAAS,kBAnP1CjR,EAmPsEsf,EAAKtf,GAlPtG+vB,EAAkB/vB,QAClB6tB,GAAQ,GAFkB,IAAC7tB,IAoPyBkO,EAAA9M,EAAA+M,cAACgmB,GAAA/yB,EAAD,cAWf,IAAjB6d,EAAMzhB,QACN0Q,EAAA9M,EAAA+M,cAACoa,GAAA,EAAD,CAAOC,SAAS,UAAU4L,MAAM,GAAhC,0LClTb,SAASC,GAAer0B,GACnC,OAAO,IAAImf,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,SAAA9R,OAAYrO,GAG1B8gB,EAASN,GADCH,MAGhBU,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAKF,OAJKA,EAASE,IACVP,IAGGK,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCjBpB,SAAS6Y,GAAgBt0B,GACpC,OAAO,IAAImf,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,cAAA9R,OAAiBrO,GAG/B8gB,EAASN,GADCH,MAGhBU,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAKF,OAJKA,EAASE,IACVP,IAGGK,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,cCfpB,SAAS8Y,GAAav0B,GACjC,OAAO,IAAImf,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAQ,eAAA9R,OAAkBrO,GAEhCsgB,EAAUD,KAEhBU,MAAMF,EAAK,CACPJ,OAAQ,OACRH,QAASA,IAERU,KAAK,SAAAC,GAKF,OAJKA,EAASE,IACVP,IAGGK,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OCHnC,IA8He+Y,GA9HqB,SAAAhf,GAA4B,IAAzB2M,EAAyB3M,EAAzB2M,mBACnCiB,EAAwBC,mBAA2B,MAAnDC,EAAA/mB,OAAAgnB,GAAA,EAAAhnB,CAAA6mB,EAAA,GAAOqM,EAAPnM,EAAA,GAAaoM,EAAbpM,EAAA,GACAG,EAA0BJ,mBAAsB,IAAhDK,EAAAnnB,OAAAgnB,GAAA,EAAAhnB,CAAAknB,EAAA,GAAOxE,EAAPyE,EAAA,GAAciM,EAAdjM,EAAA,GACAE,EAA8CP,oBAAkB,GAAhEQ,EAAAtnB,OAAAgnB,GAAA,EAAAhnB,CAAAqnB,EAAA,GAAO6Q,EAAP5Q,EAAA,GAAwB6Q,EAAxB7Q,EAAA,GACA+B,EAA0CvC,mBAAwB,MAAlEwC,EAAAtpB,OAAAgnB,GAAA,EAAAhnB,CAAAqpB,EAAA,GAAO+O,EAAP9O,EAAA,GAAsB+O,EAAtB/O,EAAA,GACAC,EAAoCzC,mBAA2B,MAA/D0C,EAAAxpB,OAAAgnB,GAAA,EAAAhnB,CAAAupB,EAAA,GAEQ+O,GAFR9O,EAAA,GAAAA,EAAA,GAEmB+O,eAAXD,QAEFxS,EAAoB,IAAIT,GAAkB,cAE1CuF,EAAWC,eAQX2N,EAAqB,WACvBL,GAAmB,IAOjBM,EAAO,eAAAzS,EAAAhmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAC,IAAA,OAAAF,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNoe,GAAeQ,GAChB7T,KAAK,SAAAyO,GAAUpwB,QAAQC,IAAImwB,GAAOC,EAAQD,KAFnC,wBAAA1Z,EAAAU,SAAAb,MAAH,yBAAA2M,EAAA7kB,MAAAvB,KAAAoB,YAAA,GAKP2hB,EAAQ,eAAAwD,EAAAnmB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAAiB,IAAA,OAAAlB,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACPqe,GAAgBO,GACjB7T,KAAK,SAAA/B,GAAW5f,QAAQC,IAAI2f,GAAQ0Q,EAAS1Q,KAFrC,wBAAApI,EAAAJ,SAAAG,MAAH,yBAAA8L,EAAAhlB,MAAAvB,KAAAoB,YAAA,GAKR03B,EAAS,eAAAxY,EAAAlgB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAG,SAAA4G,EAAOvc,GAAP,OAAA0V,EAAAtU,EAAA0U,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EACRse,GAAav0B,GAAIghB,KAAjB,eAAAkC,EAAA3mB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAAsB,SAAAsB,EAAOgK,GAAP,IAAA3B,EAAA,OAAA5J,EAAAtU,EAAA0U,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACLoM,EAAkBG,QAAQ,CAAExiB,GAAIihB,EAASjhB,GAAIyT,KAAMwN,EAASxN,OADvD,QAClB6L,EADkBpI,EAAA2K,QAIpBM,EAAmB7C,EAAKA,KAAKC,KAAMD,EAAKA,KAAKvhB,OAC7CopB,EAAS,MALW,wBAAAjQ,EAAAT,SAAAQ,MAAtB,gBAAA0L,GAAA,OAAAO,EAAAxlB,MAAAvB,KAAAoB,YAAA,IADQ,wBAAAif,EAAA/F,SAAA8F,MAAH,gBAAA7F,GAAA,OAAA+F,EAAA/e,MAAAvB,KAAAoB,YAAA,GAaf,OAFAwmB,oBAAU,WAAQiR,IAAW9V,KAAe,IAGxCuQ,GACAvhB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,WACXK,EAAA9M,EAAA+M,cAAC6V,GAAA,EAAD,CAAQ/B,KAAMwS,EAAiBvS,QAAS6S,GACpC7mB,EAAA9M,EAAA+M,cAACgW,GAAA,EAAD,8IACAjW,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC0kB,GAAA,EAAD,6hBAIJ3kB,EAAA9M,EAAA+M,cAACiW,GAAA,EAAD,KACIlW,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,WArC7BgkB,EAAUN,KAqCE,oFACAzmB,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAM8jB,MAAvB,wBAIR7mB,EAAA9M,EAAA+M,cAAC6Z,GAAA,EAAD,KACI9Z,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MAApB,8CACAJ,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,KACIoL,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,SAApB,oCAAqCmhB,EAAK9G,SAGlDza,EAAA9M,EAAA+M,cAACrL,GAAA,EAAD,CAAOmlB,QAAS,GACZ/Z,EAAA9M,EAAA+M,cAACI,EAAA,EAAD,CAAYD,QAAQ,MAApB,gEAEI2Q,EAAMzhB,OAAS,GACf0Q,EAAA9M,EAAA+M,cAAColB,GAAA,EAAD,KACIrlB,EAAA9M,EAAA+M,cAACqlB,GAAA,EAAD,KACItlB,EAAA9M,EAAA+M,cAACslB,GAAA,EAAD,KACIvlB,EAAA9M,EAAA+M,cAACulB,GAAA,EAAD,KACIxlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,yDACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,wFACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,8FACAzlB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,mFAGRzlB,EAAA9M,EAAA+M,cAACylB,GAAA,EAAD,KAEQ3U,EAAMze,IAAI,SAAA8e,GAAI,OACVpR,EAAA9M,EAAA+M,cAACulB,GAAA,EAAD,CAAUnzB,IAAK+e,EAAKtf,IAChBkO,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACKrU,EAAK7L,MAEVvF,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACK,IAAIE,KAAKvU,EAAKwU,iBAAiBC,eAAe,UAEnD7lB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACK,IAAIE,KAAKvU,EAAK0U,sBAAsBD,eAAe,UAExD7lB,EAAA9M,EAAA+M,cAACwlB,GAAA,EAAD,KACIzlB,EAAA9M,EAAA+M,cAAC6C,EAAA,EAAD,CAAQhS,KAAK,QAAQiS,QAAS,kBAxF1DjR,EAwF+Esf,EAAKtf,GAvFxG40B,EAAiB50B,QACjB00B,GAAmB,GAFA,IAAC10B,IAwF4B,sGAYX,IAAjBif,EAAMzhB,QACN0Q,EAAA9M,EAAA+M,cAACoa,GAAA,EAAD,CAAOC,SAAS,UAAU4L,MAAM,GAAhC,sRCxDfxf,GAAsBpG,IAAM0mB,cAAmC,MAE/DC,GAAiB,CAC1BrrB,KAAO,aACPwC,SAAW,aACX1F,YAAc,aACdrE,aAAe,aACfpE,aAAe,cAGNi3B,GAAgB,CACzBC,eAAiB,aACjB1zB,IAAM,aACNF,KAAO,aACPmI,MAAQ,cAaC0rB,GAAS,SAAC5nB,GAAuB,IAAA6nB,EAC1C,MAC2B,OAAvB7nB,EAAMqH,cAAyBrH,EAAM8nB,oBAEjCtnB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,mBAAf,QAAA0nB,EAEQ7nB,EAAMrD,WAFd,IAAAkrB,OAAA,EAEQA,EAAW/0B,IAAI,SAACC,EAAO6E,GAAR,IAAAmwB,EAAAC,EAAA,OACXxnB,EAAA9M,EAAA+M,cAAA,OACIN,UAAU,gBACVD,MAAO,CAAEiF,OAAM,GAAAxE,OAAK/I,IAAUoI,EAAMioB,IAAM,UAAY,UAAvC,gBAEd9jB,KAAK+jB,IAAI/jB,KAAK+jB,IAAItwB,GAASuM,KAAK+jB,IAAIloB,EAAMioB,OAAU,EAC/CznB,EAAA9M,EAAA+M,cAAA,OAAKnK,IAAK0J,EAAMmoB,SAChB3nB,EAAA9M,EAAA+M,cAAA,YAEL1N,EARL,QAAAg1B,EASK/nB,EAAMmoB,cATX,IAAAJ,OAAA,UAAAC,EASKD,EAAc1c,eATnB,IAAA2c,OAAA,EASKA,EAAuBI,eAAe,CAAEC,SAAU,eAKjE7nB,EAAA9M,EAAA+M,cAAA,aA80BC6nB,qDAp0BX,SAAAA,EAAYtoB,GAAiB,IAAAxP,EAAA,OAAA3B,OAAAyS,EAAA,EAAAzS,CAAAJ,KAAA65B,IACzB93B,EAAAJ,EAAAL,KAAAtB,KAAMuR,IALVmoB,OAASrnB,IAAMge,YAIctuB,EAH7BssB,QAAUhc,IAAMge,YAGatuB,EAF7B+3B,WAAaznB,IAAMge,YAEUtuB,EAmD7Bke,sBAAwB,SAACld,GAAD,OAAgBhB,EAAKmR,SAAS,CAAE6mB,sBAAuBh3B,KAnDlDhB,EAqD7B+e,oBAAsB,SAAC/d,GAAD,OAAgBhB,EAAKmR,SAAS,CAAE8mB,oBAAqBj3B,KArD9ChB,EA+D7Bk4B,WAAa,EA/DgBl4B,EAiE7Bm4B,qBAAuB,WACnB5hB,SAAS6X,iBAAiB,UAAW,SAACpd,GAChB,MAAdA,EAAM3O,KAAe2O,EAAMonB,UAC3BpnB,EAAMsc,iBACNttB,EAAKq4B,qBArEYr4B,EA0E7Bq4B,eAAiB,WACbr4B,EAAKmR,SAAS,CAAEmnB,gBAAgB,KA3EPt4B,EA8E7Bu4B,gBAAkB,WACdv4B,EAAKmR,SAAS,CAAEmnB,gBAAgB,KA/EPt4B,EAkF7Bw4B,kBAAoB,WAChBx4B,EAAKmR,SAAS,CAAEsnB,mBAAmB,KAnFVz4B,EAsF7B04B,mBAAqB,WACjB14B,EAAKmR,SAAS,CAAEsnB,mBAAmB,KAvFVz4B,EA0F7B24B,OAAS,WACLpiB,SAASC,OAAT,qCACAxW,EAAKmR,SAAS,CAACiW,SAAS,IACxBpnB,EAAKmrB,qBA7FoBnrB,EAgG7BmrB,kBAhG6B9sB,OAAAkZ,EAAA,EAAAlZ,CAAAmZ,EAAAtU,EAAAuU,KAgGT,SAAAC,IAAA,OAAAF,EAAAtU,EAAA0U,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,ECnOb,IAAIkJ,QAAQ,SAAUC,EAASwB,GAClC,IAAMC,EAAMV,GAAW,QAEjBwH,EAAMrT,EAAU,OAEjBqT,GACD/G,IAGJ,IAAMN,EAAU,IAAIC,QACpBD,EAAQvhB,IAAI,gBAAZ,UAAAsP,OAAuCsZ,IAEvC,IAAM7G,EAASN,GAAUF,GAEzBS,MAAMF,EAAKC,GACNE,KAAK,SAAAC,GAKF,OAJKA,EAASE,IACVP,IAGGK,EAASI,SAEnBL,KAAK,SAAAK,GAAI,OAAIjC,EAAQiC,KACrBC,MAAM,SAAA7F,GAAK,OAAImF,EAAOnF,OD8MtBuF,KAAK,SAAAyO,GAAI,OAAIvxB,EAAKmR,SAAS,CAACogB,KAAMA,MAClCnO,MAAM,kBAAMpjB,EAAKmR,SAAS,CAACogB,KAAM,SAHtB,wBAAA1Z,EAAAU,SAAAb,MAhGS1X,EAsG7BwxB,QAAU,SAACD,GACPvxB,EAAKmR,SAAS,CAAEogB,KAAMA,KAvGGvxB,EA2G7B44B,YAAc,WACVvkB,EAAcrU,EAAK8R,MAAMwC,SAAUtU,EAAK8R,MAAM+E,eA5GrB7W,EA+G7BiR,gBAAkB,SAACnP,EAAYsP,GAC3BpR,EAAK8R,MAAMwC,SAASzS,MAAMxB,QAAQ,SAACqC,GAC/B,GAAIA,EAAKZ,KAAOA,EAAI,CAChB,IAAM0S,EACFpD,EACKqD,MAAM,IACNjS,OAAO,SAAAkS,GAAC,MAAU,MAANA,GAAmB,OAANA,IACzBtB,KAAK,IACLqB,MAAM,KACT9T,OAA4BsB,IAAnBuS,EAAY,GAAmBA,EAAY,GAAK,GAC/DxU,EAAK8R,MAAMwC,SAASzS,MAAM0S,OAAO,CAC7BzS,GAAIY,EAAKZ,GACTsP,MAAOA,EACPzQ,OAAQA,OAIpBX,EAAK44B,eAhIoB54B,EAoI7BsR,mBAAqB,SAACxP,EAAY+B,GAC9B7D,EAAK8R,MAAMwC,SAASzS,MAAMxB,QAAQ,SAACqC,GAC3BA,EAAKZ,KAAOA,GACZ9B,EAAK8R,MAAMwC,SAASzS,MAAM0S,OAAO,CAC7BzS,GAAIY,EAAKZ,GACT+B,QAASA,MAIrB7D,EAAK44B,eA7IoB54B,EAgJ7B0R,qBAAuB,SAAC5P,EAAY6P,GAChC3R,EAAK8R,MAAMwC,SAASzS,MAAMxB,QAAQ,SAACqC,GAC3BA,EAAKZ,KAAOA,GACZ9B,EAAK8R,MAAMwC,SAASzS,MAAM0S,OAAO,CAC7BzS,GAAIY,EAAKZ,GACT6P,UAAWA,MAIvB3R,EAAK44B,eAzJoB54B,EA6J7B4d,qBAAuB,SAACib,EAAehkB,GACnC7U,EAAK8R,MAAMwC,SAASzS,MAAMxB,QAAQ,SAACqC,GAC3BA,EAAKmS,WACL7U,EAAK8R,MAAMwC,SAASzS,MAAM0S,OAAO,CAC7BzS,GAAIY,EAAKZ,GACT+S,WAAW,MAIvB7U,EAAK8R,MAAMwC,SAASzS,MAAMxB,QAAQ,SAACqC,GAC3Bm2B,EAAIzuB,SAAS1H,EAAKZ,KAClB9B,EAAK8R,MAAMwC,SAASzS,MAAM0S,OAAO,CAC7BzS,GAAIY,EAAKZ,GACT+S,UAAWA,MAIvB7U,EAAK44B,eA9KoB54B,EAiL7B84B,WAAa,SAAC5d,GACVlb,EAAKk4B,aACL,IAAMx1B,EAAO,CACTZ,GAAI9B,EAAKk4B,WACT9mB,MAAO,IAAOpR,EAAKk4B,WACnBxjB,EAAGwG,EAAE1P,QAAQutB,OAAOrkB,EACpBiB,EAAGuF,EAAE1P,QAAQutB,OAAOpjB,EACpB9R,SAAS,EACT8N,WAAW,EACXkD,WAAW,GAEf7U,EAAK8R,MAAMwC,SAASzS,MAAM6C,IAAIhC,IA5LL1C,EA+L7Bg5B,eAAiB,EA/LYh5B,EAiM7B+b,eAAiB,SAACH,EAAaxK,EAAevN,EAAkB8N,EAAoBkD,GAChF7U,EAAKg5B,iBAGL,IAAMrkB,EAAShD,EAAY,UAAY9N,EAAU,UAAY,UACvD+Q,EAAaC,EAAY,UAAY,UAOrCnS,EAAiB,CACnBZ,GAAI9B,EAAKg5B,eACTpd,MACAxK,QACAvN,UACA8N,YACAkD,YACAE,MAAO,CACHH,WAAYA,EACZD,OAAQA,EACRK,UAAW,CACPL,OAAQA,EACRC,WAAYA,KAKxB5U,EAAK8R,MAAMmnB,UAAUp3B,MAAM6C,IAAIhC,IA9NN1C,EAiO7B+c,eAAiB,SAACtb,EAAcC,EAAY6E,GACxC,IAAMhG,EAAc,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO4E,MAEvCvG,EAAK8R,MAAMmnB,UAAU74B,MAAMsE,IAAI,CAC3BjD,KAAMA,EACNC,GAAIA,EACJnB,YAAaA,EACb6Q,MAAO7K,KAxOcvG,EA4O7Bsa,cAAgBhK,IAAMge,YA5OOtuB,EA8O7B2b,kBAAoB,kBAAM3b,EAAKg5B,gBA9OFh5B,EAgP7Bub,cAAgB,WACZ,IAAK,IAAIpc,EAAI,EAAGA,GAAKa,EAAKg5B,eAAgB75B,IACtCa,EAAK8R,MAAMmnB,UAAUp3B,MAAMq3B,OAAO/5B,GAEtCa,EAAK8R,MAAMmnB,UAAU74B,MAAMC,QAAQ,SAAC6a,GAAD,OAAOlb,EAAK8R,MAAMmnB,UAAU74B,MAAM84B,OAAOhe,EAAEpZ,MAC9E9B,EAAKg5B,eAAiB,GArPGh5B,EAwP7Bm5B,WAAa,SAACje,GACV,IAAMke,EAAqBle,EAAErZ,MACvBw3B,EAAgBr5B,EAAK8R,MAAMwC,SAASzS,MAAMK,IAAIk3B,GACpDp5B,EAAKmR,SAAS,CAAEmoB,aAAcD,EAAc,MA3PnBr5B,EA+P7Bu5B,aAAe,SAACre,GAEY,IADGA,EAAErZ,MAChBvC,QACTU,EAAKmR,SAAS,CAAEmoB,aAAc,QAlQTt5B,EAsQ7B6R,WAAa,SAAC/P,GACV9B,EAAK8R,MAAMwC,SAASzS,MAAMq3B,OAAOp3B,GAEjC,IAAI03B,EAAoB,GACxBx5B,EAAK8R,MAAMwC,SAASlU,MAAMC,QAAQ,SAACC,GAC3BA,EAAKmB,OAASK,GAAMxB,EAAKoB,KAAOI,GAChC03B,EAAQt4B,KAAKZ,EAAKwB,MAG1B9B,EAAK8R,MAAMwC,SAASlU,MAAM84B,OAAOM,IA/QRx5B,EAkR7By5B,WAAa,SAACve,GACV,IAAMwe,EAAqBxe,EAAE9a,MACvBu5B,EAAgB35B,EAAK8R,MAAMwC,SAASlU,MAAM8B,IAAIw3B,GACpD15B,EAAKmR,SAAS,CAAEyoB,aAAcD,EAAc,KAC5Cx4B,QAAQC,IAAI,yBAtRapB,EAyR7B65B,aAAe,SAAC3e,GAEY,IADGA,EAAE9a,MAChBd,QACTU,EAAKmR,SAAS,CAAEyoB,aAAc,QA5RT55B,EAgS7B85B,qBAAuB,SAACh4B,EAAYvB,GAChCP,EAAK8R,MAAMwC,SAASlU,MAAMmU,OAAO,CAC7BzS,GAAIA,EACJsP,MAAOkC,EAAmB/S,EAAaP,EAAK8R,MAAM+E,cAClDtW,YAAaA,KApSQP,EAwS7ByY,WAAa,SAAC3W,GACV9B,EAAK8R,MAAMwC,SAASlU,MAAM84B,OAAOp3B,IAzSR9B,EA4S7B6d,OAAS,SAAC1R,EAAesrB,GACrBz3B,EAAKmR,SAAS,CAAEhF,IAAKA,EAAKsrB,IAAKA,KA7SNz3B,EAgT7B+5B,eAAiB,SAAC1M,EAAwBM,GACtC,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASkkB,GAAe7oB,UAEvB,2CAGT4B,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBAxVGpf,EA+V7Bqf,YAAc,WAEV,OADArf,EAAKmR,SAAS,CAAE6oB,UAAWh6B,EAAK8R,MAAMkoB,YAC9Bh6B,EAAK8R,MAAMkoB,UAjWMh6B,EAoW7Bof,gBAAkB,kBAAOpf,EAAK8R,MAAMkoB,SAAW,6CAAY,8CAAa,sGApW3Ch6B,EAsW7Bi6B,eAAiB,SAAC5M,EAAwBM,GACtC,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASkkB,GAAevuB,aAEvB,mFAGTsH,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBA9YGpf,EAqZ7Bk6B,iBAAmB,SAAC7M,EAAwBM,GACxC,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASkkB,GAAeh3B,cAEvB,uBAGT+P,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBA7bGpf,EAoc7Bm6B,iBAAmB,SAAC9M,EAAwBM,GACxC,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASkkB,GAAe5yB,cAEvB,6BAGT2L,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBA5eGpf,EAmf7Bo6B,eAAiB,SAAC/M,EAAwBM,GACtC,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcC,gBAGtBn3B,EAAK8R,MAAMqJ,aAAe,8CAAa,wEAGhDnL,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBA5hBGpf,EAmiB7Bq6B,mBAAqB,SAAChN,EAAwBM,GAC1C,OACI3d,EAAA9M,EAAA+M,cAAA,OAAKgf,cAAe5B,GAChBrd,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAc3zB,MAEtB,uBAGTyM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAczzB,KAEtB,yCAGTuM,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAASmkB,GAAcxrB,OAEtB,mCAGTsE,EAAA9M,EAAA+M,cAAA,OAAK8C,QAAS4a,GACV3d,EAAA9M,EAAA+M,cAAA,UACIN,UAAW,sBACXoD,QAAS/S,EAAKqf,aAEbrf,EAAKof,sBAnkBGpf,EA0kB7Bs6B,YAAc,SAACzjB,GACX,OAAQA,GACJ,IAAK,MACL,IAAK,UACD,OAAO7W,EAAK+5B,eAEhB,IAAK,MACD,OAAO/5B,EAAKi6B,eAEhB,IAAK,QACL,IAAK,SACD,OAAOj6B,EAAKk6B,iBAEhB,IAAK,QACL,IAAK,SACD,OAAOl6B,EAAKm6B,iBAEhB,IAAK,MACL,IAAK,OACD,OAAOn6B,EAAKo6B,eAEhB,QACI,OAAOp6B,EAAKq6B,qBA7lBpBr6B,EAAK8R,MAAQ,CACT+E,aAAc,KAEdyiB,aAAc,KACdM,aAAc,KACdW,YAAY,EACZjmB,SAAU,CAAEzS,MAAO,IAAIsT,IAAiB/U,MAAO,IAAI+U,KACnD8jB,UAAW,CAAEp3B,MAAO,IAAIsT,IAAqB/U,MAAO,IAAI+U,KACxD6X,QAAS,CACL5sB,MAAO,CACHwrB,OAAQ,CACJC,SAAS,EACTxK,KAAM,WACNyK,UAAW,IAEfxsB,OAAQ,KAEZuC,MAAO,CACH+qB,MAAO,MACPC,KAAM,oBACNC,oBAAoB,EACpB0N,gBAAiB,GACjBzlB,MAAO,MACP0lB,iBAAkB,IAEtB1N,QAAS,CACLlB,SAAS,IAGjB6O,qBAAqB,EACrBC,OAAQ,KACRrC,gBAAgB,EAChBG,mBAAmB,EACnBrR,SAAS,EACTjb,SAAKlK,EACLw1B,SAAKx1B,EACLq1B,qBAAqB,EACrBnc,cAAc,EAEd6c,uBAAuB,EACvBC,qBAAqB,EAErB+B,UAAU,EACV9f,QAAS,kBAAQlK,EAAA9M,EAAA+M,cAAA,aACjBshB,KAAM,MA/CevxB,6FAuD7B,SAAA0Y,IAAA,OAAAlB,EAAAtU,EAAA0U,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACU9Z,KAAKktB,oBADf,OAGIltB,KAAK26B,cACL36B,KAAKk6B,uBACLl6B,KAAKu6B,oBALT,wBAAA7f,EAAAJ,SAAAG,EAAAza,mFA+iBA,WAAS,IAAA6hB,EAAA7hB,KACL,OACI+R,EAAA9M,EAAA+M,cAAC2qB,GAAA,EAAD,KACI5qB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,KACI7qB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,SAAS7xB,QACjB+G,EAAA9M,EAAA+M,cAAC8qB,GAAD,QAEJ/qB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,YAAY7xB,QACpB+G,EAAA9M,EAAA+M,cAAC+qB,GAAD,QAEJhrB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,cAAc7xB,QACtB+G,EAAA9M,EAAA+M,cAACgrB,GAAD,QAEJjrB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,iBAAiB7xB,QACzB+G,EAAA9M,EAAA+M,cAACirB,GAAD,CAAkB/P,kBAAmBltB,KAAKktB,sBAE9Cnb,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,MAAM7xB,QACd+G,EAAA9M,EAAA+M,cAACkrB,GAAD,CAAQ5J,KAAMtzB,KAAK6T,MAAMyf,KACjB9O,aAAcxkB,KAAK06B,OACnB1U,mBAAoB,SAACpN,EAAchX,GAC/B,IAAM6V,EAAe7V,GAASwV,EAAcwB,GAAenB,aAC3DR,EAAgBQ,GAAc7T,MAAMxB,QAAQ,SAACW,GAAD,OAAOG,QAAQC,IAAIJ,KAE/D8e,EAAKoY,WAAaxiB,EAAa7T,MAAMvC,OACrCwgB,EAAK3O,SAAS,CACN0F,aAAcA,EACdvC,SAAUY,EAAgBQ,IAE5B,kBAAMoK,EAAK8Y,iBAIrBpH,QAASvzB,KAAKuzB,YAG1BxhB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,gBAAgB7xB,QACxB+G,EAAA9M,EAAA+M,cAACmrB,GAAD,CACInX,mBACI,SAACpN,EAAchX,GACX,IAAM6V,EAAe7V,GAASwV,EAAcwB,GAAenB,aAC3DR,EAAgBQ,GAAc7T,MAAMxB,QAAQ,SAACW,GAAD,OAAOG,QAAQC,IAAIJ,KAE/D8e,EAAKoY,WAAaxiB,EAAa7T,MAAMvC,OACrCwgB,EAAK3O,SAAS,CACN0F,aAAcA,EACdvC,SAAUY,EAAgBQ,IAE5B,kBAAMoK,EAAK8Y,qBAMjC5oB,EAAA9M,EAAA+M,cAAC4qB,GAAA,EAAD,CAAOC,KAAK,IAAI7xB,QACZ+G,EAAA9M,EAAA+M,cAACyG,GAAoB2kB,SAArB,CAA8B94B,MAAOtE,KAAK6T,MAAM+E,cAC5C7G,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,OACXK,EAAA9M,EAAA+M,cAACqrB,GAAD,CACIvX,KAAM9lB,KAAK6T,MAAM2mB,kBACjBzU,QAAS/lB,KAAKy6B,mBACdjW,aAAcxkB,KAAK06B,OACnB1U,mBAAoB,SAACpN,EAAchX,GAE/B,IAAM6V,EAAe7V,GAASwV,EAAcwB,GAAenB,aAE3DvU,QAAQC,IAAIsU,GACZvU,QAAQC,IAAIsU,EAAY,OACxBR,EAAgBQ,GAAc7T,MAAMxB,QAAQ,SAACW,GAAD,OAAOG,QAAQC,IAAIJ,KAE/D8e,EAAKoY,WAAaxiB,EAAa7T,MAAMvC,OACrCwgB,EAAK3O,SAAS,CACN0F,aAAcA,EACdvC,SAAUY,EAAgBQ,IAE5B,kBAAMoK,EAAK8Y,mBAKxB36B,KAAK6T,MAAM6oB,OAEZ3qB,EAAA9M,EAAA+M,cAACsrB,GAAD,CAAcxX,KAAM9lB,KAAK6T,MAAMwmB,eACjBtU,QAAS/lB,KAAKs6B,gBACdnR,QAASnpB,KAAK6T,MAAMsV,QACpB3E,aAAcxkB,KAAK06B,OACnB94B,MAAOuV,EAAgBnX,KAAK6T,MAAMwC,UAClCuC,aAAc5Y,KAAK6T,MAAM+E,eACvC7G,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,qBACV1R,KAAK6T,MAAMoI,WAEhBlK,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,kBACXK,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CAAOP,UAAU,OAAOS,QAAQ,YAAhC,mHAGAJ,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CAAOP,UAAU,OAAOS,QAAQ,YAAhC,oLAGAJ,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CAAOP,UAAU,OAAOS,QAAQ,YAAhC,8MAGAJ,EAAA9M,EAAA+M,cAACC,EAAA,EAAD,CAAOP,UAAU,OAAOS,QAAQ,YAAhC,6LAIJJ,EAAA9M,EAAA+M,cAACurB,GAAD,CACI5L,mBAAoB3xB,KAAK6T,MAAMkmB,sBAC/B9Z,sBAAuBjgB,KAAKigB,wBAEhClO,EAAA9M,EAAA+M,cAACwrB,GAAD,CACIlL,iBAAkBtyB,KAAK6T,MAAMmmB,oBAC7BlZ,oBAAqB9gB,KAAK8gB,sBAE9B/O,EAAA9M,EAAA+M,cAACyrB,GAAD,CACI7kB,aAAc5Y,KAAK6T,MAAM+E,aACzBygB,oBAAqBr5B,KAAK6T,MAAMwlB,oBAChCnrB,IAAKlO,KAAK6T,MAAM3F,IAChBsrB,IAAKx5B,KAAK6T,MAAM2lB,IAChBE,OAAQ15B,KAAK05B,SAGjB3nB,EAAA9M,EAAA+M,cAAC0rB,GAAD,CACI9Q,oBAAqB5sB,KAAKu6B,kBAC1B1N,oBAAqB7sB,KAAKo6B,eAC1BtN,sBAAuB9sB,KAAK06B,OAC5BvR,QAASnpB,KAAK6T,MAAMsV,UAIxBpX,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,oBACXK,EAAA9M,EAAA+M,cAAC2rB,GAAD,CACI/5B,MAAO5D,KAAK6T,MAAMwC,SAASzS,MAC3BzB,MAAOnC,KAAK6T,MAAMwC,SAASlU,MAC3BwjB,KAAM3lB,KAAK6T,MAAMwC,SACjBoa,cAAezwB,KAAK66B,WACpBnK,SAAU1wB,KAAKw7B,WACf7K,SAAU3wB,KAAKk7B,WACftK,SAAU5wB,KAAKs7B,aACfzK,SAAU7wB,KAAK47B,aACfvN,QAASruB,KAAKquB,QACda,YAAalvB,KAAKq8B,YAAYr8B,KAAK6T,MAAM+E,iBAIhD5Y,KAAK6T,MAAMkoB,SACRhqB,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,aACXK,EAAA9M,EAAA+M,cAAC4rB,GAAD,CACIh6B,MAAO5D,KAAK6T,MAAMmnB,UAAUp3B,MAC5BzB,MAAOnC,KAAK6T,MAAMmnB,UAAU74B,MAC5BwjB,KAAM3lB,KAAK6T,MAAMmnB,UACjBvK,cAAezwB,KAAK66B,WACpBnK,SAAU1wB,KAAKw7B,WACf7K,SAAU3wB,KAAKk7B,WACftK,SAAU5wB,KAAKs7B,aACfzK,SAAU7wB,KAAK47B,aACfvN,QAASruB,KAAK85B,WACd5K,YAAalvB,KAAKq8B,YAAYr8B,KAAK6T,MAAM+E,iBAG/C7G,EAAA9M,EAAA+M,cAAA,YACND,EAAA9M,EAAA+M,cAAA,OAAKN,UAAU,mBACXK,EAAA9M,EAAA+M,cAAC6rB,EAAD,CACIp5B,KAAMzE,KAAK6T,MAAMwnB,aACjBroB,gBAAiBhT,KAAKgT,gBACtBK,mBAAoBrT,KAAKqT,mBACzBI,qBAAsBzT,KAAKyT,qBAC3BG,WAAY5T,KAAK4T,WACjBL,eAAgBylB,GAAerrB,OAGnCoE,EAAA9M,EAAA+M,cAAC8rB,EAAD,CACIz7B,KAAMrC,KAAK6T,MAAM8nB,aACjBthB,sBAAuBra,KAAK67B,qBAC5BrhB,WAAYxa,KAAKwa,WACjB5B,aAAc5Y,KAAK6T,MAAM+E,aACzBrF,eAAgBylB,GAAerrB,OAGnCoE,EAAA9M,EAAA+M,cAAC+rB,GAAD,CACIne,OAAQ5f,KAAK4f,OACbvJ,SAAUrW,KAAK6T,MAAMwC,SACrB2kB,UAAWh7B,KAAK6T,MAAMmnB,UACtBld,eAAgB9d,KAAK8d,eACrBZ,aAAcld,KAAK6T,MAAMqJ,aACzB4B,eAAgB9e,KAAK8e,eACrBpB,kBAAmB1d,KAAK0d,kBACxBJ,cAAetd,KAAKsd,cACpBqC,qBAAsB3f,KAAK2f,qBAC3B0O,QAASruB,KAAKquB,QACd3M,aAAcuX,GAAcC,eAC5BpX,QAAS,SAACkc,GAAD,OAAmBhF,GAAerrB,KAAOqwB,GAClDhc,YAAa,SAACgc,GAAD,OAAmBhF,GAAe7oB,SAAW6tB,GAC1D/b,eAAgB,SAAC+b,GAAD,OAAmBhF,GAAevuB,YAAcuzB,GAChE9b,gBAAiB,SAAC8b,GAAD,OAAmBhF,GAAe5yB,aAAe43B,GAClE7b,gBAAiB,SAAC6b,GAAD,OAAmBhF,GAAeh3B,aAAeg8B,GAClExd,eAAgB,SAACnK,GAAD,OAAwBwL,EAAK3O,SAAS,CAAEmD,SAAUA,GAAY,kBAAMwL,EAAK8Y,iBACzFla,gBAAiB,SAAC2C,GAAD,OAA+BvB,EAAK3O,SAAS,CAAE0F,aAAcwK,KAC9E5D,kBAAmB,SAACuF,GAAD,OAAqBlD,EAAK3O,SAAS,CAAEmmB,oBAAqBtU,KAC7EnE,gBAAiB,SAAC1D,GAAD,OAA2B2E,EAAK3O,SAAS,CAAEgK,aAAcA,KAC1EkF,kBAAmB,SAAC4b,GAAD,OAAmB/E,GAAcC,eAAiB8E,GACrE3b,OAAQ,SAAC2b,GAAD,OAAmB/E,GAAczzB,IAAMw4B,GAC/C1b,QAAS,SAAC0b,GAAD,OAAmB/E,GAAc3zB,KAAO04B,GACjDzb,SAAU,SAACyb,GAAD,OAAmB/E,GAAcxrB,MAAQuwB,GACnDle,WAAY,SAACme,GAAD,OAA4Bpc,EAAK3O,SAAS,CAAE+I,QAASgiB,GAC7D,eAAAC,EAAAC,EAAA,eAAAD,EAAMrc,EAAKxF,qBAAX,IAAA6hB,OAAA,UAAAC,EAAMD,EAAoBthB,eAA1B,IAAAuhB,OAAA,EAAMA,EAA6BxE,eAAe,CAAEC,SAAU,cAClEvd,cAAerc,KAAKqc,cACpB4D,sBAAuBjgB,KAAKigB,sBAC5Ba,oBAAqB9gB,KAAK8gB,oBAC1BK,gBAAiBnhB,KAAKmhB,gBACtBC,YAAaphB,KAAKohB,4BA3zBxC/O,IAAMC,WE9HxB8rB,IAASC,OACLtsB,EAAA9M,EAAA+M,cAACD,EAAA9M,EAAMq5B,WAAP,KACIvsB,EAAA9M,EAAA+M,cAACusB,GAAD,OAGJjmB,SAASkmB,eAAe,0CCR5Bh9B,EAAQC,YAAa,EAErB,SAAW8M,GACPA,EAAKA,EAAI,EAAQ,GAAK,IACtBA,EAAKA,EAAI,EAAQ,GAAK,IAF1B,CAGU/M,EAAQ+M,OAAS/M,EAAQ+M,KAAO,sCCL1C,IAAIxO,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAa7Cc,EAAQC,YAAa,EACrB,IAAIsL,EAAkC,SAAUpL,GAE5C,SAASoL,IACL,IAAIhL,EAAQJ,EAAOL,KAAKtB,OAASA,KAGjC,OAFA+B,EAAMuV,KAAO,mBACblX,OAAOC,eAAe0B,EAAOgL,EAAiBnM,WACvCmB,EAEX,OAPAhC,EAAUgN,EAAkBpL,GAOrBoL,EAR2B,CASpC7I,OACF1C,EAAQuL,iBAAmBA,EAC3B,IAAI3B,EAAgC,SAAUzJ,GAE1C,SAASyJ,IACL,IAAIrJ,EAAQJ,EAAOL,KAAKtB,OAASA,KAGjC,OAFA+B,EAAMuV,KAAO,iBACblX,OAAOC,eAAe0B,EAAOqJ,EAAexK,WACrCmB,EAEX,OAPAhC,EAAUqL,EAAgBzJ,GAOnByJ,EARyB,CASlClH,OACF1C,EAAQ4J,eAAiBA,mCCnCzB,IAAIrL,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAazCI,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAEhCI,EAAQC,YAAa,EACrB,IAAI6F,EAAa5B,EAAQ,IACrB+4B,EAAU/4B,EAAQ,KAClBg5B,EAAWh5B,EAAQ,KACnB6J,EAAqB,SAAU5N,GAE/B,SAAS4N,EAAI3N,EAAOC,EAAiBC,EAAO2N,GACxC,IAAI1N,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAOC,IAAoB7B,KAmLzD,OAlLA+B,EAAMsF,MAAQ,IAAIo3B,EAAQ93B,MAC1B5E,EAAM0H,SAAW,SAAU3H,GACvBC,EAAMD,MAAQ,GACdA,EAAMM,QAAQ,SAAUkC,GACpBvC,EAAMD,MAAMmB,KAAK,CAAEuF,QAASzG,EAAMyF,SAASvD,IAAIK,GAAQA,MAAOA,MAElEvC,EAAM+D,WAEV/D,EAAMwF,YAAc,WAChB,YAAuBvD,IAAhBjC,EAAM48B,OAEjB58B,EAAMuO,mBAAqB,WAOvB,OANWvO,EAAMkE,YAAY5B,IAAI,SAAUtB,GACvC,IAAI+B,EACAoB,EAAOnD,EAAEmD,KAEb,OADAA,EAAKmB,MAA2B,QAAlBvC,EAAK/B,EAAEsE,aAA0B,IAAPvC,OAAgB,EAASA,EAAGoC,aAC7DhB,KAIfnE,EAAMkO,iBAAmB,SAAUC,GAC/BnO,EAAM68B,kBAAoB1uB,GAE9BnO,EAAM88B,SAAW,GACjB98B,EAAM2N,QAAU,WACZ,IAAI5K,EAEA2D,EAAM1G,EAAMgG,MAAMhG,EAAMgE,aAAchE,EAAMyF,SAASvD,IAA+C,QAA1Ca,EAAK/C,EAAMD,MAAMC,EAAMgE,qBAAkC,IAAPjB,OAAgB,EAASA,EAAGR,OAAQvC,EAAMiE,YAD3I,GACkK,IAIjL,OAHAjE,EAAMgE,aAAe0C,EAAIT,QACzBjG,EAAMiE,YAAcyC,EAAIR,QACxBlG,EAAM88B,SAAWp2B,EAAI0W,KAAO1W,EAAI0W,KAAO,GAChC1W,GAEX1G,EAAM4N,OAAS,WACX5N,EAAM4F,WAAa,GACnB5F,EAAM6F,sBAAwB,EAG9B,IAFA,IAAIk3B,EAAW,GACXp3B,EAAY,GACPxG,EAAI,EAAGA,EAAIa,EAAMD,MAAMT,OAAS,EAAGH,IAAK,CAC7C,IAAIqC,EAAMxB,EAAMgG,MAAMhG,EAAM6F,sBAAuB7F,EAAMyF,SAASvD,IAAIlC,EAAMD,MAAMC,EAAM6F,uBAAuBtD,OAAQvC,EAAM4F,WAAYm3B,EAAU,IACnJ/8B,EAAM6F,sBAAwBrE,EAAIyE,QAClCjG,EAAM4F,WAAapE,EAAI0E,QACvBP,EAAUzE,KAAK,CAAE+b,UAAWzb,EAAIyb,UAAW3V,SAAU9F,EAAI8F,SAAU4V,WAAY1b,EAAI0b,aAEvF,IAAI8f,EAAOh9B,EAAMgG,MAAMhG,EAAM6F,sBAAuB7F,EAAMyF,SAASvD,IAAIlC,EAAMD,MAAMC,EAAM6F,uBAAuBtD,OAAQvC,EAAM4F,WAAYm3B,EAAU,IACpJp3B,EAAUzE,KAAK,CAAE+b,UAAW+f,EAAK/f,UAAW3V,SAAU01B,EAAK11B,SAAU4V,WAAY8f,EAAK9f,aACtF,IAAIxW,EAAM,CACN7E,MAAOm7B,EAAKn7B,MACZoE,QAAS+2B,EAAK/2B,QACdpC,QAASm5B,EAAKn5B,QACdqC,QAAS82B,EAAK92B,QACdP,UAAWA,GAKf,OAHAxE,QAAQC,IAAI,iBACZD,QAAQC,IAAIsF,EAAIf,WAChBxE,QAAQC,IAAI,iBACLsF,GAEX1G,EAAMuD,KAAOvD,EAAM2N,QACnB3N,EAAMyD,IAAMzD,EAAM4N,OAClB5N,EAAMgG,MAAQ,SAAUC,EAASwD,EAAI4C,EAAS4wB,EAAUt3B,GACpD,IAAIsX,EAAY,GACZC,EAAa,GACb5V,EAAW,GACX41B,EAAY,GACZC,EAAY,WACZn9B,EAAMkE,YAAc,GACpBg5B,EAAU78B,QAAQ,SAAUkC,GAAS,OAAOvC,EAAMkE,YAAYhD,KAAKqB,KACnE26B,EAAY,IAEZE,EAAU,WACVp9B,EAAMkE,YAAY7D,QAAQ,SAAUkC,GAChC,IAAIQ,EACAs6B,EAAOr9B,EAAMs9B,YAAY/6B,EAAM4B,KAAKsC,QAAgC,QAAtB1D,EAAKR,EAAM+C,aAA0B,IAAPvC,OAAgB,EAASA,EAAGmC,OAAQ3C,EAAM+C,MAAO23B,GACxH,OAATI,QAA0B,IAATA,GAA2BA,EAAKh9B,QAAQ,SAAUuH,GAAU,OAAOs1B,EAAUh8B,KAAK0G,QASvG21B,EAAe,WACf,IAAIC,EAAS,IAAIr9B,IACb2G,EAAY,GAChB9G,EAAMkE,YAAY7D,QAAQ,SAAUkC,GAChC,IAAIvB,EAAI,CACJmD,KAAM5B,EAAM4B,KAAMmB,MAAO/C,EAAM+C,YAEGrD,IAAlCu7B,EAAOt7B,IAAI0f,KAAKC,UAAU7gB,MAC1B8F,EAAU5F,KAAKqB,GACfi7B,EAAO38B,IAAI+gB,KAAKC,UAAU7gB,GAAIuB,MAGtCvC,EAAMkE,YAAc,GACpB4C,EAAUzG,QAAQ,SAAUkC,GAAS,OAAOvC,EAAMkE,YAAYhD,KAAKqB,MAQvE,YANoBN,IAAhBjC,EAAM48B,QACNQ,IACAD,IACAI,IACAv9B,EAAMoG,QAAQpG,EAAMkE,aAAa7D,QAAQ,SAAUW,GAAK,OAAOic,EAAU/b,KAAKF,MAE9EiF,EAAUjG,EAAMD,MAAMT,QA1BtBU,EAAMkE,YAAY7D,QAAQ,SAAUkC,GACrBvC,EAAMy9B,WAAWh0B,EAAIlH,EAAM4B,KAAKsC,QAASlE,EAAM+C,MAAMJ,OAAQ3C,EAAM+C,MAAO23B,GAChF58B,QAAQ,SAAUuH,GAAU,OAAOs1B,EAAUh8B,KAAK0G,OA0B3Du1B,IACAI,IACAv9B,EAAMoG,QAAQpG,EAAMkE,aAAa7D,QAAQ,SAAUW,GAAK,OAAOsG,EAASpG,KAAKF,UACzDiB,IAAhBjC,EAAM48B,QACNQ,IACAD,IACAI,IACAv9B,EAAMoG,QAAQpG,EAAMkE,aAAa7D,QAAQ,SAAUW,GAAK,OAAOkc,EAAWhc,KAAKF,MAiBvFu8B,IACAlxB,EAAQnL,KAAK,CAAEW,MAAO7B,EAAMoG,QAAQpG,EAAMkE,aAAcqC,GAAIvG,EAAMD,MAAMkG,GAAS1D,QACjF0D,IACAjG,EAAM88B,SAAS57B,KAAK+7B,GACpBt3B,EAAUzE,KAAK,CAAE+b,UAAWA,EAAWC,WAAYA,EAAY5V,SAAUA,IAClE,CACHzF,MAAO7B,EAAMoG,QAAQpG,EAAMkE,aAC3B+B,QAASA,EACTpC,QAAS7D,EAAMmG,cAAcnG,EAAMkE,aACnCgC,QAASmG,EACT+Q,KAAMpd,EAAM88B,SACZ7f,UAAWA,EAAWC,WAAYA,EAAY5V,SAAUA,EACxD3B,UAAW,MAzBX43B,IACAv9B,EAAM88B,SAAS57B,KAAK+7B,GACpBt3B,EAAUzE,KAAK,CAAE+b,UAAWA,EAAWC,WAAYA,EAAY5V,SAAUA,IAClE,CACHzF,MAAO7B,EAAMoG,QAAQpG,EAAMkE,aAC3B+B,QAASA,EACTpC,QAAS7D,EAAMmG,cAAcnG,EAAMkE,aACnCgC,QAASmG,EACT+Q,KAAMpd,EAAM88B,SACZ7f,UAAWA,EAAWC,WAAYA,EAAY5V,SAAUA,EACxD3B,UAAW,MAkBvB3F,EAAM+D,QAAU,WACZ/D,EAAMgE,aAAe,EACrBhE,EAAMiE,YAAc,GACpBjE,EAAMkE,YAAc,GACpBlE,EAAM88B,SAAW,GACjB98B,EAAMF,gBAAgBO,QAAQ,SAAUkC,GACpC,IAAI+C,EAAQ,IAAIo3B,EAAQ93B,MACxBU,EAAMpE,KAAKqE,EAAW0I,QACtBjO,EAAMkE,YAAYhD,KAAK,CACnBiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,IACjCwD,MAAOA,OAInBtF,EAAM68B,kBAAoBnvB,EAC1B1N,EAAM48B,MAAQ58B,EAAMyF,SAASvD,IAAIqD,EAAWG,KAC5C1F,EAAMsF,MAAMpE,KAAKqE,EAAW0I,QAC5BjO,EAAMkE,YAAc,GACpBlE,EAAM88B,SAAW,GACjBh9B,EAAgBO,QAAQ,SAAUkC,GAC9B,IAAI+C,EAAQ,IAAIo3B,EAAQ93B,MACxBU,EAAMpE,KAAKqE,EAAW0I,QACtBjO,EAAMkE,YAAYhD,KAAK,CACnBiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,IACjCwD,MAAOA,MAGftF,EAAM0H,SAAS3H,GACXC,EAAM48B,OACN58B,EAAMkE,YAAY7D,QAAQ,SAAUkC,GAChCvC,EAAM09B,SAASn7B,EAAM4B,KAAKsC,QAASlE,EAAM+C,SAG1CtF,EAuTX,OA5eAhC,EAAUwP,EAAK5N,GAuLf4N,EAAI3O,UAAU8+B,aAAe,SAAUp7B,GACnC,IAAIQ,EACA66B,EAAM,GAEV,OAD2B,QAA1B76B,EAAKR,EAAMmK,iBAA8B,IAAP3J,GAAyBA,EAAG1C,QAAQ,SAAUkC,GAAS,OAAOq7B,EAAI18B,KAAKqB,KACnGq7B,GAEXpwB,EAAI3O,UAAUg/B,YAAc,SAAUC,EAAUx4B,GAC5Cw4B,EAAS1lB,UAAU/X,QAAQ,SAAUkC,GACjC+C,EAAMpE,KAAKqB,MAGnBiL,EAAI3O,UAAUk/B,mBAAqB,SAAUC,EAAUz7B,GACnDy7B,EAAS/4B,MACT,IAAI64B,EAAW7/B,KAAK0/B,aAAap7B,GACjCtE,KAAK4/B,YAAYC,EAAUE,IAE/BxwB,EAAIywB,SAAW,SAAUC,GACrB,IAAIC,EAAIxB,EAASyB,UAAUF,GAa3BC,EAAIA,EAAEl7B,KAZN,SAAaC,EAAG9E,GACZ,OAAI8E,EAAEgF,WAAa9J,EAAE8J,UACbhF,EAAEgF,UAAY9J,EAAE8J,WACR,EAERhF,EAAEgF,UAAY9J,EAAE8J,UACT,EAEJ,EAEJ,IAMX,IAHA,IAAI1G,EAAM,GACN68B,EAAO,GACPC,EAAMH,EAAE,GAAGj2B,UACN/I,EAAI,EAAGA,EAAIg/B,EAAE7+B,OAAQH,IACtBg/B,EAAEh/B,GAAG+I,YAAco2B,EACnBD,EAAKn9B,KAAKi9B,EAAEh/B,KAGZqC,EAAIN,KAAKm9B,GACTC,EAAMH,EAAEh/B,GAAG+I,WACXm2B,EAAO,IACFn9B,KAAKi9B,EAAEh/B,KAGpBqC,EAAIN,KAAKm9B,GACT,IAAI33B,EAAM,GAcV,OAbc,SAAV63B,EAAoBC,EAAK53B,EAAKrF,GAC9B,GAAIi9B,EAAMh9B,EAAIlC,OACV,IAAK,IAAIH,EAAI,EAAGA,EAAIqC,EAAIg9B,GAAKl/B,OAAQH,IAAK,CACtC,IAAI+D,EAAIy5B,EAASyB,UAAU78B,GAC3B2B,EAAEhC,KAAKM,EAAIg9B,GAAKr/B,IAChBo/B,EAAQC,EAAM,EAAGr/B,EAAG+D,QAIxBwD,EAAIxF,KAAKK,GAGjBg9B,CAAQ,EAAG,EAAG,IACP73B,GAEX8G,EAAIixB,QAAU,SAAUP,GAOpB,IANA,IAIIj9B,EACAxC,EALAa,EAAS4+B,EAAY5+B,OACrBmc,EAAS,CAACyiB,EAAYQ,SACtBC,EAAI,IAAIngC,MAAMc,GAAQyC,KAAK,GAC3B5C,EAAI,EAGDA,EAAIG,GACHq/B,EAAEx/B,GAAKA,GACP8B,EAAI9B,EAAI,GAAKw/B,EAAEx/B,GACfV,EAAIy/B,EAAY/+B,GAChB++B,EAAY/+B,GAAK++B,EAAYj9B,GAC7Bi9B,EAAYj9B,GAAKxC,EACjBkgC,EAAEx/B,KACFA,EAAI,EACJsc,EAAOva,KAAKg9B,EAAYQ,WAGxBC,EAAEx/B,GAAK,EACPA,KAGR,OAAOsc,GAEXjO,EAAI3O,UAAU+/B,cAAgB,SAAUpB,EAAQj7B,EAAOuE,EAAWL,EAASu3B,GACvE,IAA2Ba,IAGXjd,KAAKC,UAAUtf,QAFCN,IAArBu7B,EAAOt7B,IAAI28B,KAGlB/3B,EAAU5F,KAAK,CAAEiD,KAAMlG,KAAKmG,WAAWlC,IAAIuE,GAAUnB,MAAO04B,IAC5DR,EAAO38B,IAAI+gB,KAAKC,UAAU,CAAE1d,KAAMlG,KAAKmG,WAAWlC,IAAIuE,GAAUnB,MAAO04B,IAAa,CAAE75B,KAAMlG,KAAKmG,WAAWlC,IAAIuE,GAAUnB,MAAO04B,MAGzIxwB,EAAI3O,UAAU6+B,SAAW,SAAUoB,EAAQC,GACvC,IAAI/+B,EAAQ/B,KACRu/B,EAAS,IAAIr9B,IACb2G,EAAY,GACZk4B,EAAU,GACd/gC,KAAKuI,WAAWs4B,EAAQ7gC,KAAK2+B,OAAOv8B,QAAQ,WAAc,OAAO2+B,EAAQ99B,MAAK,KAC9E,IAAI+9B,OAAsDh9B,IAA3ChE,KAAKuI,WAAWs4B,EAAQ7gC,KAAK2+B,OAAO,GAC7CpvB,EAAIywB,SAAShgC,KAAKuI,WAAWs4B,EAAQ7gC,KAAK2+B,QAC1C,CAAE3+B,KAAKuI,WAAWs4B,EAAQ7gC,KAAK2+B,QA8BrC,OANAqC,EAAS5+B,QAAQ,SAAUkC,GACvB,IAAK,IAAIpD,EAAI,EAAGA,EAAI6/B,EAAQ1/B,OAAQH,IAChC6/B,EAAQ7/B,IAAK,GAzBT,SAAR+/B,EAAkBt1B,EAAMu1B,EAAK14B,EAASnB,GACtC05B,EAAQG,IAAO,EACfv1B,EAAKvJ,QAAQ,SAAUkC,EAAO6E,GAC1B,GAAI7E,EAAMkE,UAAYA,EAClB,GAAIlE,EAAM2F,YAAc5C,EAAMJ,OAAQ,CAClC,IAAIk6B,EAAgB95B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OAC5C5E,EAAMq/B,gBAAgB98B,EAAO68B,GAC7Bp/B,EAAM4+B,cAAcpB,EAAQ,CAAEr5B,KAAMnE,EAAMoE,WAAWlC,IAAIuE,GAAUnB,MAAO85B,GAAiBt4B,EAAWL,EAAS24B,GAC1GJ,EAAQ53B,IACT83B,EAAMt1B,EAAMxC,EAAOX,EAAS24B,QAG3B78B,EAAM2F,YAAc3C,EAAWG,MAChC05B,EAAgB95B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OAC5C5E,EAAMs/B,gBAAgB/8B,EAAO68B,GAC7Bp/B,EAAM4+B,cAAcpB,EAAQ,CAAEr5B,KAAMnE,EAAMoE,WAAWlC,IAAIuE,GAAUnB,MAAO85B,GAAiBt4B,EAAWL,EAAS24B,GAC1GJ,EAAQ53B,IACT83B,EAAMt1B,EAAMxC,EAAOX,EAAS24B,MAU5CF,CAAM38B,EAAO,EAAGu8B,EAAQC,KAErBj4B,GAEX0G,EAAI3O,UAAUy+B,YAAc,SAAUwB,EAAQ52B,EAAW5C,EAAOi6B,GAC5D,IAAIv/B,EAAQ/B,KACZ,QAAmBgE,IAAfhE,KAAK2+B,MAAT,CAIA,IADA,IAAIoC,EAAU,GACL7/B,EAAI,EAAGA,EAAIlB,KAAKmG,WAAWtD,KAAM3B,IACtC6/B,EAAQ99B,MAAK,GAEjB,IAiCIs+B,EAjCM,SAANC,EAAgB39B,EAAIwD,EAAO8J,EAAOkF,GAClCtU,EAAM09B,SAAS57B,EAAIwD,GAAOjF,QAAQ,SAAUkC,GACxC+R,EAASpT,KAAK,CACVuF,QAAS3E,EACTutB,IAAK9sB,EAAM+C,UAGnBgP,EAASpT,KAAK,CACVuF,QAAS3E,EACTutB,IAAK/pB,IAET05B,EAAQl9B,IAAM,EACd,IAAK,IAAI3C,EAAI,EAAGA,EAAIa,EAAM2H,OAAO7F,GAAI9B,EAAM48B,OAAOt9B,OAAQH,IACtD,IAAK6/B,EAAQh/B,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAGsH,SAC9C,OAAQzG,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAG+I,WACzC,KAAKkH,EACD,IAAI4uB,EAAW14B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OACvC5E,EAAMq/B,gBAAgBr/B,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAI6+B,GAC5DyB,EAAIz/B,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAGsH,QAASu3B,EAAUA,EAAS94B,OAAQoP,GAC7E,MAEJ,KAAK/O,EAAWG,IACRs4B,EAAW14B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OACvC5E,EAAMs/B,gBAAgBt/B,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAI6+B,GAC5DyB,EAAIz/B,EAAMwG,WAAW1E,EAAI9B,EAAM48B,OAAOz9B,GAAGsH,QAASu3B,EAAUA,EAAS94B,OAAQoP,GAM7F,OAAOA,EAGQmrB,CAAIX,EAAQx5B,EAAO4C,EAAW,IAC7CpB,EAAY,GAChB,IAAS3H,EAAI,EAAGA,EAAIqgC,EAAalgC,OAAQH,IAAK,CAC1C,IAAIgF,EAAOlG,KAAKmG,WAAWlC,IAAIjE,KAAK4D,MAAM29B,EAAargC,GAAGsH,SAAS3E,IACnEgF,EAAU5F,KAAK,CACXiD,KAAMA,EAAMmB,MAAOk6B,EAAargC,GAAGkwB,IACnC5tB,KAAMxD,KAAK4D,MAAMi9B,GACjBl4B,IAAK3I,KAAK4D,MAAMsC,EAAKsC,SACrBF,GAAIhB,EAAWG,IACfg6B,SAAUp6B,EACV4C,UAAWA,IAEfq3B,EAAKr+B,KAAK,CAAEqF,GAAIhB,EAAWG,IAAKjE,KAAMxD,KAAK4D,MAAMi9B,GAASv8B,MAAOtE,KAAK4D,MAAMsC,EAAKsC,WAErF,OAAOK,IAEX0G,EAAI3O,UAAUwgC,gBAAkB,SAAU98B,EAAOy7B,GAC7C,GAAIz7B,EAAMmK,UAAU,KAAOnH,EAAWG,IAAK,CACvC,GAA+B,IAA3BnD,EAAMmK,UAAUpN,OAChB,MAAM6C,MAAM,qDAGZ67B,EAAS/4B,WAIbhH,KAAK8/B,mBAAmBC,EAAUz7B,IAG1CiL,EAAI3O,UAAUygC,gBAAkB,SAAU/8B,EAAOy7B,GAC7C,GAAIz7B,EAAMmK,UAAU,KAAOnH,EAAWG,KAAkC,IAA3BnD,EAAMmK,UAAUpN,OACzD,MAAM6C,MAAM,qDAEX,GAAII,EAAMmK,UAAU,KAAOnH,EAAWG,IAAK,CAC5C,IAAIo4B,EAAW7/B,KAAK0/B,aAAap7B,GACjCtE,KAAK4/B,YAAYC,EAAUE,KAGnCxwB,EAAI3O,UAAU4+B,WAAa,SAAUkC,EAAkBb,EAAQ52B,EAAW5C,EAAOi6B,GAC7E,IAAIv/B,EAAQ/B,KACR6I,EAAY,GAEZH,EAAY,SAAU7E,GACtB,IAAI4E,EAMJ,OALA1G,EAAMyF,SAASpF,QAAQ,SAAUW,EAAGC,GAC5Ba,IAAOd,IACP0F,EAAMzF,KAGPyF,GAkCX,OAhCAzI,KAAKuI,WAAWs4B,EAAQa,GAAkBt/B,QAAQ,SAAUkC,GACxD,OAAQA,EAAM2F,WACV,KAAKA,EACD,IAAI81B,EAAW14B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OACvC5E,EAAMq/B,gBAAgB98B,EAAOy7B,GAC7Bl3B,EAAU5F,KAAK,CACXiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,IAAKwD,MAAO04B,EAC7Cv8B,KAAMzB,EAAM6B,MAAMi9B,GAClBl4B,IAAK5G,EAAM6B,MAAMU,EAAMkE,SACvBF,GAAII,EAAUg5B,GACdD,SAAUp6B,EACV4C,UAAWA,IAEfq3B,EAAKr+B,KAAK,CAAEqF,GAAII,EAAUg5B,GAAmBl+B,KAAMzB,EAAM6B,MAAMi9B,GAASv8B,MAAOvC,EAAM6B,MAAMU,EAAMkE,WACjG,MAEJ,KAAKlB,EAAWG,IACRs4B,EAAW14B,EAAMD,MAAM,IAAIq3B,EAAQ93B,OACvC5E,EAAMs/B,gBAAgB/8B,EAAOy7B,GAC7Bl3B,EAAU5F,KAAK,CACXiD,KAAMnE,EAAMoE,WAAWlC,IAAIK,EAAMT,IAAKwD,MAAO04B,EAC7Cv8B,KAAMzB,EAAM6B,MAAMi9B,GAClBl4B,IAAK5G,EAAM6B,MAAMU,EAAMkE,SACvBF,GAAII,EAAUg5B,GACdD,SAAUp6B,EACV4C,UAAW3C,EAAWG,MAE1B65B,EAAKr+B,KAAK,CAAEqF,GAAII,EAAUg5B,GAAmBl+B,KAAMzB,EAAM6B,MAAMi9B,GAASv8B,MAAOvC,EAAM6B,MAAMU,EAAMkE,cAKtGK,GAEX0G,EAAI3O,UAAUgJ,gBAAkB,WAC5B,IAAInB,GAAM,EAQV,OAPAzI,KAAK0J,OAAOtH,QAAQ,SAAUyH,GAAQ,OAAOA,EAAKzH,QAAQ,SAAU0H,GAChE,IAAIC,EAAUD,EAAM,GAChBE,EAAgBF,EAAMzG,OAAO,SAAUC,EAAK4C,GAAQ,OAAO5C,GAAQ4C,EAAK+D,YAAcF,EAAQE,YAAe,GAC7GH,EAAMzI,OAAS,GAAK2I,IACpBvB,GAAM,OAGPA,IAASzI,KAAKuH,eAEzBgI,EAAI3O,UAAUsH,cAAgB,SAAUW,GACpC,IAAIJ,GAAM,EACV,OAA+B,IAA3BzI,KAAK4+B,wBAA0D56B,IAA3BhE,KAAK4+B,mBACzC/1B,EAAUzG,QAAQ,SAAUkC,GACpBA,EAAM4B,KAAKN,UACX6C,GAAM,KAGPA,IAGPI,EAAUzG,QAAQ,SAAUkC,GACG,IAAvBA,EAAM+C,MAAMxE,SACZ4F,GAAM,KAGPA,IAGf8G,EAAI3O,UAAUuH,QAAU,SAAUU,GAC9B,IAAI9G,EAAQ/B,KACRkK,EAAW,GAaf,OAZArB,EAAUzG,QAAQ,SAAUkC,GACxB,IAAIQ,EAAIoK,EACJ1L,EAAO,CACPK,GAAIS,EAAMd,KAAKK,GACf+B,QAAStB,EAAMd,KAAKoC,QACpByB,MAAO/C,EAAMm9B,SAAWn9B,EAAMm9B,SAASv6B,kBAAelD,EACtDsK,KAA4B,QAArBxJ,EAAKR,EAAMd,YAAyB,IAAPsB,OAAgB,EAASA,EAAGwJ,KAChE5L,OAA8B,QAArBwM,EAAK5K,EAAMd,YAAyB,IAAP0L,OAAgB,EAASA,EAAGxM,QAElEyH,EAAOrJ,EAASA,EAAS,GAAIiB,EAAM6B,MAAMU,EAAM4B,KAAKsC,UAAW,CAAEnB,MAAO/C,EAAM+C,MAAMH,aAAc1D,KAAMA,EAAMmF,IAAKrE,EAAMqE,IAAKL,GAAIhE,EAAMgE,GAAIm5B,SAAUn9B,EAAMm9B,SAASv6B,aAAc+C,UAAW3F,EAAM2F,YACxMC,EAASjH,KAAKkH,KAEXD,GAEJqF,EA7ec,CA8evBjI,EAAW8C,UACb5I,EAAQ+N,IAAMA,GACa,WACvB,SAASoyB,EAAM/6B,QACM,IAAbA,IAAuBA,EAAWC,KACtC7G,KAAK4G,SAAWA,EAChB5G,KAAK8G,QAAU,GAEnB66B,EAAM/gC,UAAUghC,QAAU,SAAU76B,GAChC,GAAI/G,KAAK6C,SAAW7C,KAAK4G,SACrB,MAAM1C,MAAM,6DAEhBlE,KAAK8G,QAAQ7D,KAAK8D,IAEtB46B,EAAM/gC,UAAUihC,QAAU,WACtB,OAAO7hC,KAAK8G,QAAQ2F,SAExBk1B,EAAM/gC,UAAUiC,KAAO,WACnB,OAAO7C,KAAK8G,QAAQzF,QAExBsgC,EAAM/gC,UAAUsG,WAAa,WACzB,OAAOlH,KAAK8G,SAnBO,GAA3B,IAuBIg7B,EAAuB,WACvB,SAASA,IACL9hC,KAAK4K,MAAQ,IAAI1I,IACjBlC,KAAK4C,IAAM,GA0Df,OAxDAk/B,EAAMlhC,UAAUmhC,UAAY,SAAUh/B,GAClC,IAAIi/B,EAAKtD,EAASyB,UAAUp9B,GAE5B,OADAi/B,EAAKA,EAAGh9B,QAGZ88B,EAAMlhC,UAAUqhC,SAAW,SAAU39B,GACjC,IAAKtE,KAAK2C,IAAI2B,GACV,MAAMJ,MAEV,IAAIuH,EAAK,EACLu2B,EAAKhiC,KAAK+hC,UAAUz9B,GAMxB,OALAtE,KAAK4C,IAAIR,QAAQ,SAAUuH,EAAQR,GAC3Bwa,KAAKC,UAAUoe,KAAQre,KAAKC,UAAUja,KACtC8B,EAAKtC,KAGNsC,GAEXq2B,EAAMlhC,UAAU+B,IAAM,SAAU2B,GAC5B,IAAI09B,EAAKhiC,KAAK+hC,UAAUz9B,GACpBtB,EAAI2gB,KAAKC,UAAUoe,GACvB,OAAOhiC,KAAK4K,MAAMjI,IAAIK,IAE1B8+B,EAAMlhC,UAAUshC,UAAY,SAAU/T,GAClCnuB,KAAK4C,IAAIR,QAAQ,SAAUuH,EAAQR,GAC/BglB,EAASxkB,EAAQR,MAGzB24B,EAAMlhC,UAAU6F,IAAM,SAAUnC,GAC5B,IAAI09B,EAAKhiC,KAAK+hC,UAAUz9B,GACpBtB,EAAI2gB,KAAKC,UAAUoe,GAClBhiC,KAAK4K,MAAMjI,IAAIK,KAChBhD,KAAK4K,MAAMhI,IAAII,EAAGg/B,GAClBhiC,KAAK4C,IAAIK,KAAK++B,KAGtBF,EAAMlhC,UAAUiC,KAAO,WACnB,OAAO7C,KAAK4C,IAAIvB,QAEpBygC,EAAMlhC,UAAUuhC,OAAS,SAAUjhC,GAC/B,OAAOlB,KAAK4C,IAAI1B,IAEpB4gC,EAAMlhC,UAAUwhC,QAAU,SAAU99B,GAChC,IAAI09B,EAAKhiC,KAAK+hC,UAAUz9B,GACpBtB,EAAI2gB,KAAKC,UAAUoe,GACnBK,EAAO,EAMX,OALAriC,KAAK4C,IAAIR,QAAQ,SAAUW,EAAGoG,GACtBwa,KAAKC,UAAU7gB,KAAOC,IACtBq/B,EAAOl5B,KAGRk5B,GAEXP,EAAMlhC,UAAUsG,WAAa,WACzB,OAAOlH,KAAK4C,KAETk/B,EA7DgB,GA+D3BtgC,EAAQsgC,MAAQA,mCClmBhB,IAAI/hC,EAAaC,MAAQA,KAAKD,WAAe,WACzC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV1C,GAazCI,EAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,YAE5BkhC,EAAkBtiC,MAAQA,KAAKsiC,gBAAmB,WAClD,IAAK,IAAIrhC,EAAI,EAAGC,EAAI,EAAGqhC,EAAKnhC,UAAUC,OAAQH,EAAIqhC,EAAIrhC,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAI6+B,EAAI3/B,MAAMU,GAAI+B,EAAI,EAA3B,IAA8B9B,EAAI,EAAGA,EAAIqhC,EAAIrhC,IACzC,IAAK,IAAI+D,EAAI7D,UAAUF,GAAIgE,EAAI,EAAGs9B,EAAKv9B,EAAE5D,OAAQ6D,EAAIs9B,EAAIt9B,IAAKlC,IAC1Dk9B,EAAEl9B,GAAKiC,EAAEC,GACjB,OAAOg7B,GAEX1+B,EAAQC,YAAa,EACrB,IAAI4L,EAAQ3H,EAAQ,IAChB4B,EAAa5B,EAAQ,IACrB+4B,EAAU/4B,EAAQ,KAClBwH,EAA4B,SAAUvL,GAEtC,SAASuL,EAAWtL,EAAO4I,EAAgB1I,GACvC,IAAIC,EAAQJ,EAAOL,KAAKtB,KAAM4B,EAAO4I,EAAgB1I,IAAU9B,KA0L/D,OAzLA+B,EAAMiL,SAAW,WACb,IAAIlI,EAEA2D,EAAM1G,EAAMgG,MAAMhG,EAAMgE,aAAchE,EAAMyF,SAASvD,IAA+C,QAA1Ca,EAAK/C,EAAMD,MAAMC,EAAMgE,qBAAkC,IAAPjB,OAAgB,EAASA,EAAGR,OAAQvC,EAAMiE,YAD3I,GACkK,IAKjL,OAJAjE,EAAMgE,aAAe0C,EAAIT,QACzBjG,EAAMiE,YAAcyC,EAAIR,QACxBQ,EAAI7E,MAAMxB,QAAQ,SAAUkC,GAAS,OAAOA,EAAM+C,WAAQrD,IAC1DyE,EAAIR,QAAQ7F,QAAQ,SAAUkC,GAAS,OAAOA,EAAMV,MAAMxB,QAAQ,SAAUuH,GAAU,OAAOA,EAAOtC,WAAQrD,MACrGyE,GAEX1G,EAAMkL,QAAU,WACZ,IAAI6xB,EAAW,GACXp3B,EAAY,GAChB3F,EAAM4F,WAAa,GACnB5F,EAAM6F,sBAAwB,EAC9B,IAAK,IAAI1G,EAAI,EAAGA,EAAIa,EAAMD,MAAMT,OAAS,EAAGH,IAAK,CAC7C,IAAIqC,EAAMxB,EAAMgG,MAAMhG,EAAM6F,sBAAuB7F,EAAMyF,SAASvD,IAAIlC,EAAMD,MAAMC,EAAM6F,uBAAuBtD,OAAQvC,EAAM4F,WAAYm3B,EAAU,IACnJ/8B,EAAM6F,sBAAwBrE,EAAIyE,QAClCjG,EAAM4F,WAAapE,EAAI0E,QACvBP,EAAUzE,KAAK,CAAE+b,UAAWzb,EAAIyb,UAAW3V,SAAU9F,EAAI8F,SAAU4V,WAAY1b,EAAI0b,aAEvF,IAAIxW,EAAM1G,EAAMgG,MAAMhG,EAAM6F,sBAAuB7F,EAAMyF,SAASvD,IAAIlC,EAAMD,MAAMC,EAAM6F,uBAAuBtD,OAAQvC,EAAM4F,WAAYm3B,EAAU,IAOnJ,OANAp3B,EAAUzE,KAAK,CAAE+b,UAAWvW,EAAIuW,UAAW3V,SAAUZ,EAAIY,SAAU4V,WAAYxW,EAAIwW,aACnFxW,EAAI7E,MAAMxB,QAAQ,SAAUkC,GAAS,OAAOA,EAAM+C,WAAQrD,IAC1DyE,EAAIR,QAAQ7F,QAAQ,SAAUkC,GAAS,OAAOA,EAAMV,MAAMxB,QAAQ,SAAUuH,GAAU,OAAOA,EAAOtC,WAAQrD,MAC5Gd,QAAQC,IAAI,aACZD,QAAQC,IAAIuE,GACZxE,QAAQC,IAAI,aACLrC,EAASA,EAAS,GAAI2H,GAAM,CAAEf,UAAWA,KAEpD3F,EAAMoO,SAAW,WACb,IAAIsyB,EAAW1gC,EAAMF,gBAAgBwC,IAAI,SAAUtB,GAAK,OAAOA,EAAEc,KAC7D6+B,EAAYJ,EAAevgC,EAAMI,OACrCsgC,EAASrgC,QAAQ,SAAUW,GAAK,OAAO2/B,EAAUz/B,KAAK,CAClDO,KAAM,IACNC,GAAIV,EACJT,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAO4D,EAAWG,QAC3C8I,WAAY,OAEhB,IAAIoyB,EAAY,CAAE9+B,GAAI,IAAK+B,SAAS,GAChCg9B,EAAYN,EAAe,CAACK,GAAY5gC,EAAM6B,OAC9Ci/B,EAAc,IAAI31B,EAAW,CAAE/K,MAAOugC,EAAW9+B,MAAOg/B,GAAa,CAACD,GAAY,IACtFz/B,QAAQC,IAAI0/B,GACZ,IAGIC,EAAqB,SAAUj6B,EAAWP,GAC1C,IAAIhF,EAAM,GAMV,OALAuF,EAAUxE,IAAI,SAAUtB,GACpB,OANe,SAAUsF,EAAUC,GACvC,OAAOu6B,EAAYt6B,WAAWF,EAASnC,KAAKsC,QAASF,GAAIjE,IAAI,SAAUtB,GAAK,MAAQ,CAAEmD,KAAMnD,KAKjFqF,CAAiBrF,EAAGuF,KAC5BlG,QAAQ,SAAU2gC,GACjB,OAAOA,EAAG3gC,QAAQ,SAAU5B,GAAK,OAAO8C,EAAIL,KAAKzC,OAE9C8C,GAuBPL,EAAO,SAAUF,GACjBsE,EAAMpE,KAAKF,IAGf8/B,EAAY/8B,UACZ,IAAIuB,EAAQ,GACRuD,EAAQ,GACRhI,EAAM,IAAIyK,EAAMy0B,MAEhBkB,EAAWH,EAAY58B,YAC3BhD,EAAK+/B,GAmDL,IAlDA,IAAIl2B,EAAU,WACV,IAAIN,EAbuBnF,EAAMoF,QAc7BnJ,EAAM,GACV,YAAaU,IAATwI,GAAsBA,EAAKnL,OAAS,EAC7B,QAEPuB,EAAID,IAAI6J,GACD,YAEX5J,EAAI6D,IAAI+F,EAAKnI,IAAI,SAAUtB,GAAK,MAAQ,CACpCmD,KAAM,CACFrC,GAAId,EAAEmD,KAAKrC,GACX2E,QAASzF,EAAEmD,KAAKsC,QAChB5C,QAAS7C,EAAEmD,KAAKN,SAEpByB,WAAOrD,MAEX6+B,EAAYhyB,cAAczO,QAAQ,SAAUkC,GACxC,GAAIA,IAAUu+B,EAAYlE,MAAO,CAC7B,IAAIl7B,EAnDQ,SAAUoF,EAAWP,GACzC,IAAI26B,EAAW,SAAUp6B,GACrB,QAA0B7E,IAAtB6+B,EAAYlE,MACZ,OAAO91B,EAEX,IAAIvF,EAAM,GACN4/B,EAAU,IAAIzE,EAAQ93B,MAC1Bu8B,EAAQjgC,KAAKqE,EAAWG,KACxBoB,EAAUzG,QAAQ,SAAUiG,GACxB,IAAI9E,EAAMs/B,EAAYxD,YAAYh3B,EAASnC,KAAKsC,QAASlB,EAAWG,IAAKy7B,EAAS,SACtEl/B,IAART,GACAD,EAAIL,KAAKM,KAGjB,IAAI4/B,EAAU,GAEd,OADA7/B,EAAIlB,QAAQ,SAAU2gC,GAAM,OAAOA,EAAG3gC,QAAQ,SAAU5B,GAAK,OAAO2iC,EAAQlgC,KAAKzC,OAC1E2iC,GAEX,OAAOF,EAASH,EAAmBG,EAASp6B,GAAYP,IAiCvCM,CAAkB4D,EAAMlI,GAC7B8+B,EAAc,GAedC,EAdO5/B,EAAGY,IAAI,SAAUtB,GACxB,OAAIqgC,EAAYj3B,SAASpJ,EAAEmD,KAAKsC,SACrB,CAAEtC,KAAM,CAAErC,IAAK,IAAK2E,SAAU,IAAK5C,SAAS,GAASyB,WAAOrD,IAEvEo/B,EAAYngC,KAAKF,EAAEmD,KAAKsC,SAChB,CACJtC,KAAM,CACFrC,GAAId,EAAEmD,KAAKrC,GACX2E,QAASzF,EAAEmD,KAAKsC,QAChB5C,QAAS7C,EAAEmD,KAAKN,SAEpByB,WAAOrD,MAGAO,OAAO,SAAUxB,GAAK,OAAmE,OAArD,OAANA,QAAoB,IAANA,OAAe,EAASA,EAAEmD,KAAKsC,WAC1FlF,EAAIL,KAAKogC,GACL5/B,EAAGpC,OAAS,IAAMuB,EAAID,IAAIc,KAAQb,EAAID,IAAI0gC,IAC1CpgC,EAAKogC,MAIjBz4B,EAAM3H,KAAKK,GACXJ,QAAQC,IAAI,cACZkE,EAAMjF,QAAQ,SAAUW,GAAK,OAAOA,EAAEX,QAAQ,SAAUkhC,GAAM,OAAOpgC,QAAQC,IAAImgC,OACjFpgC,QAAQC,IAAI,QACZP,EAAIsE,aAAa9E,QAAQ,SAAUW,GAAK,OAAOA,EAAEX,QAAQ,SAAUkhC,GAAM,OAAOpgC,QAAQC,IAAImgC,OAC5FpgC,QAAQC,IAAI,aACZD,QAAQC,QAELkE,EAAMhG,OAAS,GAAG,CAErB,GAAgB,UADFyL,IAEV,MAER,IAAIy2B,EAAS,GACb34B,EAAMxI,QAAQ,SAAU2gC,EAAIv/B,GACxBq/B,EAAYhyB,cAAczO,QAAQ,SAAUoJ,EAAIoB,GACxCpB,IAAOq3B,EAAYlE,OAA2B,IAAlBoE,EAAGv3B,GAAInK,QACnCkiC,EAAOtgC,KAAK,CACRO,KAAMA,EACNC,GAAIb,EAAIw/B,QAAQW,EAAGv3B,IACnBlJ,YAAa,IAAI6C,IAAI,CAAC,CAAC,CAAEzB,MAAOkJ,YAKhD,IAAIhJ,EAAQhB,EAAIsE,aAAa7C,IAAI,SAAUtB,GAAK,MAAQ,CACpDc,GAAIjB,EAAIw/B,QAAQr/B,GAChB6C,QAASi9B,EAAY36B,cAAcnF,MAEnCZ,EAAQ,GACZohC,EAAOv+B,KAAK,SAAUC,EAAG9E,GAAK,OAAO8E,EAAEzB,KAAOrD,EAAEqD,MAAQyB,EAAExB,GAAKtD,EAAEsD,KAEjE,IADA,IACSvC,EAAI,EAAGA,EAAIqiC,EAAOliC,OAAQH,IAAK,CAUpC,IATA,IAAIoC,EAAM,GAEN4B,EAAIhE,EACJsiC,EAAU,WACV,IAAIjgC,EAAM,GACVggC,EAAOr+B,GAAG5C,YAAYF,QAAQ,SAAUG,GAAK,OAAOA,EAAEH,QAAQ,SAAUW,GAAK,OAAOQ,EAAMR,EAAEW,UAC5FJ,EAAIL,KAAK,CAAES,MAAOH,IAClB2B,KAEGA,EAAIq+B,EAAOliC,QAAUkiC,EAAOriC,GAAGsC,OAAS+/B,EAAOr+B,GAAG1B,MAAQ+/B,EAAOriC,GAAGuC,KAAO8/B,EAAOr+B,GAAGzB,IACxF+/B,IAEJtiC,EAAIgE,EAAI,EACR/C,EAAMc,KAAK,CACPO,KAAM+/B,EAAOriC,GAAGsC,KAChBC,GAAI8/B,EAAOriC,GAAGuC,GACdnB,YAAa,IAAI6C,IAAI,CAAC7B,MAG9B,MAAO,CAAEM,MAAOA,EAAOzB,MAAOA,IAElCJ,EAAMuD,KAAOvD,EAAMiL,SACnBjL,EAAMyD,IAAMzD,EAAMkL,QACXlL,EAEX,OA9LAhC,EAAUmN,EAAYvL,GA8LfuL,EA/LqB,CAgM9BG,EAAMkC,KACR/N,EAAQ0L,WAAaA,mCCpOrB1L,EAAQC,YAAa","file":"static/js/main.95b52d3e.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Mealy = /** @class */ (function (_super) {\n    __extends(Mealy, _super);\n    function Mealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.mealyToMoore = function () {\n            var outs = new Map();\n            _this.edges.forEach(function (edge) {\n                edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    var out = transition.output;\n                    if (!outs.has(out)) {\n                        outs.set(out, outs.size);\n                    }\n                }); });\n            });\n            var outNumbs = [];\n            outs.forEach(function (v, k) { return outNumbs.push(k); });\n            console.log(outs);\n            console.log(outNumbs);\n            var diffEdges = _this.edges.reduce((function (acc, edge) {\n                var tmp = [];\n                edge.transitions.forEach(function (t) { return t.forEach(function (v) { return tmp.push({\n                    from: edge.from,\n                    to: edge.to,\n                    title: v.title,\n                    output: v.output ? v.output : ''\n                }); }); });\n                tmp.forEach(function (v) { return acc.push(v); });\n                return acc;\n            }), new Array());\n            console.log('UUUU');\n            diffEdges.forEach(function (v) {\n                console.log(v);\n            });\n            console.log('UU->I');\n            var toOuts = new Map();\n            _this.nodes.forEach(function (v) {\n                return toOuts.set(v.id, new Array(outs.size).fill(-1));\n            });\n            var count = 1;\n            diffEdges.forEach(function (edge) {\n                if (toOuts.get(edge.to) === undefined) {\n                    throw new Error(\"Mealy to Moore\");\n                }\n                else {\n                    if (toOuts.get(edge.to)[outs.get(edge.output)] === -1) {\n                        toOuts.get(edge.to)[outs.get(edge.output)] = count;\n                        count++;\n                    }\n                }\n            });\n            var nodesMoore = [];\n            toOuts.forEach(function (v, key) { return v\n                .map(function (v, k) { return ({ value: v, out: outNumbs[k] }); })\n                .filter(function (v) { return v.value !== -1; })\n                .forEach(function (v) {\n                nodesMoore.push(__assign(__assign({}, _this.nodes.find(function (node) { return node.id === key; })), { id: v.value, output: v.out }));\n            }); });\n            console.log('LLKLKLKLLLKLL');\n            nodesMoore.forEach(function (v) { return console.log(v); });\n            console.log('LLKLKLKLLLKLL');\n            toOuts.forEach(function (v, key) {\n                console.log(key + ' ~~~ ' + v);\n            });\n            var outEdges = diffEdges.reduce(function (acc, v) {\n                if (toOuts.get(v.from) === undefined) {\n                    throw new Error(\"Mealy to Moore\");\n                }\n                else {\n                    var mooreIds = toOuts.get(v.from).filter(function (id) { return id !== -1; });\n                    mooreIds.forEach(function (id) {\n                        var idLetter = outs.get(v.output);\n                        acc.push({\n                            from: id,\n                            to: toOuts.get(v.to)[idLetter],\n                            title: v.title\n                        });\n                    });\n                    return acc;\n                }\n            }, new Array());\n            console.log('________');\n            outEdges.forEach(function (v) { return console.log(v); });\n            console.log('________');\n            console.log('vsdfsdfsdf');\n            var startNodes = _this.startStatements.map(function (v) { return _this.nodes[v.id]; });\n            var startMoore = [];\n            startNodes.forEach(function (v) { var _a; return (_a = toOuts.get(v.id)) === null || _a === void 0 ? void 0 : _a.filter(function (v) { return v !== -1; }).forEach(function (v) { return startMoore.push(nodesMoore.find(function (node) { return node.id === v; })); }); });\n            startNodes.forEach(function (v) { return console.log(v); });\n            console.log('vsdfsdfsdf---||||--');\n            var edgesMoore = [];\n            outEdges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            console.log('vvvvvvvvvvvvvv');\n            outEdges.forEach(function (v) { return console.log(v); });\n            console.log('^^^^^^^^^^^^^^');\n            for (var i = 0; i < outEdges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                var j = i;\n                while (j < outEdges.length && outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n                    acc.push({ title: outEdges[j].title });\n                    j++;\n                }\n                i = j - 1;\n                edgesMoore.push({\n                    from: outEdges[i].from,\n                    to: outEdges[i].to,\n                    transitions: new Set([acc])\n                });\n                // for (let j = i; j < outEdges.length; j++) {\n                //     if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n                //         acc.push({ title: outEdges[j].title })\n                //         delta++\n                //     }\n                //     edgesMoore.push({\n                //         from: outEdges[i].from,\n                //         to: outEdges[i].to,\n                //         transitions: new Set<TransitionParams[]>([acc])\n                //     })\n                //     i += delta - 1\n                // }\n            }\n            console.log('{{{{{{{v}}}}}}}');\n            edgesMoore.forEach(function (v) {\n                console.log(v);\n            });\n            console.log('{{{{{{{v}}}}}}}');\n            // for (let i = 0; i < outEdges.length; i++) {\n            //     const acc: TransitionParams[] = []\n            //     let delta = 0\n            //     for (let j = i; j < outEdges.length; j++) {\n            //         if (outEdges[i].from === outEdges[j].from && outEdges[i].to === outEdges[j].to) {\n            //             acc.push(Array.from(outEdges[j].transitions)[0][0])\n            //             delta++\n            //         }\n            //     }\n            //     outEdges.push({\n            //         from: outEdges[i].from,\n            //         to: outEdges[i].to,\n            //         transitions: new Set<TransitionParams[]>([acc])\n            //     })\n            //     i += delta - 1\n            // }\n            // const nodesOuts = () => {\n            //     let counter = 0\n            //     return this.nodes.reduce((acc: (NodeCore | undefined)[][], node: NodeCore) => {\n            //         const edges = this.edges.filter((edge) => edge.to === node.id)\n            //         const tmp: (NodeCore | undefined)[] = []\n            //         outs.forEach(() => tmp.push(undefined))\n            //         edges.forEach((edge) => {\n            //             edge.transitions.forEach((_) => _.forEach((transition) => {\n            //                 const out = transition.output!\n            //                 const outIndex = outs.get(out)!\n            //                 if (!tmp[outIndex]) {\n            //                     tmp[outIndex] = {\n            //                         id: counter,\n            //                         isAdmit: node.isAdmit,\n            //                         output: out\n            //                     }\n            //                     counter++\n            //                 }\n            //             }))\n            //         })\n            //         if (tmp.filter((v) => v !== undefined).length === 0) {\n            //             tmp[0] = {\n            //                 id: counter,\n            //                 isAdmit: node.isAdmit,\n            //                 output: \"~\"\n            //             }\n            //             counter++\n            //         }\n            //         acc.push(tmp)\n            //         return acc\n            //     }, [])\n            // }\n            // const _nodesOuts: (NodeCore | undefined)[][] = nodesOuts()\n            // const _edges = _nodesOuts.reduce((acc: EdgeCore[], vs, index) => {\n            //     const edges = this.edges.filter((edge) => edge.from === this.nodes[index].id)\n            //     edges.forEach((edge) => edge.transitions.forEach((_) => _.forEach(transition => {\n            //         vs.forEach((v) => {\n            //             console.log(v)\n            //             if (v !== undefined && transition.output !== undefined) {\n            //                 const out = outs.get(transition.output)\n            //                 if (out) {\n            //                     const ndesOut = _nodesOuts[edge.to][out]\n            //                     if (ndesOut) {\n            //                         acc.push({\n            //                             from: v.id,\n            //                             to: ndesOut.id,\n            //                             transitions: new Set<TransitionParams[]>([[{ title: transition.title }]])\n            //                         })\n            //                     }\n            //                 }\n            //             }\n            //         })\n            //     })))\n            //     return acc\n            // }, [])\n            // const edges: EdgeCore[] = []\n            // _edges.sort((a, b) => a.from - b.from || a.to - b.to)\n            // for (let i = 0; i < _edges.length; i++) {\n            //     const acc: TransitionParams[] = []\n            //     let delta = 0\n            //     for (let j = i; j < _edges.length; j++) {\n            //         if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n            //             acc.push(Array.from(_edges[j].transitions)[0][0])\n            //             delta++\n            //         }\n            //     }\n            //     edges.push({\n            //         from: _edges[i].from,\n            //         to: _edges[i].to,\n            //         transitions: new Set<TransitionParams[]>([acc])\n            //     })\n            //     i += delta - 1\n            // }\n            // const starts = this.startStatements.map((stmt) => stmt.id)\n            // const nodes = _nodesOuts.reduce((acc: NodeCore[], vs, index) => {\n            //     vs.forEach((v) => {\n            //         if (v) {\n            //             acc.push(v)\n            //         }\n            //     })\n            //     return acc\n            // }, [])\n            // const start = starts.reduce((acc: NodeCore[], id) => {\n            //     const curNodeOuts = _nodesOuts[id].filter((v) => {\n            //         if (v !== undefined) {\n            //             return v\n            //         }\n            //     })\n            //     acc.push(curNodeOuts[0]!)\n            //     return acc\n            // }, [])\n            return {\n                graphcore: { edges: edgesMoore, nodes: nodesMoore },\n                start: startMoore\n            };\n        };\n        _this.step = _this.oaStep;\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Mealy;\n}(OutputAutomata_1.OutputAutomata));\nexports.Mealy = Mealy;\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.isDeterministic())\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//             { id: 4, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 2, to: 4, transitions: new Set([[{ title: 'a', output: '1' }, { title: 'b', output: '1' }]]) },\n//             // { from: 2, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 4, to:3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n//         ]\n//     }, [{ id: 1, isAdmit: false }], [])\n// console.log(nfa.mealyToMoore().graphcore.edges)\nvar nfa = new Mealy({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n        { id: 3, isAdmit: false },\n        { id: 4, isAdmit: false },\n    ],\n    edges: [\n        // { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n        // { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n        // {\n        //     from: 2, to: 4, transitions: new Set([[\n        //         { title: 'a', output: '1' },\n        //         { title: 'b', output: '1' },\n        //     ]])\n        // },\n        // { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n        // { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n        // { from: 4, to: 3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n        // { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n        { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n        { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n        { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n        { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n        { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], []);\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\nvar a = nfa.mealyToMoore();\nconsole.log(a);\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Moore = /** @class */ (function (_super) {\n    __extends(Moore, _super);\n    function Moore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.mooreToMealy = function () {\n            var mapNodes = new Map();\n            _this.nodes.forEach(function (node) { return mapNodes.set(node.id, { id: node.id, isAdmit: node.isAdmit, output: node.output }); });\n            var mealyEdges = _this.edges.map(function (edge) {\n                var tmpTransitions = new Set();\n                var tmpTransiton = [];\n                edge.transitions.forEach(function (v) { return v.forEach(function (transition) {\n                    var _a;\n                    tmpTransiton.push({ title: transition.title, output: (_a = mapNodes.get(edge.to)) === null || _a === void 0 ? void 0 : _a.output });\n                }); });\n                tmpTransitions.add(tmpTransiton);\n                return { from: edge.from, to: edge.to, transitions: tmpTransitions };\n            });\n            console.log('>>>>', _this.startStatements);\n            return {\n                graphcore: { edges: mealyEdges, nodes: _this.nodes.map(function (node) { return ({ id: node.id, isAdmit: node.isAdmit }); }) },\n                start: _this.startStatements.map(function (statement) { return ({ id: statement.id, isAdmit: statement.isAdmit }); })\n            };\n        };\n        _this.step = _this.oaStep;\n        // (): Step => {\n        //     if (!super.isDeterministic()) {\n        //         throw new NonDeterministic()\n        //     }\n        //     return this.oaRun()\n        // }\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Moore;\n}(OutputAutomata_1.OutputAutomata));\nexports.Moore = Moore;\n// let nfa = new Moore(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: 'b' },\n//             { id: 1, isAdmit: false, output: 'b' },\n//             // { id: 2, isAdmit: false, output: 'a' },\n//             // { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             // { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             { from: 0, to: 0, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n//             // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"0\"])\n// // console.log(nfa.run())\n// // console.log(nfa.mooreToMealy().start)\n// // edges.forEach(v => console.log(v.from, v.to, v.transitions))\n// console.log(nfa.run())\n// // const conv = nfa.moorToMealy()\n// // conv.graphcore.edges.forEach(edge => {\n// //     console.log(edge.from)\n// //     console.log(edge.to)\n// //     console.log(edge.transitions)\n// // })\n// // conv.graphcore.nodes.forEach(node => {\n// //     console.log(node)\n// // })\n","\"use strict\";\nexports.__esModule = true;\nvar Stack = /** @class */ (function () {\n    function Stack(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Stack.prototype.push = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Stack.prototype.pop = function () {\n        return this.storage.pop();\n    };\n    Stack.prototype.peek = function () {\n        return this.storage[this.size() - 1];\n    };\n    Stack.prototype.size = function () {\n        return this.storage.length;\n    };\n    Stack.prototype.getStorage = function () {\n        var list = [];\n        this.storage.forEach(function (value) { return list.push(value); });\n        return list;\n    };\n    Stack.prototype.cpyTo = function (stack) {\n        this.storage.forEach(function (value) { return stack.push(value); });\n        return stack;\n    };\n    return Stack;\n}());\nexports.Stack = Stack;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar OutputAutomata = /** @class */ (function (_super) {\n    __extends(OutputAutomata, _super);\n    function OutputAutomata(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.haveEpsilon = function () { return _this.alphabet.get(Computer_1.EPS) !== undefined; };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.oaRun = function () {\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var output;\n            for (var i = 0; i < _this.input.length; i++) {\n                var ref = {\n                    counterSteps: _this.counterStepsForResult,\n                    curPosition: _this.curPosition,\n                    historiStep: _this.historiRun\n                };\n                var after = _this._step(ref, histTrace);\n                _this.counterStepsForResult = ref.counterSteps;\n                console.log(_this.counterStepsForResult);\n                _this.curPosition = ref.curPosition;\n                _this.historiRun = ref.historiStep;\n                output = after.output;\n            }\n            return {\n                counter: _this.counterStepsForResult,\n                history: _this.historiRun,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                nodes: _this.toNodes(_this.curPosition),\n                output: output,\n                histTrace: histTrace\n            };\n        };\n        _this.nextStepPosition = function (position, by) {\n            return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) {\n                var getLetter = function (id) {\n                    var ret;\n                    _this.alphabet.forEach(function (v, k) {\n                        if (id === v) {\n                            ret = k;\n                        }\n                    });\n                    return ret;\n                };\n                var ret = {\n                    stmt: v,\n                    by: getLetter(by),\n                    cur: _this.nodes[v.idLogic],\n                    from: _this.nodes[position.stmt.idLogic]\n                };\n                // return ({ position: { stmt: v }, output: v.output })\n                return ({ position: ret, output: v.output });\n            });\n        };\n        _this.nextStepPositions = function (positions, by) {\n            var nextPOs = positions.map(function (v) { return _this.nextStepPosition(v, by); });\n            var nextPs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) { return acc.push(po.position); });\n                return acc;\n            }, []);\n            var nextOs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) {\n                    if (po.output === undefined) {\n                        throw new Error(\"Output undefinded\");\n                    }\n                    acc.push(po.output);\n                });\n                return acc;\n            }, []);\n            nextPs.forEach(function (v, index) { return v.output = nextOs[index]; });\n            return { positions: nextPs, outputs: nextOs };\n        };\n        _this._step = function (ref, histTrace) {\n            var _a;\n            var byLetter = [];\n            var trNum = _this.alphabet.get((_a = _this.input[ref.counterSteps]) === null || _a === void 0 ? void 0 : _a.value);\n            var nextPositions = _this.nextStepPositions(ref.curPosition, trNum);\n            ref.curPosition = nextPositions.positions;\n            var nodesOfCurPos = _this.toNodes(ref.curPosition);\n            nodesOfCurPos.forEach(function (node) { return byLetter.push(node); });\n            ref.historiStep.push({ nodes: nodesOfCurPos, by: trNum });\n            if (ref.curPosition.length > 0) {\n                ref.counterSteps++;\n            }\n            console.log('--->byLetter');\n            console.log(byLetter);\n            console.log('--->byLetter');\n            histTrace.push({ byLetter: byLetter });\n            return {\n                counter: ref.counterSteps,\n                history: ref.historiStep,\n                isAdmit: _this.haveAdmitting(ref.curPosition),\n                nodes: nodesOfCurPos,\n                output: nextPositions.outputs,\n                byLetter: byLetter,\n                histTrace: histTrace\n            };\n        };\n        _this.oaStep = function () {\n            var ref = {\n                counterSteps: _this.counterSteps,\n                curPosition: _this.curPosition,\n                historiStep: _this.historiStep\n            };\n            var after = _this._step(ref, []);\n            _this.counterSteps = ref.counterSteps;\n            _this.curPosition = ref.curPosition;\n            _this.historiStep = ref.historiStep;\n            return {\n                counter: after.counter,\n                history: after.history,\n                isAdmit: after.isAdmit,\n                nodes: after.nodes,\n                output: after.output,\n                byLetter: after.byLetter\n            };\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.curPosition = [];\n        startStatements.forEach(function (value) {\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id)\n            });\n        });\n        _this.setInput(input);\n        _this.counterSteps = 0;\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(_this.curPosition);\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        return _this;\n    }\n    OutputAutomata.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    OutputAutomata.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { from: value.from, cur: value.cur, by: value.by, output: value.output, stack: value.stack === undefined ? undefined : value.stack.getStorage() });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    OutputAutomata.prototype.haveAdmitting = function (positions) {\n        return positions.reduce(function (acc, p) { return acc && p.stmt.isAdmit; }, true);\n    };\n    return OutputAutomata;\n}(Computer_1.Computer));\nexports.OutputAutomata = OutputAutomata;\n// let nfa = new Moor(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: '0' },\n//             { id: 1, isAdmit: false, output: '1' },\n//             { id: 2, isAdmit: false, output: '2' },\n//             { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 2, to: 3, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: '5' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"5\"])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DFA = /** @class */ (function (_super) {\n    __extends(DFA, _super);\n    function DFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.minimizeDfa = function () {\n            _this.restart();\n            var startId = _this.curPosition[0].stmt.idLogic;\n            var cutBy = function (by) {\n                var acc = [];\n                _this.matrix.forEach(function (_, it) { return acc.push(_this.cellMatrix(it, by)[0]); });\n                return acc;\n            };\n            var _lookUp = function (group) { return function (id) {\n                return group[id];\n            }; };\n            var _getJump = function (table) { return function (by) { return function (id) {\n                return table[by][id];\n            }; }; };\n            var createTableT = function (zero) {\n                var lookUp = _lookUp(zero);\n                var table = [];\n                _this.alphabet.forEach(function (tr) {\n                    var acc = [];\n                    var cutted = cutBy(tr);\n                    cutted.forEach(function (cell) {\n                        acc.push(lookUp(cell.idLogic));\n                    });\n                    table.push(acc);\n                });\n                return table;\n            };\n            var _updateGroups = function (zero) { return function (groups) { return function (getJump) { return function (group) {\n                var jmpGrp = getJump(group[0].node.idLogic).number;\n                var newGrp = [];\n                var newNumber = groups.length + 1;\n                var toRm = [];\n                group.forEach(function (value, index) {\n                    if (getJump(value.node.idLogic).number !== jmpGrp) {\n                        value.number = newNumber;\n                        toRm.push(value.node.idLogic);\n                        newGrp.push(value);\n                    }\n                });\n                for (var i = 0; i < group.length; i++) {\n                    if (toRm.includes(group[i].node.idLogic)) {\n                        group.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (newGrp.length > 0) {\n                    groups.push(newGrp);\n                    return { fst: group, snd: newGrp };\n                }\n                return { fst: [], snd: [] };\n            }; }; }; };\n            var stack = [];\n            var pop = function () { return stack.shift(); };\n            var push = function (v) { return stack.push(v); };\n            var zero = [];\n            var first = [];\n            var second = [];\n            _this.statements.forEach(function (statement) {\n                var element = { number: -1, node: { idLogic: -1, id: -1, isAdmit: false } };\n                if (statement.isAdmit) {\n                    element = { number: 1, node: statement };\n                    first.push(element);\n                }\n                else {\n                    element = { number: 2, node: statement };\n                    second.push(element);\n                }\n                zero.push(element);\n            });\n            var byEveryLetter = _this.matrix.reduce(function (acc, line) {\n                return acc && line.reduce(function (accLine, cells) { return accLine && cells.length > 0; }, acc);\n            }, true);\n            if (first.length < 1 || !byEveryLetter) {\n                // console.log('CATHTHT')\n                throw new Exceptions_1.NonMinimizable();\n            }\n            // плюс если есть пробелы в таблице!\n            var groups = [];\n            groups.push(first);\n            groups.push(second);\n            var table = createTableT(zero);\n            _this.alphabet.forEach(function (tr) {\n                groups.forEach(function (stmt) { return push(stmt); });\n                var getJump = _getJump(table)(tr);\n                var updateGroups = _updateGroups(zero)(groups)(getJump);\n                while (stack.length > 0) {\n                    var head = pop();\n                    if (head === undefined) {\n                        break;\n                    }\n                    var newGrp = updateGroups(head);\n                    if (newGrp.fst.length > 0) {\n                        push(newGrp.fst);\n                        push(newGrp.snd);\n                    }\n                }\n            });\n            var toPositions = function (group) { return group.map(function (g) { return ({ stmt: g.node }); }); };\n            var grpAfterJmp = function (group, by) { return _getJump(table)(by)(group[0].node.idLogic).number; };\n            var nodes = groups.map(function (group) { return ({ id: group[0].number, isAdmit: _this.haveAdmitting(toPositions(group)) }); });\n            var edges = groups.reduce(function (acc, g) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    acc.push({\n                        from: g[0].number,\n                        to: grpAfterJmp(g, tr),\n                        transitions: new Set([[{ title: letter }]])\n                    });\n                });\n                return acc;\n            }, []);\n            edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            var newEdges = [];\n            for (var i = 0; i < edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                var j = i;\n                var _loop_1 = function () {\n                    var tmp = '';\n                    edges[j].transitions.forEach(function (_) { return _.forEach(function (v) { return tmp = v.title; }); });\n                    acc.push({ title: tmp });\n                    j++;\n                };\n                while (j < edges.length && edges[i].from === edges[j].from && edges[i].to === edges[j].to) {\n                    _loop_1();\n                }\n                i = j - 1;\n                newEdges.push({\n                    from: edges[i].from,\n                    to: edges[i].to,\n                    transitions: new Set([acc])\n                });\n            }\n            var startGrp = groups.filter(function (g) {\n                var gIds = g.map(function (v) { return v.node.idLogic; });\n                return gIds.includes(startId);\n            });\n            var start = nodes[startGrp[0][0].number - 1];\n            return { graphcore: { nodes: nodes, edges: newEdges }, start: start };\n        };\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaRun();\n        };\n        _this.setInput(input);\n        return _this;\n    }\n    return DFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.DFA = DFA;\n// let nfa = new DFA (\n//         {\n//             nodes: [\n//                 {id: 1, isAdmit: false},\n//                 {id: 2, isAdmit: true},\n//             ],\n//             edges: [\n//                 {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//                 {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             ]\n//         }, [{id: 1, isAdmit: false}], [],\n//     )\n// nfa.\n// let nfa = new DFA (\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: true},\n//\n//\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: true},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//             // {id: 0, isAdmit: false},\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//\n//         ],\n//         edges: [\n//\n//             {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //youtube\n//             // {from: 1, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 4, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 2, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//\n//\n//             // {from: 0, to: 1, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 0, to: 3, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: '0'}, {title: '1'}] ])},\n//             // {from: 3, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 3, to: 4, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //refference\n//             // {from: 0, to: 1, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 0, to: 2, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 1, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 3, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 6, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//\n//         ]\n//     }, [{id: 1, isAdmit: false}], [],\n// )\n// console.log(nfa.minimizeDfa().start)\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar NFA = /** @class */ (function (_super) {\n    __extends(NFA, _super);\n    function NFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        if (_this.haveEpsilon()) {\n            throw new Error('Epsilon Transitions');\n        }\n        return _this;\n    }\n    return NFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.NFA = NFA;\n//\n// let nfa = new NFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 0, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: '1'}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}], [],\n// )\n// nfa.nfaToDfa()\n// nfa.nfaToDfa().nodes.forEach((v) => console.log(v.id))\n// nfa.nfaToDfa().edges.forEach((v) => console.log(v.from, v.to))\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\nvar PDA_1 = require(\"./PDA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar TMMemory = /** @class */ (function () {\n    function TMMemory() {\n        this.storage = ['_'];\n        this.pointer = 0;\n    }\n    TMMemory.prototype.getPointer = function () {\n        return this.pointer;\n    };\n    TMMemory.prototype.reset = function () {\n        this.storage = ['_'];\n        this.pointer = 0;\n    };\n    TMMemory.prototype.lookUp = function () {\n        return this.storage[this.pointer];\n    };\n    TMMemory.prototype.initialize = function (init) {\n        var _this = this;\n        init.forEach(function (value) { return _this.mvRight('_', value); });\n        this.pointer = 0;\n    };\n    TMMemory.prototype.mvRight = function (curr, upd) {\n        if (this.storage[this.pointer] === curr) {\n            this.storage[this.pointer] = upd;\n            this.pointer++;\n        }\n        if (this.pointer === this.storage.length) {\n            this.storage.push('_');\n        }\n    };\n    TMMemory.prototype.mvLeft = function (curr, upd) {\n        if (this.pointer === 0) {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer = 0;\n            }\n            var tmp_1 = ['_'];\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\n            this.storage = tmp_1;\n        }\n        else {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer--;\n            }\n        }\n    };\n    TMMemory.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return TMMemory;\n}());\nexports.TMMemory = TMMemory;\nvar TM = /** @class */ (function (_super) {\n    __extends(TM, _super);\n    function TM(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.mem = new TMMemory();\n        _this.__step = function (counter, tr, histori) {\n            var byLetter = [];\n            var from = _this.curPosition[0].stmt;\n            var mv;\n            var by = \"\";\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\n                if (value.stackDown === _this.mem.lookUp()) {\n                    if (value.move === IGraphTypes_1.Move.R) {\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    if (value.move === IGraphTypes_1.Move.L) {\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\n                        mv = value.move;\n                        by = value.stackDown;\n                    }\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\n                }\n            });\n            histori.push({\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                by: by\n            });\n            counter++;\n            byLetter.push({\n                id: _this.curPosition[0].stmt.id,\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                by: by,\n                from: from,\n                cur: _this.curPosition[0].stmt,\n                move: mv\n            });\n            return {\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                counter: counter,\n                history: histori,\n                memory: _this.mem.getStorage(),\n                pointer: _this.mem.getPointer(),\n                byLetter: byLetter\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.mem.reset();\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n        };\n        _this.mtTrun = function () {\n            throw Error(\"TM run\");\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            // this.restart()\n            _this.mem.reset();\n            _this.mem.initialize(input);\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n            console.log(_this.curPosition);\n        };\n        _this.mtStep = function () {\n            console.log(\"STPMT\");\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            if (ret.history[ret.history.length - 1].by === \"\") {\n                ret.nodes = [];\n            }\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\n        };\n        _this.step = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtStep();\n        };\n        _this.run = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtTrun();\n        };\n        _this.checkMemFormat(graph);\n        _this.mem.initialize(input);\n        _this.curPosition = [{\n                stmt: _this.statements.get(_this.startStatements[0].id)\n            }];\n        return _this;\n    }\n    TM.prototype.checkMemFormat = function (graph) {\n        var isMtMem = true;\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\n            value1.forEach(function (value2) {\n                var _a, _b;\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n                    isMtMem = false;\n                }\n            });\n        }); });\n        if (!isMtMem) {\n            throw Error(\"Not MT mem\");\n        }\n    };\n    TM.prototype.curMt = function () {\n        return this.curPosition[0];\n    };\n    TM.prototype.assignCurMt = function (newPos) {\n        this.curPosition[0] = newPos;\n    };\n    TM.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var isEquals = function (stPush0, stPush1) {\n                if (!stPush0 || !stPush1) {\n                    return false;\n                }\n                if (stPush0.length !== stPush1.length) {\n                    return false;\n                }\n                return stPush0.reduce(function (acc, v, index) { return acc && stPush0[index] === stPush1[index]; }, true);\n            };\n            var hasDublicates = cells.reduce(function (acc, stmt, index) {\n                return index !== 0 &&\n                    (acc || (stmt.stackDown === fstCell.stackDown && isEquals(stmt.stackPush, fstCell.stackPush)));\n            }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    return TM;\n}(PDA_1.PDA));\nexports.TM = TM;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DPDA = /** @class */ (function (_super) {\n    __extends(DPDA, _super);\n    function DPDA(graph, startStatement, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatement, input, byEmpty) || this;\n        // step = this.pdaStep\n        // run = this.pdaRun\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaRun();\n        };\n        _this.setInput(input);\n        return _this;\n        // if (!super.isDeterministic()) {\n        //     throw new Error(\"Is not determenistic\")\n        // }\n    }\n    return DPDA;\n}(PDA_1.PDA));\nexports.DPDA = DPDA;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Mealy_1 = require(\"./Mealy\");\nvar DMealy = /** @class */ (function (_super) {\n    __extends(DMealy, _super);\n    function DMealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMealy;\n}(Mealy_1.Mealy));\nexports.DMealy = DMealy;\nvar nfa = new DMealy({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Moore_1 = require(\"./Moore\");\nvar DMoore = /** @class */ (function (_super) {\n    __extends(DMoore, _super);\n    function DMoore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMoore;\n}(Moore_1.Moore));\nexports.DMoore = DMoore;\nvar nfa = new DMoore({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\nexports.EPS = 'Epsilon';\nexports.BOTTOM = \"Z0\";\nvar Computer = /** @class */ (function () {\n    function Computer(graph, startStatements) {\n        var _this = this;\n        this.input = [];\n        this.alphabet = new Map();\n        this.statements = new Map();\n        this.startStatements = [];\n        this.edges = [];\n        this.counterSteps = 0;\n        this.counterStepsForResult = 0;\n        this.historiStep = [];\n        this.historiRun = [];\n        this.matrix = [];\n        this.byEmptyStackAdmt = function (isAdmt) {\n            throw new Error(\"PDA attribute\");\n        };\n        this.nfaToDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.minimizeDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.mooreToMealy = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.mealyToMoore = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.getCurrNode = function () {\n            return _this.currentNode.id;\n        };\n        this.getStartStatements = function () {\n            return _this.startStatements;\n        };\n        graph.edges\n            .sort(function (a, b) { return a.from - b.from; })\n            .forEach(function (value) { return _this.edges.push({\n            transitions: value.transitions === undefined ? new Set([[{ title: \"\" }]]) : value.transitions,\n            from: value.from,\n            to: value.to,\n            localValue: []\n        }); });\n        var _loop_1 = function (i) {\n            this_1.edges[i].localValue = [];\n            this_1.edges[i].transitions.forEach(function (value) {\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.edges.length; i++) {\n            _loop_1(i);\n        }\n        this.getAlphabetFromEdges();\n        this.getStatementsFromNodes(graph.nodes);\n        this.startStatements = startStatements;\n        this.currentNode = startStatements[0];\n        this.nodes = graph.nodes;\n        this.createMatrix();\n    }\n    Computer.prototype.getInput = function () {\n        return this.input;\n    };\n    Computer.prototype.getAlphabet = function () {\n        return this.alphabet;\n    };\n    Computer.prototype.getAlphabetFromEdges = function () {\n        var _this = this;\n        var alphabetSet = new Set();\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\n            this.edges[i_1].localValue.forEach(function (value) {\n                if (value.title !== \"\") {\n                    alphabetSet.add(value.title);\n                }\n            });\n        }\n        var i = 0;\n        alphabetSet.forEach(function (value) {\n            if (value !== \"\") {\n                _this.alphabet.set(value, i);\n                i++;\n            }\n        });\n    };\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.statements.set(nodes[i].id, {\n                id: nodes[i].id,\n                isAdmit: nodes[i].isAdmit,\n                idLogic: i,\n                output: nodes[i].output\n            });\n        }\n    };\n    Computer.prototype.createMatrix = function () {\n        for (var i = 0; i < this.statements.size; i++) {\n            this.matrix[i] = [];\n            for (var j = 0; j < this.alphabet.size; j++) {\n                this.matrix[i][j] = [];\n                //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\n            }\n        }\n        for (var i = 0; i < this.edges.length; i++) {\n            var statementFrom = this.statements.get(this.edges[i].from);\n            var statementTo = this.statements.get(this.edges[i].to);\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\n                // if (letterId === undefined) {\n                //     throw new Error(\"A\")\n                // }\n                if (letterId === undefined) {\n                    continue;\n                }\n                console.log(letterId);\n                console.log(this.edges[i].localValue[j].title);\n                var stDwn = this.edges[i].localValue[j].stackDown;\n                var stPsh = this.edges[i].localValue[j].stackPush;\n                var mv = this.edges[i].localValue[j].move;\n                var output = this.edges[i].localValue[j].output === undefined ? statementTo.output : this.edges[i].localValue[j].output;\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\n                    stDwn = exports.EPS;\n                    stPsh = [exports.EPS];\n                }\n                // console.log(statementTo.move)\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv, output: output }));\n            }\n        }\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\n        this.statements.forEach(function (value) { return console.log(value); });\n        this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n    };\n    Computer.prototype.cellMatrix = function (i, j) {\n        return this.matrix[i][j];\n    };\n    return Computer;\n}());\nexports.Computer = Computer;\n","import React, {AllHTMLAttributes} from \"react\";\nimport \"./ControlWrapper.css\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\n    title: string,\n    visible: boolean\n}\n\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\n    static defaultProps = {\n        visible: true\n    }\n\n    render() {\n        const {visible, title, style, className, children, ...restProps} = this.props;\n\n        return (\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\n                   variant=\"outlined\"\n                   style={style}\n                   {...restProps}\n            >\n                <div className=\"control-wrapper--content\">\n                    <div>\n                        <Typography variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </div>\n\n                    <div className=\"control-wrapper--child\">\n                        {children}\n                    </div>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default ControlWrapper;","import React, { ChangeEvent } from \"react\";\nimport \"./NodeControl.css\";\nimport { node } from \"../../react-graph-vis-types\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\n\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\ninterface nodeControlProps {\n    node: node | null,\n    changeNodeLabel: (id: number, label: string) => void,\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\n    deleteNode: (id: number) => void,\n    reinitComputer: (() => void)\n}\n\ninterface nodeControlState {\n    prevNodeId: number | undefined,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean\n}\n\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\n    constructor(props: nodeControlProps) {\n        super(props);\n\n        this.state = {\n            prevNodeId: this.props.node?.id,\n            label: this.props.node?.label || \"\",\n            isAdmit: this.props.node?.isAdmit || false,\n            isInitial: this.props.node?.isInitial || false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\n        if (this.props.node?.id !== prevState.prevNodeId) {\n            this.setState({\n                label: this.props.node?.label || \"\",\n                    // + ((\" | \" + this.props.node?.output || \"\")) \n                    \n                isAdmit: this.props.node?.isAdmit || false,\n                isInitial: this.props.node?.isInitial || false,\n                prevNodeId: this.props.node?.id\n            });\n        }\n    }\n\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\n            this.setState({ label: event.target.value });\n        }\n    }\n\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\n            this.setState({ isAdmit: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null && !this.props.node.isAdmit) {\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\n            this.setState({ isInitial: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onDeleteClick = (): void => {\n        if (this.props.node !== null) {\n            this.props.deleteNode(this.props.node.id);\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\n                <FormControl>\n\n                    <div className=\"node-control__item\">\n                        <TextField\n                            label=\"Имя\"\n                            size=\"small\"\n                            value={this.state.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isInitial}\n                                    onChange={this.onIsInitialChanged}\n                                />\n                            }\n                            label={\"Начальное\"}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isAdmit}\n                                    onChange={this.onIsAdmitChanged}\n                                />\n                            }\n                            label=\"Допускающее\"\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <Button\n                            onClick={this.onDeleteClick}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </FormControl>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default NodeControl;","import {ComputerInfo, ComputerType, edge, graph, node} from \"./react-graph-vis-types\";\nimport {EPS} from \"./Logic/Computer\";\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\nimport { Elements } from \"./App\";\nimport { DataSet } from \"vis-network/standalone/esm/vis-network\";\nimport { Output } from \"./Logic/Types\";\n\n\nconst epsSubstStr = (epsText: string) => (value: string) => value === EPS ? epsText : value\n\nconst epsSubstStrs = (epsText: string) => (values: string[]) => {\n    return values.map(v =>  epsSubstStr(epsText)(v)).join(\":\")\n}\n\nconst mvStr = (value: Move) => value === 0 ? \"L\" : \"R\"\n\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType ): string => {\n    const maxLength = (): number => {\n        let max: number = 0;\n        if (transitions !== undefined) {\n            transitions.forEach(value => {\n                value.forEach(value1 => {\n                    if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\n                        const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\n                        const ttl: number = value1.title === EPS ? 0 : value1.title.length\n                        const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\n                        max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\n                    }\n                })\n            })\n        }\n        return max\n    }\n\n    let spc = \"\"\n    const pdng_k = 7\n\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\n        spc += \" \"\n    }\n\n    const epsSubst = epsSubstStr(\"ε\")\n    const epsSubsts = epsSubstStrs(\"ε\")\n\n    spc = frmt === 'tm' ? '       ' : spc\n\n    let str = \"\" + spc\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + mvStr(v.move) + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === 'pda' || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \"\\n\" + spc\n                    }\n                })\n            })\n        }\n    }\n    return str\n}\n\n\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType): string => {\n    const epsSubst = epsSubstStr(\"eps\")\n    const epsSubsts = epsSubstStrs(\"eps\")\n\n    let str = \"\"\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + '>' + mvStr(v.move) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"pda\" || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \";\\n\"\n                    }\n                })\n            })\n        }\n    }\n\n    return str\n}\n\nexport const decorateGraph = (elements: Elements, frmt: null | ComputerType) => {\n    elements.edges.forEach((edge) => {\n        elements.edges.update({\n            id: edge.id!,\n            label: transitionsToLabel(edge.transitions, frmt)\n        })\n    })\n\n    elements.nodes.forEach((node) => {\n        const lableTokens =\n            node.label\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split('|')\n        const output = lableTokens[1] !== undefined ? lableTokens[1] : undefined \n        node.output = output \n\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        elements.nodes.update({\n            id: node.id,\n            // label: node.label ,\n            // + (node.output !== undefined ? \" | \" + node.output : \"\"),\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            },\n            borderWidth: node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default,\n            borderWidthSelected: borderWidth.highlight\n        })\n    })\n\n}\n\nexport const graphToElements = (graph: graph): Elements => {\n    let acc: Elements = {nodes: new DataSet<node, \"id\">(), edges: new DataSet<edge, \"id\">()}\n\n    graph.nodes.forEach((node) => {\n        acc.nodes.add(node)\n    })\n    graph.edges.forEach((edge) => {\n        acc.edges.add(edge)\n    })\n\n    return acc\n}\n\nexport const elementsToGraph = (elements: Elements): graph => {\n    let acc: graph = {nodes: [], edges: []}\n\n    elements.nodes.forEach((node) => {\n        acc.nodes.push(node)\n    })\n    elements.edges.forEach((edge) => {\n        acc.edges.push(edge)\n    })\n\n    return acc\n}\n\nexport const getNodeNamePrefix = (graph: graph): string => {\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\n\n    graph.nodes.forEach(node => {\n        let i = 0;\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\n            i++;\n        }\n        prefix = prefix.substring(0, i);\n    });\n\n    return prefix;\n}\n\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\n    dfa: {\n        name: \"ДКА\",\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\n        preview: \"dfa.png\",\n        defaultGraph: {\n            nodes: [\n                // {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                \n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            \n                { id: 1, x: 0, y: 0, label: 'S1', isAdmit: false, isInitial: true, isCurrent: false },\n                { id: 2, x: 100, y: 0, label: 'S2',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 3, x: 100, y: 100, label: 'S3',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 4, x: 200, y: 0, label: 'S4',  isAdmit: false, isInitial: false, isCurrent: false },\n                { id: 5, x: 200, y: 100, label: 'S5',  isAdmit: true, isInitial: false, isCurrent: false },\n                { id: 6, x: 300, y: 0, label: 'S6',  isAdmit: true, isInitial: false, isCurrent: false },\n                { id: 7, x: 300, y: 100, label: 'S7',  isAdmit: false, isInitial: false, isCurrent: false },\n            ],\n            edges: [\n                // {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                { from: 1, to: 2, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 1, to: 3, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 2, to: 4, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 2, to: 5, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 3, to: 4, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 3, to: 6, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 4, to: 4, transitions: new Set([[{ title: 'a' }, { title: 'b' }]]) },\n\n                { from: 5, to: 5, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 5, to: 7, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 6, to: 6, transitions: new Set([[{ title: 'a' }]]) },\n                { from: 6, to: 7, transitions: new Set([[{ title: 'b' }]]) },\n\n                { from: 7, to: 7, transitions: new Set([[{ title: 'a' }, { title: 'b' }]]) },\n            \n            ]\n        }\n    },\n    nfa: {\n        name: \"НКА\",\n        description: \"Может находиться в нескольких состояниях одновременно\",\n        preview: \"nfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\n\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\n            ]\n        }\n    },\n    \"nfa-eps\": {\n        name: \"ε-НКА\",\n        description: \"Расширение НКА, в котором используются ε-переходы\",\n        preview: \"nfa-eps.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\n\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 7, transitions: new Set([[{title: '0'}]])},\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n            ]\n        }\n    },\n    pda: {\n        name: \"Автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([\n                        [\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\n                        ]])\n                },\n\n                {\n                    from: 1, to: 2, transitions: new Set([\n                        [\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\n                        ]])\n                },\n                {\n                    from: 2, to: 2, transitions: new Set([\n                        [\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\n                        ]])\n                },\n\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\n            ]\n        }\n    },\n    dpda: {\n        name: \"Детерминированный автомат с магазинной памятью\",\n        description: \"\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([[{title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},]])\n                },\n            ]\n        }\n    },\n    tm: {\n        name: \"Машина Тьюринга\",\n        description: \"Машина Тьюринга с одной лентой\",\n        preview: \"tm.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 0, y: 200, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n            ]\n        }\n    },\n    mealy: {\n        name: \"Автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"Автомат, с выходными символами на ребрах\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n        }\n    },\n    dmealy: {\n        name: \"Детерминированный автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n   }\n    },\n    moore: {\n        name: \"Автомат Мура\",\n        description: \"Автомат, с выходными символами в состояниях\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{ title: '1' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 3, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: '1' }]]) },\n            ]        \n        }\n    },\n    dmoore: {\n        name: \"Детерминированный автомат Мура\",\n        description: \"\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            ],\n            edges: [\n                { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n                { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            ]\n        }\n    },\n\n}\n\nexport const getCookie = (name: string) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n}","import React from \"react\";\nimport {ComputerTypeContext} from \"./App\";\n\nexport const withComputerType = (Component: typeof React.Component) => (\n    (props: any) => (\n        <ComputerTypeContext.Consumer>\n            { context => <Component computerType={context} {...props}/> }\n        </ComputerTypeContext.Consumer>\n    )\n)","import React from \"react\";\nimport { ComputerType, edge } from \"../../react-graph-vis-types\";\nimport { getTransitionsTitles, transitionsToLabel } from \"../../utils\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport Button from \"@mui/material/Button\";\nimport \"./EdgeControl.css\";\nimport Transition from \"./Transition/Transition\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport TextField from \"@mui/material/TextField\";\nimport { withComputerType } from \"../../hoc\";\nimport { EPS } from \"../../Logic/Computer\";\nimport { Move, TransitionParams } from \"../../Logic/IGraphTypes\";\nimport { TextareaAutosize } from \"@mui/material\";\n\n\ninterface EdgeControlProps {\n    edge: edge | null,\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\n    deleteEdge: (id: string) => void,\n    computerType: ComputerType | null\n    reinitComputer: (() => void)\n}\n\ninterface Rule {\n    id: number\n    value: string\n}\n\ninterface EdgeControlState {\n    prevEdgeId: string | undefined,\n    transitions: Set<TransitionParams[]>,\n    transitionsText: string,\n    displayedTransitionText: string,\n    activeTransition: TransitionParams[] | null,\n    editMode: boolean,\n    countRules?: number,\n    rules: Rule[],\n}\n\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\n    constructor(props: EdgeControlProps) {\n        super(props);\n\n        this.state = {\n            prevEdgeId: this.props.edge?.id,\n            transitions: this.props.edge?.transitions || new Set(),\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            activeTransition: null,\n            editMode: false,\n            countRules: 1,\n            rules: [\n                { id: 1, value: ' ' }\n            ]\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\n\n            this.setState({\n                transitions: this.props.edge?.transitions || new Set(),\n                prevEdgeId: this.props.edge?.id,\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n                activeTransition: null,\n                editMode: false\n            });\n\n        }\n    }\n\n    selectTransition = (transition: TransitionParams[] | null): void => {\n        if (this.state.activeTransition === transition) {\n            this.setState({ activeTransition: null });\n        } else {\n            this.setState({ activeTransition: transition });\n        }\n    }\n\n    changeTransitions = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        this.setState({ transitionsText: value });\n\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined\n        }[] = []\n        let acc: TransitionParams[] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth })\n                })\n\n        }\n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\"|\")\n                    let fst = tmp.shift()\n                    let snd = tmp.shift()\n                    accumulator.push({ fst: fst, snd: snd, trd: undefined, fth: undefined })\n                })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            output: value.snd\n                        }\n                    )\n                }\n            })\n        }\n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined })\n                })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            stackDown: value.snd === 'eps' ? EPS : value.snd,\n                            stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                            move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n                        }\n                    )\n                }\n            })\n        }\n\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\n        console.log(\"ALLLOO\")\n        /////\n        // await this.props.reinitComputer()\n        ///\n        this.setState({\n            transitionsText: value\n            , transitions: transitions\n        }, () => this.props.reinitComputer());\n    }\n\n    deleteEdge = async (): Promise<void> => {\n        if (this.props.edge !== null) {\n            this.props.deleteEdge(this.props.edge.id!);\n        }\n        await this.props.reinitComputer()\n\n    }\n\n    private addInstruction(value: string) {\n        let newRow = { id: this.state.rules.length, value: value };\n        this.setState({ rules: this.state.rules.concat(newRow) });\n    }\n\n    changeEditMode = () => {\n        this.setState({ editMode: !this.state.editMode });\n        this.updateTransitions();\n\n    }\n\n    updateTransitions = async () => {\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined\n            out: string | undefined\n        }[] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth, out: undefined })\n                })\n\n        }\n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\"|\")\n                    let fst = tmp.shift()\n                    let snd = tmp.shift()\n                    accumulator.push({ fst: fst, snd: undefined, trd: undefined, fth: undefined, out: snd })\n                })\n        }\n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined, out: undefined })\n                })\n        }\n\n\n        let acc: TransitionParams[] = []\n        accumulator.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                        move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined,\n                        output: value.out,\n\n                    }\n                )\n            }\n        })\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.setState({\n            transitionsText: getTransitionsTitles(transitions, this.props.computerType),\n            transitions: transitions\n        })\n        ///\n        await this.props.reinitComputer()\n        ///\n    }\n\n    deleteTransition = (): void => {\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\n            const transitions = this.state.transitions;\n            transitions.delete(this.state.activeTransition);\n\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\n            this.setState({ transitions: transitions, transitionsText: getTransitionsTitles(transitions, this.props.computerType) });\n        }\n    }\n\n    helperText = () => {\n        switch (this.props.computerType) {\n            case \"dfa\":\n            case \"nfa\":\n            case \"nfa-eps\":\n            case \"moore\":\n            case \"dmoore\":\n                return 'Список символов или \"eps\" через точку с запятой';\n            case \"dmealy\":\n            case \"mealy\":\n                return '\"f | n;\", \"eps\" для ε'\n            case \"dpda\":\n            case \"pda\":\n                return '\"a, a | a:Z0;\", \"eps\" для ε. На дне стека \"Z0\"'\n            case \"tm\":\n                return '\"a | a>R;\", eps для ε. \"R\" - вправо, \"L\" - влево'\n            default: \n                return '';\n        }\n    }\n\n\n    render() {\n        return (\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\n                <div className=\"edge-control__container\">\n                    <div className=\"edge-control__item edge-control__transitions\">\n                        {\n                            <TextField\n                                id=\"filled-multiline-static\"\n                                multiline\n                                rows={3}\n                                variant=\"standard\"\n                                label=\"Переходы\"\n                                size=\"small\"\n                                value={this.state.transitionsText}\n                                onChange={this.changeTransitions}\n                                helperText={this.helperText()}\n                                onBlur={this.updateTransitions}\n                            />\n                        }\n\n                        <div className=\"edge-control__edit-transitions\"\n                            onClick={this.changeEditMode}>\n                            <EditIcon />\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"edge-control__item\">\n                        <Button\n                            onClick={this.deleteEdge}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </div>\n            </ControlWrapper>\n        );\n    }\n}\n\nexport default withComputerType(EdgeControl);","import React, { ChangeEvent } from \"react\";\n\nimport { node } from \"../../react-graph-vis-types\";\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\n\nexport const History = (props: {\n    startNode: node, history: {\n        node: node;\n        note: string[] | undefined;\n    }[][], historyEndRef: any\n}) => {\n    return (\n        <div className=\"run-control__item run-control__history\">\n            <div className=\"run-control__history__header\">\n                <Typography variant=\"h6\">История</Typography>\n            </div>\n            {\n                props.history.length !== 0 ?\n                    <div className=\"run-control__history__scroll\">\n\n\n                        {\n                            props.startNode !== undefined\n                                ?\n                                <div className=\"run-control__history__row\" key={0}>\n                                    <span className=\"run-control__history__index\">{0}</span>\n                                    {\n                                        <Tooltip\n                                            title={<Typography className=\"display-linebreak\">{\"~\"}</Typography>}>\n                                            <div\n                                                className=\"run-control__history__node\"\n                                                style={{ border: `${props.startNode.isInitial ? \"#0041d0\" : props.startNode.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                            >\n                                                {props.startNode!.label}\n\n                                            </div>\n                                        </Tooltip>\n                                    }\n\n                                </div>\n                                : <div />\n                        }\n\n                        {\n                            props.history.map((nodes, index) => (\n                                <div className=\"run-control__history__row\" key={index}>\n                                    <span className=\"run-control__history__index\">{index + 1}</span>\n                                    {\n                                        nodes.map((node, index) => (\n                                            <Tooltip\n                                                title={<Typography className=\"display-linebreak\">{node.note !== undefined ? node.note.join('\\n') : ''}</Typography>}>\n                                                <div\n                                                    className=\"run-control__history__node\"\n                                                    style={{ border: `${node.node.isInitial ? \"#0041d0\" : node.node.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                                >\n                                                    {node.node.label}\n\n                                                </div>\n                                            </Tooltip>\n                                        ))\n                                    }\n\n                                </div>\n                            ))\n\n                        }\n                        <div>\n                            <div ref={props.historyEndRef} />\n                        </div>\n\n                    </div>\n                    :\n                    <div className=\"run-control__history__placeholder\">\n                        Используйте пошаговый запуск, чтобы наблюдать за историей\n\n                    </div>\n            }\n\n\n        </div>)\n}\n","import React, { ChangeEvent } from \"react\";\nimport { ComputerType, graph, histNode, node } from \"../../react-graph-vis-types\";\nimport { DFA } from \"../../Logic/DFA\";\nimport { isEqual } from \"lodash\";\nimport { withComputerType } from \"../../hoc\";\nimport { Computer, EPS } from \"../../Logic/Computer\";\nimport { NFA } from \"../../Logic/NFA\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport \"./RunControl.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { EpsilonNFA } from \"../../Logic/EpsilonNFA\";\nimport { PDA } from \"../../Logic/PDA\";\nimport { TM } from \"../../Logic/TM\";\nimport { Elements } from \"../../App\";\nimport { decorateGraph, elementsToGraph, graphToElements } from \"../../utils\";\nimport { HistUnit, Output, Step } from \"../../Logic/Types\";\nimport { GraphEval, GraphEvalMultiStart, Move, NodeCore } from \"../../Logic/IGraphTypes\";\nimport { Mealy } from \"../../Logic/Mealy\";\nimport { Moore } from \"../../Logic/Moore\";\nimport { start } from \"repl\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nimport { NonDeterministic, NonMinimizable } from \"../../Logic/Exceptions\";\nimport { DPDA } from \"../../Logic/DPDA\";\nimport { DMealy } from \"../../Logic/DMealy\";\nimport { DMoore } from \"../../Logic/DMoore\";\nimport { isAbsolute } from \"path\";\nimport { History } from \"./History\"\n\ninterface runControlProps {\n    computerType: ComputerType,\n    elements: Elements,\n    treeElems: Elements,\n    historyEndRef: React.RefObject<HTMLDivElement>,\n    byEmptyStack: boolean,\n    changerStack: () => void,\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\n    updMem: (mem: string[] | undefined, ptr: number | undefined) => void\n    network: any\n    createHistNode: (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => void\n    createHistEdge: (from: number, to: number, by: any) => void\n    getLastHistNodeId: () => number\n    resetHistTree: () => void\n    setInit: (f: () => void) => void\n    setNfaToDfa: (f: () => void) => void\n    setMinimizeDfa: (f: () => void) => void\n    setMooreToMealy: (f: () => void) => void\n    setMealyToMoore: (f: () => void) => void\n    setChangerByStack: (f: () => void) => void\n    setRun: (f: () => void) => void\n    setStep: (f: () => void) => void\n    setReset: (f: () => void) => void\n    setHistory: (jsx: () => JSX.Element) => void\n    updateElements: (elements: Elements) => void\n    setComputerType: (type: null | ComputerType) => void\n    setResettedStatus: (status: boolean) => void\n    setByEmptyStack: (byEmptyStack: boolean) => void\n    setIsNonDetermenistic: (v: boolean) => void\n    setIsNonMinimizable: (v: boolean) => void\n    treeContextInfo: () => string\n    treeVisible: () => boolean\n}\n\ninterface runControlState {\n    input: string,\n    result?: boolean,\n    computer: Computer | undefined,\n    editMode: boolean,\n    currentInputIndex: number,\n    history: { node: node, note: string[] | undefined }[][],\n    byEmptyStack: boolean,\n    wasRuned: boolean,\n    memory: string[] | undefined,\n    gElements: graph,\n    startNode: node | undefined,\n    lastHistUnits: nodeTree[],\n    startStatements: NodeCore[]\n}\n\ntype ButtonSource = { name: () => string, onClick: () => void }\n\nconst creatButtons = (buttons: ButtonSource[][]) => {\n    const buttonsComp = buttons.reduce((acc: any[], buttons) => {\n        acc.push(\n            <div className=\"run-control__item run-control__buttons\">\n                {\n                    buttons.map((button) =>\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={\n                                    () => { button.onClick() }\n                                }\n                            >\n                                {button.name()}\n                            </Button>\n                        </div>\n                    )\n\n                }\n            </div>\n        )\n\n        return acc\n    }, [])\n    return (\n        <div>\n            {buttonsComp}\n        </div>\n    )\n}\n\ntype nodeTree = {\n    id: number,\n    idd: number,\n    stack?: string[],\n    move?: Move,\n    by?: string,\n    from?: NodeCore,\n    stackDown?: string,\n    output?: Output,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean,\n    isCurrent: boolean\n}\n\nclass RunControl extends React.Component<runControlProps, runControlState> {\n\n    constructor(props: runControlProps) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            result: undefined,\n            computer: undefined,\n            editMode: true,\n            currentInputIndex: -1,\n            history: [],\n            byEmptyStack: false,\n            wasRuned: false,\n            memory: undefined,\n            gElements: elementsToGraph(this.props.elements),\n            startNode: undefined,\n            lastHistUnits: [],\n            startStatements: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.setInit(() => {\n            let haveEmpty = false\n            this.props.elements.edges.forEach(edge => {\n                if (edge.label === \"\") {\n                    haveEmpty = true\n                }\n            })\n            if (!haveEmpty) {\n                return this.initializeComputer()\n            }\n        })\n        this.props.setNfaToDfa(this.nfaToDfa)\n        this.props.setMinimizeDfa(this.minimizeDfa)\n        this.props.setMooreToMealy(this.mooreToMealy)\n        this.props.setMealyToMoore(this.mealyToMoore)\n        this.props.setChangerByStack(this.admitByStack)\n        this.props.setRun(this.run)\n        this.props.setStep(this.step)\n        this.props.setReset(this.reset)\n        this.props.setHistory(() =>\n            <History\n                startNode={this.state.startNode!}\n                history={this.state.history!}\n                historyEndRef={this.props.historyEndRef}\n            />)\n        this.initializeComputer()\n    }\n\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\n        if (this.computerShouldBeUpdated(elementsToGraph(prevProps.elements), elementsToGraph(this.props.elements))) {\n            this.initializeComputer();\n        }\n\n    }\n\n    computerShouldBeUpdated = (prev: graph, current: graph): boolean => {\n        const compareNodes = (): boolean => {\n            if (prev.nodes.length !== current.nodes.length) {\n                return true;\n            }\n\n            return prev.nodes.some((prev, index) => {\n                const curr = current.nodes[index];\n                return prev.id !== curr.id ||\n                    prev.isAdmit !== curr.isAdmit ||\n                    prev.isInitial !== curr.isInitial;\n            })\n        }\n\n        const compareEdges = (): boolean => {\n            if (prev.edges.length !== current.edges.length) {\n                return true;\n            }\n\n            return prev.edges.some((prev, index) => {\n                const curr = current.edges[index];\n                return prev.id !== curr.id ||\n                    prev.from !== curr.from ||\n                    prev.to !== curr.to ||\n                    !isEqual(curr.transitions, prev.transitions)\n            });\n        }\n        return compareEdges() || compareNodes()\n    }\n\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node[], input: string[]): Computer | undefined => {\n        switch (computerType) {\n            case \"dfa\":\n                try {\n                    return new DFA(graph, initialNode, input);\n                } catch (e) {\n                    return undefined;\n                }\n            case \"nfa\":\n                return new NFA(graph, initialNode, input);\n            case \"nfa-eps\":\n                return new EpsilonNFA(graph, initialNode, input);\n            case \"pda\":\n                return new PDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"dpda\":\n                return new DPDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"tm\":\n                return new TM(graph, initialNode, input);\n            case \"mealy\":\n                return new Mealy(graph, initialNode, input);\n            case \"dmealy\":\n                return new DMealy(graph, initialNode, input);\n            case \"moore\":\n                return new Moore(graph, initialNode, input);\n            case \"dmoore\":\n                return new DMoore(graph, initialNode, input);\n        }\n\n    }\n\n    initializeComputer = () => {\n        console.warn(\"Reinitializing computer\");\n\n        this.setState({ gElements: elementsToGraph(this.props.elements) }, () => {\n            this.props.resetHistTree()\n\n            const initialNode: node[] = elementsToGraph(this.props.elements).nodes.filter(node => node.isInitial);\n            const input = this.state.input.split(\"\");\n\n            if (initialNode === undefined) {\n                console.warn(\"There is no initial node. Computer will not be initialized\");\n                return;\n            }\n\n            this.setState({\n                computer: this.getComputer(this.props.computerType, this.state.gElements, initialNode, input),\n                result: undefined\n            }, async () => {\n\n                const tmp: nodeTree[] = []\n\n                const startStmts = this.state.computer !== undefined\n                    ? this.state.computer.getStartStatements()\n                    : []\n\n                startStmts.forEach((v, index) => {\n                    const paddingTreeId = index + 1\n\n                    tmp.push({\n                        stack: v.stack ? [...v.stack] : [],\n                        from: v.from!,\n                        by: v.by,\n                        stackDown: v.stackDown,\n                        label: `${v.id}`,\n                        isAdmit: v.isAdmit,\n                        isInitial: true,\n                        isCurrent: false,\n                        id: this.props.getLastHistNodeId() + paddingTreeId,\n                        idd: v.id\n                    })\n                })\n\n                if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        const label = gNode?.label + '\\n―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                        // + '\\n' + `${(this.props.getLastHistNodeId() + 1)}` + \n                        this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                } else {\n                    tmp.forEach((v) => {\n                        const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                        this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n                    })\n                }\n                await this.setState({ lastHistUnits: tmp })\n            });\n\n        })\n\n    }\n\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        const input = event.target.value;\n\n        this.reset();\n        this.state.computer?.setInput(input.split(\"\"));\n\n        this.setState({ input: input });\n    }\n\n\n\n    drawTreeLayot = (nodes: NodeCore[], pred: nodeTree[], tmp: nodeTree[]) => {\n        nodes.forEach((v, index) => {\n            const paddingTreeId = index + 1\n            const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.id)\n\n            tmp.push({\n                stack: v.stack ? [...v.stack] : [],\n                from: v.from!,\n                by: v.by,\n                stackDown: v.stackDown,\n                move: v.move,\n                output: v.output,\n                label: `${v.id}`,\n                isAdmit: v.isAdmit,\n                isInitial: gNode!.isInitial,\n                isCurrent: gNode!.isCurrent,\n                id: this.props.getLastHistNodeId() + paddingTreeId,\n                idd: v.id\n            })\n        })\n\n        if (this.props.computerType === 'pda' || this.props.computerType === 'dpda') {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                const label = gNode?.label + '\\n' + '―' + (v.stack!.reduce((acc, stack) => '\\n' + stack + acc, ''))\n                this.props.createHistNode(v.idd, label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        } else {\n            tmp.forEach((v) => {\n                const gNode = this.state.gElements.nodes.find((gEl) => gEl.id === v.idd)\n                this.props.createHistNode(v.idd, gNode!.label, v.isAdmit, v.isInitial, v.isCurrent)\n            })\n        }\n\n\n        const letter = (l: any) => l === EPS ? 'ε' : l\n\n        const stackDwn = (stDwn: any) => this.props.computerType === 'pda' || this.props.computerType === 'dpda'\n            ? ', ' + letter(stDwn)\n            : ''\n\n        const move = (mv: Move | undefined) => this.props.computerType === 'tm'\n            ? mv === Move.L ? ', L' : \", R\"\n            : ''\n\n        const output = (out: any) => this.props.computerType === 'mealy' || this.props.computerType === 'dmealy'\n            ? ', ' + out\n            : ''\n\n        const txt = (l: any, stDwn: any, mv: any, out: any) => letter(l) + stackDwn(stDwn) + move(mv) + output(out)\n\n        const bySymbRules = tmp.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const from = () => {\n                switch (this.props.computerType) {\n                    case 'tm':\n                    case 'moore':\n                    case 'dmoore':\n                    case 'mealy':\n                    case 'dmealy':\n                        return pred.filter((p) => v.from && p.idd === v.from?.id)[0].id;\n                    default:\n                        return pred.filter((p) => v.from && p.idd === v.from?.id && p.stack?.toString === v.from.stack?.toString)[0].id\n                }\n            }\n            acc.push({ from: from(), to: [v.id], by: txt(v.by, v.stackDown, v.move, v.output) })\n            return acc\n        }, [])\n\n        console.log('\\n\\n\\n')\n\n        bySymbRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        this.setState({ lastHistUnits: tmp })\n\n    }\n\n    treeEps = (byEpsPred: NodeCore[], byLetter: NodeCore[], byEpsAfter: NodeCore[]) => {\n        console.log('\\n')\n        console.log('EPS>>>', byEpsPred)\n        console.log('LTR>>>', byLetter)\n        console.log('EPS>>>', byEpsAfter)\n        console.log('\\n')\n\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byEpsPred, this.state.lastHistUnits, tmp)\n        const tmp1: nodeTree[] = []\n        this.drawTreeLayot(byLetter, tmp, tmp1)\n        const tmp2: nodeTree[] = []\n        this.drawTreeLayot(byEpsAfter, tmp1, tmp2)\n    }\n\n    tree = (byLetter: NodeCore[]) => {\n        const tmp: nodeTree[] = []\n        this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n    }\n\n    step = async () => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        this.props.setResettedStatus(true)\n\n\n        if (this.state.wasRuned) {\n            this.setState({ wasRuned: false });\n            this.reset();\n            await this.props.resetHistTree()\n        }\n\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\n\n        try {\n            const stepResult: Step = this.state.computer.step()\n\n            if (stepResult.nodes.length === 0) return;\n\n            this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\n            this.props.updMem(stepResult.memory, stepResult.pointer)\n\n            let result = undefined;\n            if (stepResult.counter === this.state.input.length) {\n                result = stepResult.isAdmit\n            } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\n                result = false;\n            }\n\n            const nodes = stepResult.nodes\n                .map(nodeCore => this.state.gElements.nodes.find(node => node.id === nodeCore.id))\n                .filter((node): node is node => node !== undefined);\n\n            const byEpsPred = stepResult.byEpsPred ? stepResult.byEpsPred : []\n\n            const byLetter = stepResult.byLetter ? stepResult.byLetter : []\n\n            const byEpsAfter = stepResult.byEpsAfter ? stepResult.byEpsAfter : []\n\n            if (this.props.computerType !== 'tm' && this.state.computer.haveEpsilon()) {\n                console.log('byEpsAfter>>>', byEpsAfter)\n                this.treeEps(byEpsPred, byLetter, byEpsAfter)\n            } else {\n                console.log('byLetter', byLetter)\n                const tmp: nodeTree[] = []\n                this.drawTreeLayot(byLetter, this.state.lastHistUnits, tmp)\n            }\n\n            const _nodes = nodes.map((e, i) => {\n                const stack = stepResult.nodes[i].stack\n                return {\n                    node: e,\n                    note: stack !== undefined\n                        ? stack.reverse()\n                        : stepResult.output !== undefined\n                            ? stepResult.output!\n                            : undefined\n                }\n            })\n\n            this.setState({\n                result: result,\n                currentInputIndex: this.state.currentInputIndex + 1,\n                history: [...this.state.history, _nodes],\n                memory: stepResult.memory,\n            }, () => {\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n            });\n\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n            else {\n                console.log(e)\n            }\n        }\n\n    }\n\n    reset = (): void => {\n        this.state.computer?.restart();\n        this.props.changeStateIsCurrent([], true);\n        this.setState({\n            result: undefined,\n            currentInputIndex: -1,\n            history: [],\n        },\n            () => {\n                this.initializeComputer()\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.props.historyEndRef}\n                    />)\n            }\n        );\n        this.state.computer?.setInput(this.state.input.split(\"\"))\n        this.props.setResettedStatus(false)\n        this.props.resetHistTree()\n    }\n\n    run = async (): Promise<void> => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        await this.reset();\n\n        try {\n            const result = this.state.computer.run();\n\n            const histTrace = result.histTrace ? result.histTrace : []\n\n            histTrace.forEach(async (histStep) => {\n                const byEpsPred = histStep.byEpsPred ? histStep.byEpsPred : []\n\n                const byLetter = histStep.byLetter ? histStep.byLetter : []\n\n                const byEpsAfter = histStep.byEpsAfter ? histStep.byEpsAfter : []\n\n                if (this.state.computer && this.state.computer.haveEpsilon()) {\n                    this.treeEps(byEpsPred, byLetter, byEpsAfter)\n                } else {\n                    this.tree(byLetter)\n                }\n            })\n\n            this.setState({ result: result.isAdmit, currentInputIndex: -1, history: [] });\n            this.setState({ wasRuned: true })\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    nfaToDfa = (): void => {\n        const nfaToDfa = this.state.computer!.nfaToDfa()\n        const nodes = nfaToDfa.nodes.map((v, it) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: v.id.toString(),\n            isInitial: it === 0,\n            isCurrent: false\n        }))\n        const edges = nfaToDfa.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"dfa\")\n        })\n    }\n\n    admitByStack = (): void => {\n        const curStbyEmp = this.state.byEmptyStack;\n        this.setState({ byEmptyStack: !curStbyEmp });\n        this.props.setByEmptyStack(!curStbyEmp)\n        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\n        this.reset();\n    }\n\n    minimizeDfa = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        try {\n            const miniDFA: GraphEval = this.state.computer!.minimizeDfa()\n            const nodes = miniDFA.graphcore.nodes.map((v) => ({\n                id: v.id,\n                isAdmit: v.isAdmit,\n                label: 'G' + v.id.toString(),\n                isInitial: v.id === miniDFA.start.id,\n                isCurrent: false\n            }))\n            const edges = miniDFA.graphcore.edges\n            const gElements = {\n                nodes: nodes,\n                edges: edges\n            }\n\n            this.setState({\n                gElements: gElements\n            }, () => {\n                this.props.updateElements(graphToElements(gElements))\n            })\n        } catch (e) {\n            if (e instanceof NonMinimizable) {\n                this.props.setIsNonMinimizable(true)\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    mooreToMealy = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const mealy: GraphEvalMultiStart = this.state.computer!.mooreToMealy()\n\n        const starts = mealy.start.map((v) => v.id)\n\n        const nodes = mealy.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString(),\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = mealy.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"mealy\")\n        })\n    }\n\n    mealyToMoore = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const miniDFA: GraphEvalMultiStart = this.state.computer!.mealyToMoore()\n\n        const starts = miniDFA.start.map(v => v.id)\n\n        const nodes = miniDFA.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString() + ' | ' + v.output,\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = miniDFA.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"moore\")\n        })\n    }\n\n    private defaultButtonsLine: ButtonSource[] = [\n        { name: () => 'Шаг', onClick: () => this.step() },\n        { name: () => 'Запуск', onClick: () => this.run() },\n        { name: () => 'Сбросить', onClick: () => this.reset() },\n    ]\n\n    private defaultButtons: ButtonSource[][] = [this.defaultButtonsLine]\n\n    private buttonsTree: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonNfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => 'ДКА', onClick: () => this.nfaToDfa() }],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n    ]\n\n\n    private buttonDfa: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: () => 'Минимизировать', onClick: () => this.minimizeDfa() }],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n    ]\n\n\n    private buttonMealy: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n        [{ name: () => 'Мур', onClick: () => this.mealyToMoore() }],\n    ]\n\n    private buttonMoore: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }],\n        [{ name: () => 'Мили', onClick: () => this.mooreToMealy() }],\n    ]\n\n    private buttonsByStackByState: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [\n            { name: () => this.props.byEmptyStack ? \"По стеку\" : \"По состоянию\", onClick: () => this.props.changerStack() },\n            { name: this.props.treeContextInfo, onClick: this.props.treeVisible }\n        ],\n    ]\n\n    private buttonsNoRun: ButtonSource[][] = [\n        [\n            { name: () => 'Шаг', onClick: () => this.step() },\n            { name: () => 'Сбросить', onClick: () => this.reset() }\n        ],\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private getButtons = () => {\n        switch (this.props.computerType) {\n            case \"dfa\":\n                return creatButtons(this.buttonDfa)\n            case \"nfa\": \n            case \"nfa-eps\":\n                return creatButtons(this.buttonNfa)\n            case \"tm\":\n                return creatButtons(this.buttonsNoRun)\n            case \"pda\":\n            case \"dpda\":\n                return creatButtons(this.buttonsByStackByState)\n            case \"mealy\":\n            case \"dmealy\": \n                return creatButtons(this.buttonMealy)\n            case \"moore\":\n            case \"dmoore\":\n                return creatButtons(this.buttonMoore)\n            default:\n                return creatButtons(this.buttonsTree)\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title={\"Запуск\"}>\n                <div>\n\n                    <div className=\"run-control__item run-control__input__row\">\n                        {\n                            this.state.editMode\n                                ?\n                                <TextField\n                                    label=\"Входная строка\"\n                                    size=\"small\"\n                                    value={this.state.input}\n                                    onChange={this.onInputChanged}\n                                    onBlur={() => {\n                                        this.state.input.length && this.setState({ editMode: false }, () => this.initializeComputer())\n                                    }}\n                                />\n                                :\n                                <div\n                                    className=\"run-control__input-value\"\n                                    onClick={() => {\n                                        this.setState({ editMode: true });\n                                    }}\n                                >\n                                    {\n                                        Array.from(this.state.input).map((char, index) => (\n                                            <span\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\n                                                key={index}\n                                            >\n                                                {char}\n                                            </span>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"run-control__result\">\n                            {\n                                this.state.result === undefined ? null :\n                                    this.state.result\n                                        ? <DoneIcon style={{ color: \"var(--commerce)\" }} />\n                                        : <CloseIcon style={{ color: \"var(--destructive)\" }} />\n                            }\n                        </div>\n\n                    </div>\n                    {this.getButtons()}\n\n\n                </div>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nconst itemName = \"saves\";\n\nexport default class BrowserSavesManager implements SavesManager {\n    getSavesMeta(): Promise<SaveMeta[]> {\n        let saves = BrowserSavesManager.getSaves();\n\n        return new Promise<SaveMeta[]>(function (resolve) {\n                resolve(saves);\n            }\n        )\n    }\n\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        let saves = BrowserSavesManager.getSaves();\n\n        let save = saves.find(save => save.id == saveMeta.id);\n\n        return new Promise(function (resolve) {\n            resolve(save || null);\n        });\n    }\n\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        const saves = BrowserSavesManager.getSaves();\n        const next_id = (Math.max(...saves.map(save => Number(save.id))) + 1).toString();\n        const save_index = saves.findIndex(save => save.name == name);\n        const save = {id: \"0\", name: name, save: {graph: graph, type: type}};\n\n        if (save_index == -1) {\n            save.id = next_id;\n            saves.push(save);\n        } else {\n            save.id = saves[save_index].id;\n            saves[save_index] = save;\n        }\n\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        localStorage.setItem(itemName, saves_json);\n\n        return new Promise(function (resolve) {\n            resolve();\n        });\n    }\n\n    private static getSaves(): Save[] {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        let saves: Save[] = [];\n\n        try {\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\n        } catch (error) {\n            console.warn(\"Invalid saves in local storage: \" + error);\n            return [];\n        }\n\n        return saves;\n    }\n}","import {getCookie} from \"../utils\";\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\";\n\nexport function getAuthHeaders(): Headers {\n    const headers = new Headers();\n\n    headers.set(\"Authorization\", `Bearer ${getCookie(\"jwt\")}`);\n\n    return headers;\n}\n\nexport function getParams(headers: Headers): RequestInit {\n    return {\n        method: \"GET\",\n        headers: headers,\n    };\n}\n\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\n    headers.set(\"Content-Type\", \"application/json\");\n\n    return {\n        method: \"POST\",\n        headers: headers,\n        body: body,\n    };\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport {SaveModel} from \"../Models/SaveModel\";\n\nexport default function ApiGetSaves(onAuthFailed: () => void): Promise<SaveModel[]> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type GetSaveRequest = {\n    id: string,\n};\n\nexport type GetSaveResponse = {\n    id: string,\n    name: string,\n    data: string,\n};\n\nexport default function ApiGetSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${request.id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\n\nexport type SaveRequest = {\n    name: string,\n    data: string,\n};\n\nexport default function ApiSave(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/save\";\n\n        const body = JSON.stringify(request);\n        const headers = getAuthHeaders();\n        const params = postParams(headers, body);\n\n        fetch(url, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nimport ApiGetSaves from \"../Api/apiGetSaves\";\nimport ApiGetSave, {GetSaveRequest} from \"../Api/apiGetSave\";\nimport ApiSave, {SaveRequest} from \"../Api/apiSave\";\nimport {SaveModel} from \"../Models/SaveModel\";\n\nexport default class CloudSavesManager implements SavesManager {\n    private readonly onAuthFailed;\n\n    constructor(onAuthFailed: () => void) {\n        this.onAuthFailed = onAuthFailed;\n    }\n\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        const request: GetSaveRequest = {\n            id: saveMeta.id\n        };\n\n        let save = null;\n\n        try {\n            const response = await ApiGetSave(request, this.onAuthFailed);\n\n            save = {\n                id: response.id,\n                name: response.name,\n                save: JSON.parse(response.data),\n            };\n        } catch (error) {\n            console.error(error);\n        }\n\n        return save;\n    }\n\n    async getSavesMeta(): Promise<SaveMeta[]> {\n        let saves: SaveModel[] = [];\n\n        try {\n            saves = await ApiGetSaves(this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n\n        return saves.map(x => {\n            const saveMeta: SaveMeta = {\n                id: x.id,\n                name: x.name\n            };\n            return saveMeta;\n        });\n    }\n\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        const serialized_save = JSON.stringify({\n            graph: graph,\n            type: type\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        const request: SaveRequest = {\n            name: name,\n            data: serialized_save\n        };\n\n        try {\n            await ApiSave(request, this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\nimport {computersInfo} from \"../../utils\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nimport \"./WelcomePopout.css\";\nimport {IconButton} from \"@mui/material\";\n\nexport interface WelcomePopoutProps {\n    open: boolean,\n    onClose: () => void,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n}\n\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\n    {\n        open,\n        onClose,\n        onAuthFailed,\n        changeComputerType\n    }) => {\n    const browserSavesManager = new BrowserSavesManager();\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onCreateTemplateClicked = (type: ComputerType) => {\n        changeComputerType(type, null);\n        onClose();\n    }\n\n    const onCreateEmptyClicked = (type: ComputerType) => {\n        changeComputerType(type, {nodes: [], edges: []});\n        onClose();\n    }\n\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await cloudSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await browserSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const updateCloudSavesMeta = async () => {\n        setLoadingCloudSavesMeta(true);\n\n        const savesMeta = await cloudSavesManager.getSavesMeta();\n        setCloudSavesMeta(savesMeta);\n\n        setLoadingCloudSavesMeta(false);\n    }\n\n    const updateBrowserSavesMeta = async () => {\n        const savesMeta = await browserSavesManager.getSavesMeta();\n        setBrowserSavesMeta(savesMeta);\n    }\n\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\n\n    useEffect(() => {\n        if (open) {\n            updateBrowserSavesMeta();\n            updateCloudSavesMeta();\n        }\n    }, [open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <p>Симулятор автоматов</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <Paper\n                    className=\"welcome-popout__body\"\n                    variant=\"outlined\"\n                >\n                    <List dense>\n                        {\n                            cloudSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в облаке\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            loadingCloudSavesMeta\n                                ?\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n                                </div>\n                                :\n                                cloudSavesMeta.length !== 0 ?\n                                    cloudSavesMeta.map(saveMeta => (\n                                        <ListItem\n                                            key={saveMeta.id}\n                                            secondaryAction={\n                                                <Button\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\n                                                >\n                                                    Открыть\n                                                </Button>\n                                            }\n                                        >\n                                            <ListItemText>\n                                                {saveMeta.name}\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))\n                                    : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в браузере\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                browserSavesMeta.map(saveMeta => (\n                                    <ListItem\n                                        key={saveMeta.id}\n                                        secondaryAction={\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\n                                            >\n                                                Открыть\n                                            </Button>\n                                        }\n                                    >\n                                        <ListItemText>\n                                            {saveMeta.name}\n                                        </ListItemText>\n                                    </ListItem>\n                                ))\n                                : null\n                        }\n\n                        <ListSubheader>\n                            Создать новый вычислитель\n                        </ListSubheader>\n                        {\n                            Object.entries(computersInfo).map(entry => (\n                                <ListItem\n                                    key={entry[1].name}\n                                    secondaryAction={\n                                        <div>\n                                            <Button\n                                                className=\"welcome-popout__create-empty-button\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать пустым\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать\n                                            </Button>\n                                        </div>\n                                    }\n                                >\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Paper>\n\n                <div className=\"welcome-popout__footer\">\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\n                    </IconButton>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default WelcomePopout;\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport \"./SavingPopout.css\";\n\nexport interface SavingPopoutProps {\n    open: boolean,\n    onClose: () => void,\n    isLogin: boolean,\n    onAuthFailed: () => void,\n\n    computerType: ComputerType,\n    graph: graph,\n}\n\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\n    {\n        open,\n        onClose,\n        isLogin,\n        onAuthFailed,\n        graph,\n        computerType\n    }) => {\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\n        value = value || savesOrigin;\n        setSavesOrigin(value);\n    }\n\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\n        setSaveName(saveMeta.name);\n    }\n\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSaveName(value);\n    }\n\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\n        switch (savesOrigin) {\n            case \"cloud\":\n                cloudSavesManager.save(saveName, graph, computerType);\n                break;\n            case \"browser\":\n                browserSavesManager.save(saveName, graph, computerType);\n                break;\n            default:\n                break;\n        }\n\n        updateNames();\n        onClose();\n    }\n\n    const updateNames = async () => {\n        setLoadingSavesMeta(true);\n\n        let savesMeta: SaveMeta[] = [];\n\n        switch (savesOrigin) {\n            case \"cloud\":\n                savesMeta = await cloudSavesManager.getSavesMeta();\n                break;\n            case \"browser\":\n                savesMeta = await browserSavesManager.getSavesMeta();\n                break;\n            default:\n                setSavesMeta([]);\n                break;\n        }\n\n        setSavesMeta(savesMeta);\n        setLoadingSavesMeta(false);\n    }\n\n    const updateDefaultOrigin = () => {\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\n    }\n\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\n    const [saveName, setSaveName] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (open) {\n            updateDefaultOrigin();\n            updateNames();\n        }\n    }, [open]);\n\n    useEffect(() => {\n        updateNames();\n    }, [savesOrigin]);\n\n    useEffect(() => {\n        setSaveName(\"\");\n    }, [savesOrigin, open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                <p>Сохранение</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <div className=\"saving-popout__body\">\n                    <div className=\"saving-popout__body__sidebar\">\n                        <ToggleButtonGroup\n                            orientation=\"vertical\"\n                            exclusive\n                            value={savesOrigin}\n                            onChange={onSavesOriginChanged}\n                        >\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n\n                    <div className=\"saving-popout__body__main\">\n                        <Paper\n                            className=\"saving-popout__body__main__paper\"\n                            variant=\"outlined\"\n                        >\n                            {\n                                loadingSavesMeta\n                                    ?\n                                    <div className=\"saving-popout__body__main__skeleton\">\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n                                    </div>\n                                    :\n                                    <List dense>\n                                        {\n                                            savesMeta.map(saveMeta => (\n                                                <ListItem\n                                                    key={saveMeta.id}\n                                                    disablePadding\n                                                >\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\n                                                        <ListItemText primary={saveMeta.name}/>\n                                                    </ListItemButton>\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                            }\n\n                        </Paper>\n                    </div>\n                </div>\n\n                <TextField\n                    className=\"saving-popout__save-name-input\"\n                    variant=\"standard\"\n                    size=\"small\"\n                    label=\"Имя сохранения\"\n                    value={saveName}\n                    onChange={onSaveNameChanged}\n                />\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onSaveClicked}\n                    >\n                        Сохранить\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        Отмена\n                    </Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default SavingPopout;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignInRequest = {\n    email: string,\n    password: string,\n};\n\nexport default function ApiSignIn(request: ApiSignInRequest): Promise<string> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signin\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"manual\",\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.text();\n                } else {\n                    reject();\n                }\n            })\n            .then(text => {\n                if (!text) {\n                    reject();\n                } else {\n                    resolve(text);\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./LoginPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignIn from \"../../../Api/apiSignIn\";\n\ninterface LoginPageProps {\n}\n\nconst LoginPage: FC<LoginPageProps> = ({}) => {\n    const authEndpoint = process.env.REACT_APP_BACKEND_BASE_URL + \"/auth\";\n\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onLoginClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n        };\n\n        await ApiSignIn(request)\n            .then(jwt => navigate(`/success-login?jwt=${jwt}`))\n            .catch(e => setError(`Не удалось войти в аккаунт (${e})`));\n    }\n\n    const onRegisterClicked = () => {\n        navigate('/register');\n    }\n\n    const onSignInWithExternalProviderClicked = (provider: string) => {\n        window.location.href = authEndpoint + `/external/signin?provider=${provider}`;\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Вход в аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}/>\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}/>\n\n                    <Button variant=\"contained\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Google\")}\n                    >\n                        Войти через аккаунт Google\n                    </Button>\n\n                    <Button variant=\"outlined\"\n                            onClick={() => onSignInWithExternalProviderClicked(\"Yandex\")}\n                    >\n                        Войти через аккаунт Яндекс\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default LoginPage;","import {BASE_URL} from \"./apiBase\";\n\nexport type ApiSignUpRequest = {\n    email: string,\n    password: string,\n    about: string,\n};\n\nexport default function ApiSignUp(request: ApiSignUpRequest): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/auth/signup\";\n\n        const body = JSON.stringify(request);\n\n        const headers = new Headers();\n        headers.set(\"Content-Type\", \"application/json\");\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (response.ok) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            })\n            .catch(error => reject(error));\n    });\n}","import React, {FC, useEffect, useState} from \"react\";\nimport \"./RegisterPage.css\";\nimport {Alert, Button, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport ApiSignUp from \"../../../Api/apiSignUp\";\n\ninterface RegisterPageProps {\n}\n\nconst RegisterPage: FC<RegisterPageProps> = ({}) => {\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [about, setAbout] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onEmailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEmail(value);\n    }\n\n    const onPasswordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setPassword(value);\n    }\n\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setAbout(value);\n    }\n\n    const onRegisterClicked = async () => {\n        const request = {\n            email: email,\n            password: password,\n            about: about,\n        };\n\n        await ApiSignUp(request)\n            .then(() => navigate(\"/registered\"))\n            .catch(() => setError(\"Не удалось зарегистрировать нового пользователя\"));\n    }\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [email, password, about]);\n\n    return (\n        <div className=\"login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Новый аккаунт</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n\n                    <TextField size=\"small\"\n                               label=\"Электропочта\"\n                               type=\"email\"\n                               value={email}\n                               onChange={onEmailChanged}\n                    />\n\n                    <TextField size=\"small\"\n                               label=\"Пароль\"\n                               type=\"password\"\n                               value={password}\n                               onChange={onPasswordChanged}\n                    />\n\n                    <TextField label=\"О себе\"\n                               type=\"text\"\n                               multiline\n                               rows={3}\n                               value={about}\n                               onChange={onAboutChanged}\n                    />\n\n                    <Button variant=\"contained\"\n                            onClick={onRegisterClicked}\n                    >\n                        Зарегистрироваться\n                    </Button>\n\n                    <Typography variant=\"overline\" align=\"center\">или</Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisterPage;","import React from \"react\";\n\nimport {useNavigate} from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport \"./AppHeader.css\";\n\nexport interface AppHeaderProps {\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\n    onLogoutButtonClicked: () => void,\n    isLogin: boolean,\n}\n\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\n    {\n        onMenuButtonClicked,\n        onSaveButtonClicked,\n        onLogoutButtonClicked,\n        isLogin,\n    }) => {\n    const navigate = useNavigate();\n\n    const onSignInButtonClicked = () => {\n        navigate(\"/login\");\n    }\n\n    const onSignOutButtonClicked = () => {\n        document.cookie = \"jwt=; path=/; secure; max-age=-99999999\";\n        onLogoutButtonClicked();\n    }\n\n    const onProfileButtonClicked = () => {\n        navigate(\"/me\");\n    }\n\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar variant=\"dense\">\n                <div className=\"app__header__left\">\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={onMenuButtonClicked}\n                    >\n                        Меню\n                    </Button>\n\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={onSaveButtonClicked}\n                    >\n                        Сохранить\n                    </Button>\n                </div>\n\n                <div className=\"app__header__right\">\n                    {\n                        isLogin &&\n                        <Button className=\"app__header__button\"\n                                color=\"inherit\"\n                                onClick={onProfileButtonClicked}\n                        >\n                            Профиль\n                        </Button>\n                    }\n\n                    <Button className=\"app__header__button\"\n                            color=\"inherit\"\n                            onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\n                    >\n                        {isLogin ? \"Выйти\" : \"Войти\"}\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import React, {useEffect, useState} from \"react\";\n\nimport {useSearchParams} from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport \"./SuccessLoginPage.css\";\nimport {Alert, Container, Stack, Typography} from \"@mui/material\";\n\nexport interface SuccessLoginPageProps {\n    updateCurrentUser: () => void,\n}\n\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({updateCurrentUser}) => {\n    const [error, setError] = useState<string | null>(null);\n\n    const navigate = useNavigate();\n\n    const updateAuth = async () => {\n        const jwt = searchParams.get('jwt');\n\n        if (!jwt) {\n            setError(\"Не удалось войти в аккаунт\");\n            return;\n        }\n\n        console.log(`Jwt = ${jwt}`);\n\n        document.cookie = `jwt=${jwt}; path=/; secure; max-age=2592000`;\n\n        await updateCurrentUser();\n\n        // window.location.href = \"/\";\n        navigate(\"/\");\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, []);\n\n    const [searchParams] = useSearchParams();\n\n    return (\n        <div className=\"success-login-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>Входим в аккаунт...</Typography>\n\n                    {\n                        error && <Alert severity=\"error\">{error}</Alert>\n                    }\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default SuccessLoginPage;","import React, {FC} from \"react\";\nimport \"./RegisteredPage.css\";\nimport {Button, Container, Stack, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface RegisteredPageProps {\n}\n\nconst RegisteredPage: FC<RegisteredPageProps> = ({}) => {\n\n    const navigate = useNavigate();\n\n    const onLoginClicked = () => {\n        navigate(\"/login\");\n    }\n\n    return (\n        <div className=\"registered-page\">\n            <Container maxWidth=\"xs\">\n                <Stack\n                    spacing={1}\n                    justifyContent=\"center\"\n                    style={{minHeight: '100vh'}}\n                >\n                    <Typography variant=\"h5\" align=\"center\" sx={{paddingBottom: \"24px\"}}>\n                        Новый аккаунт создан\n                    </Typography>\n\n                    <Button variant=\"outlined\"\n                            onClick={onLoginClicked}\n                    >\n                        Войти\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default RegisteredPage;","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    // DataSet,\n    Network,\n    Options,\n    Data, \n} from \"vis-network/peer\";\nimport { DataSet } from \"vis-data/peer\";\nimport { Timeline } from \"vis-timeline/peer\";\n// vis-network/standalone/esm/vis-network\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\n// import { Timeline } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const VisNetwork = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        // interaction: {\n        //     dragView: false,\n        //     keyboard: false,\n        //     dragNodes: false,\n        // },\n        layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"circle\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n  // DOM element where the Timeline will be attached\n  const [container, _co] = useState(useRef<HTMLDivElement>(null)) ;\n//   document.getElementById(\"visualization\");\n\n  // Create a DataSet (allows two way data-binding)\n  const items = new DataSet([\n    { id: 1, content: \"item 1\", start: \"2014-04-20\" },\n    { id: 2, content: \"item 2\", start: \"2014-04-14\" },\n    { id: 3, content: \"item 3\", start: \"2014-04-18\" },\n    { id: 4, content: \"item 4\", start: \"2014-04-16\", end: \"2014-04-19\" },\n    { id: 5, content: \"item 5\", start: \"2014-04-25\" },\n    { id: 6, content: \"item 6\", start: \"2014-04-27\", type: \"point\" }\n  ]);\n\n  // Configuration for the Timeline\n  const timeLineOptions = {};\n\n  // Create a Timeline\n\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n    const timeline = React.createRef<Timeline | null>();\n    // const timeline\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            // timeline = new Timeline(container, items, options)\n            // timeline.current = new Timeline(container.current, items, timeLineOptions);\n\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"network\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useEffect } from 'react';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const NonDetermenisticModal = (props: { isNonDetermenistic: boolean, setIsNonDetermenistic: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonDetermenistic) {\n            setOpen(props.isNonDetermenistic)\n            props.setIsNonDetermenistic(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Недетерменизм\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n\nexport const NonMinimizableModal = (props: { isNonMinimizable: boolean, setIsNonMinimizable: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonMinimizable) {\n            setOpen(props.isNonMinimizable)\n            props.setIsNonMinimizable(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Невозможно минимизровать\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\nimport { network } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const TreeHistory = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        interaction: {\n            // dragView: false,\n            keyboard: false,\n            dragNodes: true,\n        },\n        layout: {\n         hierarchical: {\n        //  direction: directionInput,\n         treeSpacing:200,\n         direction: 'LR',\n         parentCentralization: false,\n         sortMethod: 'directed',\n         shakeTowards: 'roots'\n        //  directed\n      },\n    },\n        // layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"box\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"vnc\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import {BASE_URL, getAuthHeaders, postParams} from \"./apiBase\";\n\nexport type RemoveSaveRequest = {\n    id: string\n};\n\nexport default function ApiRemoveSave(request: RemoveSaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${request.id}`;\n\n        const headers = getAuthHeaders();\n\n        fetch(url, {\n            method: \"DELETE\",\n            headers: headers,\n        })\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    reject();\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders} from \"./apiBase\";\n\nexport type UpdateSaveRequest = {\n    isShared?: boolean,\n    name?: string,\n};\n\nexport default function ApiUpdateSave(id: string, request: UpdateSaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/${id}`;\n\n        const headers = getAuthHeaders();\n        headers.set(\"Content-Type\", \"application/json\");\n        const body = JSON.stringify(request);\n\n        fetch(url, {\n            method: \"PUT\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    reject();\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import { UserModel } from \"../Models/UserModel\";\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\n\nexport type UpdateUserRequest = {\n    about: string,\n};\n\nexport default function ApiUpdateUser(request: UpdateUserRequest): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/user`;\n\n        const headers = getAuthHeaders();\n        headers.set(\"Content-Type\", \"application/json\");\n        const body = JSON.stringify(request);\n\n        fetch(url, {\n            method: \"PUT\",\n            headers: headers,\n            body: body,\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, { FC, useEffect, useState } from \"react\";\nimport \"./MePage.css\";\nimport {\n    Container,\n    Stack,\n    Typography,\n    IconButton,\n    TableContainer,\n    Table, TableHead, TableRow, TableCell, TableBody, DialogContentText, DialogContent, Button,\n    InputAdornment,\n    OutlinedInput,\n    Alert,\n    Box,\n    TextField,\n    DialogActions,\n} from \"@mui/material\";\nimport { UserModel } from \"../../../Models/UserModel\";\nimport LaunchOutlinedIcon from '@mui/icons-material/LaunchOutlined';\nimport DeleteOutlineRoundedIcon from '@mui/icons-material/DeleteOutlineRounded';\nimport ApiGetSaves from \"../../../Api/apiGetSaves\";\nimport { SaveModel } from \"../../../Models/SaveModel\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport ApiRemoveSave, { RemoveSaveRequest } from \"../../../Api/apiRemoveSave\";\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiUpdateSave, { UpdateSaveRequest } from \"../../../Api/apiUpdateSave\";\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\nimport ApiUpdateUser, { UpdateUserRequest } from \"../../../Api/apiUpdateUser\";\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\n\ninterface MePageProps {\n    user: UserModel | null,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n    setUser: (user: UserModel) => void,\n}\n\nconst MePage: FC<MePageProps> = ({ user, onAuthFailed, changeComputerType, setUser }) => {\n    const [saves, setSaves] = useState<SaveModel[]>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [shareDialogOpen, setShareDialogOpen] = useState<boolean>(false);\n    const [saveToRemoveId, setSaveToRemoveId] = useState<string | null>(null);\n    const [editAccountMode, setEditAccountMode] = useState<boolean>(false);\n    const [editedAbout, setEditedAbout] = useState<string>(user?.about ?? \"\");\n    const [editSaveDialogOpen, setEditSaveDialogOpen] = useState<boolean>(false);\n    const [saveToEditId, setSaveToEditId] = useState<string | null>(null);\n    const [editedSaveName, setEditedSaveName] = useState<string | null>(null);\n\n    const navigate = useNavigate();\n\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onRemoveButtonClicked = (id: string) => {\n        setSaveToRemoveId(id);\n        setOpen(true);\n    }\n\n    const onRemoveConfirmClicked = async () => {\n        if (saveToRemoveId) {\n            await removeSave(saveToRemoveId);\n        }\n        await updateSaves();\n        closeDialog();\n    }\n\n    const onRemoveCancelClicked = () => {\n        closeDialog();\n    }\n\n    const onOpenClicked = async (id: string, name: string) => {\n        const save = await cloudSavesManager.getSave({ id: id, name: name });\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            navigate(\"/\");\n        }\n    }\n\n    const onShareClicked = (id: string, isShared: boolean) => {\n        setSaveShareState(id, !isShared).then(updateSaves);\n        if (!isShared) {\n            setShareDialogOpen(true);\n        }\n    }\n\n    const onCopyShareLinkClicked = () => {\n        navigator.clipboard.writeText(`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user?.id}`);\n    }\n\n    const onEditAccountClicked = async () => {\n        if (!editAccountMode) {\n            setEditAccountMode(true);\n        } else {\n            await saveAccountChanges();\n            setEditAccountMode(false);\n        }\n    }\n\n    const onAboutChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEditedAbout(value);\n    }\n\n    const onEditSaveClicked = (id: string, name: string) => {\n        setSaveToEditId(id);\n        setEditedSaveName(name);\n        setEditSaveDialogOpen(true);\n    }\n\n    const onEditedSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setEditedSaveName(value);\n    }\n\n    const onSaveEditConfirmed = () => {\n        const request: UpdateSaveRequest = {\n            name: editedSaveName!,\n        };\n\n        ApiUpdateSave(saveToEditId!, request, () => {}).then(async () =>{ await updateSaves(); closeEditSaveDialog()});\n    }\n\n    const saveAccountChanges = async () => {\n        if (editedAbout != user?.about) {\n            var request: UpdateUserRequest = {\n                about: editedAbout,\n            }\n\n            ApiUpdateUser(request).then(updatedUser => {\n                setUser(updatedUser);\n            });\n        }\n    }\n\n    const closeDialog = () => {\n        setOpen(false);\n    }\n\n    const closeShareDialog = () => {\n        setShareDialogOpen(false);\n    }\n\n    const closeEditSaveDialog = () => {\n        setEditSaveDialogOpen(false);\n    }\n\n    const updateSaves = async () => {\n        await ApiGetSaves(onAuthFailed)\n            .then(saves => setSaves(saves))\n            .catch(() => setSaves([]));\n    }\n\n    const removeSave = async (id: string) => {\n        const request: RemoveSaveRequest = {\n            id: id,\n        };\n\n        await ApiRemoveSave(request, onAuthFailed);\n    }\n\n    const setSaveShareState = async (id: string, shareState: boolean) => {\n        const request: UpdateSaveRequest = {\n            isShared: shareState,\n        }\n\n        await ApiUpdateSave(id, request, onAuthFailed);\n    }\n\n    useEffect(() => {\n        updateSaves();\n    }, [])\n\n    useEffect(() => {\n        setEditedAbout(user?.about ?? \"\");\n    }, [user])\n\n    return (\n        user &&\n        <div className=\"me-page\">\n            <Dialog open={open} onClose={closeDialog}>\n                <DialogTitle>Удаление сохранения</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Вы уверены, что хотите удалить выбранное сохранение?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => onRemoveConfirmClicked()}>Удалить</Button>\n                    <Button onClick={() => onRemoveCancelClicked()}>Не удалять</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={shareDialogOpen} onClose={closeShareDialog} maxWidth=\"md\" fullWidth>\n                <DialogTitle>Настройки доступа</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Доступно всем пользователям по ссылке. Закрыть доступ можно в профиле пользователя.\n                    </DialogContentText>\n                    <OutlinedInput\n                        sx={{ mt: 2 }}\n                        readOnly\n                        fullWidth\n                        value={`https://spbu-se.github.io/WebAutomataConstructor/#/user/${user.id}`}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton onClick={onCopyShareLinkClicked} edge=\"end\">\n                                    <ContentCopyOutlinedIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => closeShareDialog()}>Ок</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={editSaveDialogOpen} onClose={closeEditSaveDialog} maxWidth=\"sm\" fullWidth>\n                <DialogTitle>Редактирование сохранения</DialogTitle>\n                <DialogContent>\n                    <TextField sx={{ mt: 1 }} label=\"Название\" fullWidth size=\"small\" value={editedSaveName} onChange={onEditedSaveNameChanged}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onSaveEditConfirmed()}>Сохранить</Button>\n                    <Button onClick={() => closeEditSaveDialog()}>Отменить</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Container>\n                <Stack spacing={4}>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Аккаунт</Typography>\n                        <Stack>\n                            <Typography variant=\"body1\">Имя пользователя: {user.userName}</Typography>\n                            {\n                                !editAccountMode &&\n                                <Typography variant=\"body1\">О себе: {user.about}</Typography>\n                            }\n                            {\n                                editAccountMode &&\n                                <TextField sx={{ mt: 1 }} size=\"small\" label=\"О себе\" value={editedAbout} onChange={onAboutChanged} />\n                            }\n                        </Stack>\n                        <Box>\n                            <Button size=\"small\" onClick={() => onEditAccountClicked()}>\n                                {editAccountMode ? \"Сохранить\" : \"Редактировать\"}\n                            </Button>\n                        </Box>\n                    </Stack>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Сохранения</Typography>\n                        {\n                            saves.length > 0 &&\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Название</TableCell>\n                                            <TableCell>Время создания</TableCell>\n                                            <TableCell>Время изменения</TableCell>\n                                            <TableCell>Поделиться</TableCell>\n                                            <TableCell>Открыть</TableCell>\n                                            <TableCell>Редактировать</TableCell>\n                                            <TableCell>Удалить</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            saves.map(save => (\n                                                <TableRow key={save.id}>\n                                                    <TableCell>\n                                                        {save.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Button size=\"small\" onClick={() => onShareClicked(save.id, save.isShared)}>\n                                                            {save.isShared ? \"Закрыть доступ\" : \"Поделиться\"}\n                                                        </Button>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onOpenClicked(save.id, save.name)}>\n                                                            <LaunchOutlinedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onEditSaveClicked(save.id, save.name)}>\n                                                            <EditOutlinedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <IconButton onClick={() => onRemoveButtonClicked(save.id)}>\n                                                            <DeleteOutlineRoundedIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        }\n                        {\n                            saves.length === 0 &&\n                            <Alert severity=\"warning\" icon={false}>\n                                Сохранённых вычислетелей ещё нет\n                            </Alert>\n                        }\n                    </Stack>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default MePage;","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport {UserModel} from \"../Models/UserModel\";\nimport {getCookie} from \"../utils\";\n\nexport default function ApiGetUserById(id: string): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/user/${id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams} from \"./apiBase\";\nimport { SaveModel } from \"../Models/SaveModel\";\n\nexport default function ApiGetUserSaves(id: string): Promise<SaveModel[]> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/user/${id}`;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import { SaveModel } from \"../Models/SaveModel\";\nimport { BASE_URL, getAuthHeaders } from \"./apiBase\";\n\n\nexport default function ApiCloneSave(id: string): Promise<SaveModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + `/save/clone/${id}`;\n\n        const headers = getAuthHeaders();\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, { FC, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ApiGetUserById from \"../../../Api/apiGetUserById\";\nimport ApiGetUserSaves from \"../../../Api/apiGetUserSaves\";\nimport { UserModel } from \"../../../Models/UserModel\";\nimport { SaveModel } from \"../../../Models/SaveModel\";\nimport \"./UserPage.css\";\nimport { Alert, Button, Container, Dialog, DialogContent, DialogContentText, DialogTitle, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\nimport ApiCloneSave from \"../../../Api/apiCloneSave\";\nimport { ComputerType, graph } from \"../../../react-graph-vis-types\";\nimport CloudSavesManager from \"../../../SavesManager/CloudSavesManager\";\n\n\n\ninterface UserPageProps {\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void\n}\n\n\nconst UserPage: FC<UserPageProps> = ({ changeComputerType }) => {\n    const [user, setUser] = useState<UserModel | null>(null);\n    const [saves, setSaves] = useState<SaveModel[]>([]);\n    const [cloneDialogOpen, setCloneDialogOpen] = useState<boolean>(false);\n    const [saveToCloneId, setSaveToCloneId] = useState<string | null>(null);\n    const [clonedSave, setClonedSave] = useState<SaveModel | null>(null);\n\n    const { userId } = useParams();\n\n    const cloudSavesManager = new CloudSavesManager(() => { });\n\n    const navigate = useNavigate();\n\n\n    const onCloneClicked = (id: string) => {\n        setSaveToCloneId(id);\n        setCloneDialogOpen(true);\n    }\n\n    const onCloneDialogClose = () => {\n        setCloneDialogOpen(false);\n    }\n\n    const onCloneConfirmed = () => {\n        cloneSave(saveToCloneId!);\n    }\n\n    const getUser = async () => {\n        await ApiGetUserById(userId!)\n            .then(user => { console.log(user); setUser(user) });\n    }\n\n    const getSaves = async () => {\n        await ApiGetUserSaves(userId!)\n            .then(saves => { console.log(saves); setSaves(saves) });\n    }\n\n    const cloneSave = async (id: string) => {\n        await ApiCloneSave(id).then(async (response) => {\n            const save = await cloudSavesManager.getSave({ id: response.id, name: response.name });\n\n            if (save) {\n                changeComputerType(save.save.type, save.save.graph);\n                navigate(\"/\");\n            }\n        })\n    }\n\n    useEffect(() => { getUser(); getSaves(); }, []);\n\n    return (\n        user &&\n        <div className=\"me-page\">\n            <Dialog open={cloneDialogOpen} onClose={onCloneDialogClose}>\n                <DialogTitle>Клонирование сохранения</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Копия сохранения появится в списке сохранений. Вы сможете изменять его независимо. Хотите продолжить?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogContent>\n                    <Button onClick={() => onCloneConfirmed()}>Да, клонировать</Button>\n                    <Button onClick={() => onCloneDialogClose()}>Нет</Button>\n                </DialogContent>\n            </Dialog>\n\n            <Container>\n                <Stack spacing={4}>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Аккаунт</Typography>\n                        <Stack>\n                            <Typography variant=\"body1\">О себе: {user.about}</Typography>\n                        </Stack>\n                    </Stack>\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">Сохранения</Typography>\n                        {\n                            saves.length > 0 &&\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Название</TableCell>\n                                            <TableCell>Время создания</TableCell>\n                                            <TableCell>Время изменения</TableCell>\n                                            <TableCell>Клонирование</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            saves.map(save => (\n                                                <TableRow key={save.id}>\n                                                    <TableCell>\n                                                        {save.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.createdDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {new Date(save.lastModifiedDateTime).toLocaleString('ru-ru')}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Button size=\"small\" onClick={() => onCloneClicked(save.id)}>\n                                                            Клонировать себе\n                                                        </Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        }\n                        {\n                            saves.length === 0 &&\n                            <Alert severity=\"warning\" icon={false}>\n                                Пользователь ещё не поделился своими сохранениями\n                            </Alert>\n                        }\n                    </Stack>\n                </Stack>\n            </Container>\n        </div>\n    )\n};\n\nexport default UserPage;","import React, { ReactNode } from 'react';\nimport \"./App.css\"\nimport {\n    ComputerType,\n    edge,\n    graph,\n    histNode,\n    node\n} from \"./react-graph-vis-types\";\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\nimport {\n    computersInfo, decorateGraph, elementsToGraph, getNodeNamePrefix, getTransitionsTitles,\n    graphToElements, transitionsToLabel\n} from \"./utils\";\nimport RunControl from \"./Components/RunControl/RunControl\";\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\nimport Paper from \"@mui/material/Paper\";\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\nimport {Route, Routes, HashRouter} from \"react-router-dom\";\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./Components/Pages/RegisterPage/RegisterPage\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport { TransitionParams } from \"./Logic/IGraphTypes\";\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\nimport RegisteredPage from \"./Components/Pages/RegisteredPage/RegisteredPage\";\nimport { VisNetwork } from './VisNetwork';\nimport {\n    DataSet,\n    Network,\n} from \"vis-network/standalone/esm/vis-network\";\nimport {Output} from './Logic/Types';\nimport {NonDetermenisticModal, NonMinimizableModal} from './ErrorModal';\nimport {TreeHistory} from './TreeHistory';\nimport MePage from \"./Components/Pages/MePage/MePage\";\nimport {UserModel} from \"./Models/UserModel\";\nimport ApiGetUser from \"./Api/apiGetUser\";\nimport UserPage from './Components/Pages/UserPage/UserPage';\n\n// import {ContextMenu, MenuItem as CotextMenuItem, ContextMenuTrigger} from \"react-contextmenu\";\n\ninterface appProps {\n}\n\nexport type Elements = {\n    nodes: DataSet<node, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\nexport type HistElements = {\n    nodes: DataSet<histNode, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\ninterface appState {\n    computerType: null | ComputerType,\n    selectedNode: node | null,\n    selectedEdge: edge | null,\n    inEdgeMode: boolean,\n    elements: Elements,\n    treeElems: HistElements,\n    options: any,\n    initiallyStabilized: boolean,\n    popout: ReactNode | null,\n    savePopoutOpen: boolean,\n    welcomePopoutOpen: boolean,\n    isLogin: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined,\n    wasComputerResetted: boolean,\n    byEmptyStack: boolean,\n    errIsNonDetermenistic: boolean,\n    errIsNonMinimizable: boolean,\n    showTree: boolean,\n    History: (() => JSX.Element),\n    user: UserModel | null,\n}\n\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\n\nexport const computerAction = {\n    init: (() => { }),\n    nfaToDfa: (() => { }),\n    minimizeDfa: (() => { }),\n    mooreToMealy: (() => { }),\n    mealyToMoore: (() => { })\n}\n\nexport const controlAction = {\n    changerByStack: (() => { }),\n    run: (() => { }),\n    step: (() => { }),\n    reset: (() => { }),\n}\n\n\n\ninterface RibbonProps {\n    computerType: null | ComputerType,\n    wasComputerResetted: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined\n    memRef: React.RefObject<HTMLDivElement>\n}\n\nexport const Ribbon = (props: RibbonProps) => {\n    return (\n        props.computerType === \"tm\" && props.wasComputerResetted\n            ?\n            <div className=\"app__mem_ribbon\">\n                {\n                    props.mem?.map((value, index) =>\n                        <div\n                            className=\"app__mem_cell\"\n                            style={{ border: `${index === props.ptr ? \"#0041d0\" : \"#000000\"} 2px solid` }}\n                        >\n                            {Math.abs(Math.abs(index) - Math.abs(props.ptr!)) <= 5\n                                ? <div ref={props.memRef} />\n                                : <div />\n                            }\n                            {value}\n                            {props.memRef?.current?.scrollIntoView({ behavior: 'smooth' })}\n                        </div>\n                    )\n                }\n            </div>\n            : <div />\n    )\n}\n\nclass App extends React.Component<appProps, appState> {\n\n    memRef = React.createRef<HTMLDivElement>();\n    network = React.createRef<Network | null>();\n    networkTST = React.createRef<Network | null>();\n\n    constructor(props: appProps) {\n        super(props);\n\n        this.state = {\n            computerType: null,\n\n            selectedNode: null,\n            selectedEdge: null,\n            inEdgeMode: false,\n            elements: { nodes: new DataSet<node>(), edges: new DataSet<edge>() },\n            treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() },\n            options: {\n                edges: {\n                    smooth: {\n                        enabled: true,\n                        type: \"discrete\",\n                        roundness: 0.5\n                    },\n                    length: 200\n                },\n                nodes: {\n                    shape: \"box\",\n                    font: \"18px Roboto black\",\n                    labelHighlightBold: false,\n                    widthConstraint: 40,\n                    color: \"red\",\n                    heightConstraint: 40\n                },\n                physics: {\n                    enabled: false\n                }\n            },\n            initiallyStabilized: false,\n            popout: null,\n            savePopoutOpen: false,\n            welcomePopoutOpen: false,\n            isLogin: true,\n            mem: undefined,\n            ptr: undefined,\n            wasComputerResetted: false,\n            byEmptyStack: false,\n\n            errIsNonDetermenistic: false,\n            errIsNonMinimizable: false,\n\n            showTree: false,\n            History: () => ( <div></div> ),\n            user: null\n        };\n    }\n\n    setIsNonDetermenistic = (v: boolean) => this.setState({ errIsNonDetermenistic: v })\n\n    setIsNonMinimizable = (v: boolean) => this.setState({ errIsNonMinimizable: v })\n\n    async componentDidMount() {\n        await this.updateCurrentUser();\n\n        this.updateGraph();\n        this.subscribeToShortcuts();\n        this.openWelcomePopout();\n    }\n\n    lastNodeId = 0;\n\n    subscribeToShortcuts = () => {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            if (event.key === \"s\" && event.ctrlKey) {\n                event.preventDefault();\n                this.openSavePopout();\n            }\n        })\n    }\n\n    openSavePopout = () => {\n        this.setState({ savePopoutOpen: true });\n    }\n\n    closeSavePopout = () => {\n        this.setState({ savePopoutOpen: false });\n    }\n\n    openWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: true });\n    }\n\n    closeWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: false });\n    }\n\n    logout = () => {\n        document.cookie = `jwt=\"\"; path=/; secure; max-age=-1`;\n        this.setState({isLogin: false});\n        this.updateCurrentUser();\n    }\n\n    updateCurrentUser = async () => {\n        await ApiGetUser()\n            .then(user => this.setState({user: user}))\n            .catch(() => this.setState({user: null}));\n    }\n\n    setUser = (user: UserModel) => {\n        this.setState({ user: user })\n    }\n\n\n    updateGraph = (): void => {\n        decorateGraph(this.state.elements, this.state.computerType)\n    }\n\n    changeNodeLabel = (id: number, label: string): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                const lableTokens =\n                    label\n                        .split('')\n                        .filter(x => x !== \" \" && x !== \"\\n\")\n                        .join('')\n                        .split('|')\n                const output = lableTokens[1] !== undefined ? lableTokens[1] : \"\"\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    label: label,\n                    output: output\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isAdmit: isAdmit\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isInitial: isInitial\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.isCurrent) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: false\n                })\n            }\n        })\n        this.state.elements.nodes.forEach((node) => {\n            if (ids.includes(node.id)) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: isCurrent\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    createNode = (e: { pointer: { canvas: { x: any; y: any; }; }; }) => {\n        this.lastNodeId++;\n        const node = {\n            id: this.lastNodeId,\n            label: 'S' + (this.lastNodeId),\n            x: e.pointer.canvas.x,\n            y: e.pointer.canvas.y,\n            isAdmit: false,\n            isInitial: false,\n            isCurrent: false,\n        }\n        this.state.elements.nodes.add(node);\n    }\n\n    lastHistNodeId = 0\n\n    createHistNode = (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => {\n        this.lastHistNodeId++;\n\n\n        const border = isInitial ? \"#0041d0\" : isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        const node: histNode = {\n            id: this.lastHistNodeId,\n            idd,\n            label,\n            isAdmit,\n            isInitial,\n            isCurrent,\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            }\n        }\n\n        this.state.treeElems.nodes.add(node);\n    }\n\n    createHistEdge = (from: number, to: number, by: any) => {\n        const transitions = new Set([[{ title: by }]])\n\n        this.state.treeElems.edges.add({\n            from: from,\n            to: to,\n            transitions: transitions,\n            label: by\n        })\n    }\n\n    historyEndRef = React.createRef<HTMLDivElement>();\n\n    getLastHistNodeId = () => this.lastHistNodeId\n\n    resetHistTree = () => {\n        for (let i = 0; i <= this.lastHistNodeId; i++) {\n            this.state.treeElems.nodes.remove(i)\n        }\n        this.state.treeElems.edges.forEach((e) => this.state.treeElems.edges.remove(e.id!))\n        this.lastHistNodeId = 0;\n    }\n\n    selectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        const selectedNodes = this.state.elements.nodes.get(nodesIDs);\n        this.setState({ selectedNode: selectedNodes[0] });\n    }\n\n\n    deselectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        if (nodesIDs.length === 0) {\n            this.setState({ selectedNode: null });\n        }\n    }\n\n    deleteNode = (id: number): void => {\n        this.state.elements.nodes.remove(id)\n\n        let rmEdges: string[] = []\n        this.state.elements.edges.forEach((edge) => {\n            if (edge.from === id || edge.to === id) {\n                rmEdges.push(edge.id!)\n            }\n        })\n        this.state.elements.edges.remove(rmEdges)\n    }\n\n    selectEdge = (e: { edges: any; }): void => {\n        const edgesIDs: number[] = e.edges;\n        const selectedEdges = this.state.elements.edges.get(edgesIDs);\n        this.setState({ selectedEdge: selectedEdges[0] });\n        console.log('click1  = selectEdge')\n    }\n\n    deselectEdge = (e: { edges: number[]; }): void => {\n        const edgesIDs: number[] = e.edges;\n        if (edgesIDs.length === 0) {\n            this.setState({ selectedEdge: null });\n        }\n    }\n\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\n        this.state.elements.edges.update({\n            id: id,\n            label: transitionsToLabel(transitions, this.state.computerType),\n            transitions: transitions\n        })\n    }\n\n    deleteEdge = (id: string): void => {\n        this.state.elements.edges.remove(id)\n    }\n\n    updMem = (mem: string[], ptr: number): void => {\n        this.setState({ mem: mem, ptr: ptr });\n    }\n\n    NFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.nfaToDfa}\n                    >\n                        {\"НКА->ДКА\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    treeVisible = () => {\n        this.setState({ showTree: !this.state.showTree})\n        return !this.state.showTree\n    }\n\n    treeContextInfo = () => (this.state.showTree ? \"Закрыть\" : \"Открыть\") + \" дерево вычислений\"\n\n    DFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.minimizeDfa}\n                    >\n                        {\"Минимизровать\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MealyContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mealyToMoore}\n                    >\n                        {\"Мур\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MooreContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mooreToMealy}\n                    >\n                        {\"Мили\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    PDAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.changerByStack}\n\n                    >\n                        {this.state.byEmptyStack ? \"По стеку\" : \"По состоянию\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    AnotherContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    ContextMenu = (computerType: null | ComputerType) => {\n        switch (computerType) {\n            case \"nfa\":\n            case \"nfa-eps\": {\n                return this.NFAContextMenu\n            }\n            case \"dfa\": {\n                return this.DFAContextMenu\n            }\n            case \"mealy\":\n            case \"dmealy\": {\n                return this.MealyContextMenu\n            }\n            case \"moore\":\n            case \"dmoore\": {\n                return this.MooreContextMenu\n            }\n            case \"pda\":\n            case \"dpda\": {\n                return this.PDAContextMenu\n            }\n            default: {\n                return this.AnotherContextMenu\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/login\" element={\n                        <LoginPage/>\n                    }/>\n                    <Route path=\"/register\" element={\n                        <RegisterPage/>\n                    }/>\n                    <Route path=\"/registered\" element={\n                        <RegisteredPage/>\n                    }/>\n                    <Route path=\"/success-login\" element={\n                        <SuccessLoginPage updateCurrentUser={this.updateCurrentUser}/>\n                    }/>\n                    <Route path=\"/me\" element={\n                        <MePage user={this.state.user}\n                                onAuthFailed={this.logout}\n                                changeComputerType={(computerType, graph: graph | null) => {\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                    this.lastNodeId = defaultGraph.nodes.length;\n                                    this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                        , () => this.updateGraph()\n                                    );\n                                }\n                                }\n                                setUser={this.setUser}\n                        />\n                    }/>\n                    <Route path=\"/user/:userId\" element={\n                        <UserPage \n                            changeComputerType={\n                                (computerType, graph: graph | null) => {\n                                    const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n                                    graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                    this.lastNodeId = defaultGraph.nodes.length;\n                                    this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                        , () => this.updateGraph()\n                                    );\n                                }\n                            }\n                        />\n                    }/>\n                    <Route path=\"/\" element={\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\n                            <div className=\"app\">\n                                <WelcomePopout\n                                    open={this.state.welcomePopoutOpen}\n                                    onClose={this.closeWelcomePopout}\n                                    onAuthFailed={this.logout}\n                                    changeComputerType={(computerType, graph: graph | null) => {\n\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n\n                                        console.log(defaultGraph);\n                                        console.log(defaultGraph[\"nodes\"]);\n                                        graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                        this.lastNodeId = defaultGraph.nodes.length;\n                                        this.setState({\n                                                computerType: computerType,\n                                                elements: graphToElements(defaultGraph)\n                                            }\n                                            , () => this.updateGraph()\n                                        );\n                                    }}\n                                />\n\n                                {this.state.popout}\n\n                                <SavingPopout open={this.state.savePopoutOpen}\n                                              onClose={this.closeSavePopout}\n                                              isLogin={this.state.isLogin}\n                                              onAuthFailed={this.logout}\n                                              graph={elementsToGraph(this.state.elements)}\n                                              computerType={this.state.computerType!}/>\n                                <div className=\"history-container\">\n                                    {this.state.History()}\n                                </div>\n                                <div className=\"hint-container\">\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Ctrl+S — сохранить автомат\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Удерживайте Ctrl чтобы создать ребро\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Двойное нажатие чтобы создать вершину\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        ПКМ для открытия контекстного меню\n                                    </Paper>\n                                </div>\n                                <NonDetermenisticModal\n                                    isNonDetermenistic={this.state.errIsNonDetermenistic}\n                                    setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                />\n                                <NonMinimizableModal\n                                    isNonMinimizable={this.state.errIsNonMinimizable}\n                                    setIsNonMinimizable={this.setIsNonMinimizable}\n                                />\n                                <Ribbon\n                                    computerType={this.state.computerType}\n                                    wasComputerResetted={this.state.wasComputerResetted}\n                                    mem={this.state.mem}\n                                    ptr={this.state.ptr}\n                                    memRef={this.memRef}\n                                />\n\n                                <AppHeader\n                                    onMenuButtonClicked={this.openWelcomePopout}\n                                    onSaveButtonClicked={this.openSavePopout}\n                                    onLogoutButtonClicked={this.logout}\n                                    isLogin={this.state.isLogin}\n                                />\n\n\n                                <div className=\"field__container\">\n                                    <VisNetwork\n                                        nodes={this.state.elements.nodes}\n                                        edges={this.state.elements.edges}\n                                        data={this.state.elements}\n                                        onDoubleClick={this.createNode}\n                                        onClick1={this.selectEdge}\n                                        onClick2={this.selectNode}\n                                        onClick3={this.deselectNode}\n                                        onClick4={this.deselectEdge}\n                                        network={this.network}\n                                        contextMenu={this.ContextMenu(this.state.computerType)}\n                                    />\n                                </div>\n\n                                {this.state.showTree ?\n                                    <div className=\"eval-tree\">\n                                        <TreeHistory\n                                            nodes={this.state.treeElems.nodes}\n                                            edges={this.state.treeElems.edges}\n                                            data={this.state.treeElems}\n                                            onDoubleClick={this.createNode}\n                                            onClick1={this.selectEdge}\n                                            onClick2={this.selectNode}\n                                            onClick3={this.deselectNode}\n                                            onClick4={this.deselectEdge}\n                                            network={this.networkTST}\n                                            contextMenu={this.ContextMenu(this.state.computerType)}\n                                        />\n                                    </div>\n                                    : <div />}\n                                <div className=\"app__right-menu\">\n                                    <NodeControl\n                                        node={this.state.selectedNode}\n                                        changeNodeLabel={this.changeNodeLabel}\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\n                                        changeStateIsInitial={this.changeStateIsInitial}\n                                        deleteNode={this.deleteNode}\n                                        reinitComputer={computerAction.init}\n\n                                    />\n                                    <EdgeControl\n                                        edge={this.state.selectedEdge}\n                                        changeEdgeTransitions={this.changeEdgeTransition}\n                                        deleteEdge={this.deleteEdge}\n                                        computerType={this.state.computerType}\n                                        reinitComputer={computerAction.init}\n                                    />\n\n                                    <RunControl\n                                        updMem={this.updMem}\n                                        elements={this.state.elements}\n                                        treeElems={this.state.treeElems}\n                                        createHistNode={this.createHistNode}\n                                        byEmptyStack={this.state.byEmptyStack}\n                                        createHistEdge={this.createHistEdge}\n                                        getLastHistNodeId={this.getLastHistNodeId}\n                                        resetHistTree={this.resetHistTree}\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\n                                        network={this.network}\n                                        changerStack={controlAction.changerByStack}\n                                        setInit={(f: () => void) => computerAction.init = f}\n                                        setNfaToDfa={(f: () => void) => computerAction.nfaToDfa = f}\n                                        setMinimizeDfa={(f: () => void) => computerAction.minimizeDfa = f}\n                                        setMooreToMealy={(f: () => void) => computerAction.mooreToMealy = f}\n                                        setMealyToMoore={(f: () => void) => computerAction.mealyToMoore = f}\n                                        updateElements={(elements: Elements) => this.setState({ elements: elements }, () => this.updateGraph())}\n                                        setComputerType={(type: null | ComputerType) => this.setState({ computerType: type })}\n                                        setResettedStatus={(status: boolean) => this.setState({ wasComputerResetted: status })}\n                                        setByEmptyStack={(byEmptyStack: boolean) => this.setState({ byEmptyStack: byEmptyStack })}\n                                        setChangerByStack={(f: () => void) => controlAction.changerByStack = f}\n                                        setRun={(f: () => void) => controlAction.run = f}\n                                        setStep={(f: () => void) => controlAction.step = f}\n                                        setReset={(f: () => void) => controlAction.reset = f}\n                                        setHistory={(jsx: () => JSX.Element) => this.setState({ History: jsx },\n                                            () => this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' }) )}\n                                        historyEndRef={this.historyEndRef}\n                                        setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                        setIsNonMinimizable={this.setIsNonMinimizable}\n                                        treeContextInfo={this.treeContextInfo}\n                                        treeVisible={this.treeVisible}\n                                    />\n\n                                </div>\n\n                            </div>\n                        </ComputerTypeContext.Provider>\n                    }/>\n                </Routes>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default App;","import {BASE_URL, getParams} from \"./apiBase\";\nimport {UserModel} from \"../Models/UserModel\";\nimport {getCookie} from \"../utils\";\n\nexport default function ApiGetUser(): Promise<UserModel> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL + \"/user\";\n\n        const jwt = getCookie(\"jwt\");\n\n        if (!jwt) {\n            reject();\n        }\n\n        const headers = new Headers();\n        headers.set(\"Authorization\", `Bearer ${jwt}`);\n\n        const params = getParams(headers);\n\n        fetch(url, params)\n            .then(response => {\n                if (!response.ok) {\n                    reject();\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, {createRef, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","\"use strict\";\nexports.__esModule = true;\nvar Move;\n(function (Move) {\n    Move[Move[\"L\"] = 0] = \"L\";\n    Move[Move[\"R\"] = 1] = \"R\";\n})(Move = exports.Move || (exports.Move = {}));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar NonDeterministic = /** @class */ (function (_super) {\n    __extends(NonDeterministic, _super);\n    function NonDeterministic() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonDeterministic';\n        Object.setPrototypeOf(_this, NonDeterministic.prototype);\n        return _this;\n    }\n    return NonDeterministic;\n}(Error));\nexports.NonDeterministic = NonDeterministic;\nvar NonMinimizable = /** @class */ (function (_super) {\n    __extends(NonMinimizable, _super);\n    function NonMinimizable() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonMinimizable';\n        Object.setPrototypeOf(_this, NonMinimizable.prototype);\n        return _this;\n    }\n    return NonMinimizable;\n}(Error));\nexports.NonMinimizable = NonMinimizable;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar lodash_1 = require(\"lodash\");\nvar PDA = /** @class */ (function (_super) {\n    __extends(PDA, _super);\n    function PDA(graph, startStatements, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.stack = new Stack_1.Stack();\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.haveEpsilon = function () {\n            return _this.epsId !== undefined;\n        };\n        _this.getStartStatements = function () {\n            var curs = _this.curPosition.map(function (v) {\n                var _a;\n                var stmt = v.stmt;\n                stmt.stack = (_a = v.stack) === null || _a === void 0 ? void 0 : _a.getStorage();\n                return stmt;\n            });\n            return curs;\n        };\n        _this.byEmptyStackAdmt = function (isAdmt) {\n            _this.admitByEmptyStack = isAdmt;\n        };\n        _this.treeHist = [];\n        _this.pdaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            _this.treeHist = ret.tree ? ret.tree : [];\n            return ret;\n        };\n        _this.pdaRun = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var histUnit = [];\n            var histTrace = [];\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var last = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: last.byEpsPred, byLetter: last.byLetter, byEpsAfter: last.byEpsAfter });\n            var ret = {\n                nodes: last.nodes,\n                counter: last.counter,\n                isAdmit: last.isAdmit,\n                history: last.history,\n                histTrace: histTrace\n            };\n            console.log('ret.histTrace');\n            console.log(ret.histTrace);\n            console.log('ret.histTrace');\n            return ret;\n        };\n        _this.step = _this.pdaStep;\n        _this.run = _this.pdaRun;\n        _this._step = function (counter, tr, histori, unitHsit, histTrace) {\n            var byEpsPred = [];\n            var byEpsAfter = [];\n            var byLetter = [];\n            var newPosSet = [];\n            var updCurPos = function () {\n                _this.curPosition = [];\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\n                newPosSet = [];\n            };\n            var epsStep = function () {\n                _this.curPosition.forEach(function (value) {\n                    var _a;\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack, unitHsit);\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var letterSter = function () {\n                _this.curPosition.forEach(function (value) {\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack, unitHsit);\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var rmRepeations = function () {\n                var htable = new Map();\n                var positions = [];\n                _this.curPosition.forEach(function (value) {\n                    var v = {\n                        stmt: value.stmt, stack: value.stack\n                    };\n                    if (htable.get(JSON.stringify(v)) === undefined) {\n                        positions.push(value);\n                        htable.set(JSON.stringify(v), value);\n                    }\n                });\n                _this.curPosition = [];\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\n            };\n            if (_this.epsId !== undefined) {\n                epsStep();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsPred.push(v); });\n            }\n            if (counter < _this.input.length) {\n                letterSter();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byLetter.push(v); });\n                if (_this.epsId !== undefined) {\n                    epsStep();\n                    updCurPos();\n                    rmRepeations();\n                    _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsAfter.push(v); });\n                }\n            }\n            else {\n                rmRepeations();\n                _this.treeHist.push(unitHsit);\n                histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n                return {\n                    nodes: _this.toNodes(_this.curPosition),\n                    counter: counter,\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\n                    history: histori,\n                    tree: _this.treeHist,\n                    byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                    histTrace: []\n                };\n            }\n            rmRepeations();\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\n            counter++;\n            _this.treeHist.push(unitHsit);\n            histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n            return {\n                nodes: _this.toNodes(_this.curPosition),\n                counter: counter,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                history: histori,\n                tree: _this.treeHist,\n                byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                histTrace: []\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.treeHist = [];\n            _this.startStatements.forEach(function (value) {\n                var stack = new Stack_1.Stack();\n                stack.push(Computer_1.BOTTOM);\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id),\n                    stack: stack\n                });\n            });\n        };\n        _this.admitByEmptyStack = byEmpty;\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\n        _this.stack.push(Computer_1.BOTTOM);\n        _this.curPosition = [];\n        _this.treeHist = [];\n        startStatements.forEach(function (value) {\n            var stack = new Stack_1.Stack();\n            stack.push(Computer_1.BOTTOM);\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id),\n                stack: stack\n            });\n        });\n        _this.setInput(input);\n        if (_this.epsId) { //\n            _this.curPosition.forEach(function (value) {\n                _this.cycleEps(value.stmt.idLogic, value.stack);\n            });\n        }\n        return _this;\n    }\n    PDA.prototype.copyPushList = function (value) {\n        var _a;\n        var cpy = [];\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\n        return cpy;\n    };\n    PDA.prototype.pushReverse = function (pushVals, stack) {\n        pushVals.reverse().forEach(function (value) {\n            stack.push(value);\n        });\n    };\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\n        newStack.pop();\n        var pushVals = this.copyPushList(value);\n        this.pushReverse(pushVals, newStack);\n    };\n    PDA.permute0 = function (permutation) {\n        var r = lodash_1.cloneDeep(permutation);\n        function cmp(a, b) {\n            if (a.stackDown && b.stackDown) {\n                if (a.stackDown < b.stackDown) {\n                    return -1;\n                }\n                if (a.stackDown > b.stackDown) {\n                    return 1;\n                }\n                return 0;\n            }\n            return 0;\n        }\n        r = r.sort(cmp);\n        var tmp = [];\n        var _tmp = [];\n        var dwn = r[0].stackDown;\n        for (var i = 0; i < r.length; i++) {\n            if (r[i].stackDown === dwn) {\n                _tmp.push(r[i]);\n            }\n            else {\n                tmp.push(_tmp);\n                dwn = r[i].stackDown;\n                _tmp = [];\n                _tmp.push(r[i]);\n            }\n        }\n        tmp.push(_tmp);\n        var ret = [];\n        var _detour = function (lvl, cur, acc) {\n            if (lvl < tmp.length) {\n                for (var i = 0; i < tmp[lvl].length; i++) {\n                    var a = lodash_1.cloneDeep(acc);\n                    a.push(tmp[lvl][i]);\n                    _detour(lvl + 1, i, a);\n                }\n            }\n            else {\n                ret.push(acc);\n            }\n        };\n        _detour(0, 0, []);\n        return ret;\n    };\n    PDA.permute = function (permutation) {\n        var length = permutation.length;\n        var result = [permutation.slice()];\n        var c = new Array(length).fill(0);\n        var i = 1;\n        var k;\n        var p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = permutation[i];\n                permutation[i] = permutation[k];\n                permutation[k] = p;\n                c[i]++;\n                i = 1;\n                result.push(permutation.slice());\n            }\n            else {\n                c[i] = 0;\n                i++;\n            }\n        }\n        return result;\n    };\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\n        var wasCreated = function (hash) {\n            return htable.get(hash) !== undefined;\n        };\n        if (!wasCreated(JSON.stringify(value))) {\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\n        }\n    };\n    PDA.prototype.cycleEps = function (curLId, stack0) {\n        var _this = this;\n        var htable = new Map();\n        var positions = [];\n        var visited = [];\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined\n            ? PDA.permute0(this.cellMatrix(curLId, this.epsId))\n            : [(this.cellMatrix(curLId, this.epsId))];\n        var cycle = function (cell, idx, idLogic, stack) {\n            visited[idx] = true;\n            cell.forEach(function (value, index) {\n                if (value.idLogic === idLogic) {\n                    if (value.stackDown === stack.peek()) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchPushEpsVal(value, newCycleStack); //\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                    else if (value.stackDown === Computer_1.EPS) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchDownEpsVal(value, newCycleStack);\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                }\n            });\n        };\n        permutes.forEach(function (value) {\n            for (var i = 0; i < visited.length; i++) {\n                visited[i] = false;\n            }\n            cycle(value, 0, curLId, stack0);\n        });\n        return positions;\n    };\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack, hist) {\n        var _this = this;\n        if (this.epsId === undefined) {\n            return;\n        }\n        var visited = [];\n        for (var i = 0; i < this.statements.size; i++) {\n            visited.push(false);\n        }\n        var dfs = function (id, stack, stDwn, elements) {\n            _this.cycleEps(id, stack).forEach(function (value) {\n                elements.push({\n                    idLogic: id,\n                    top: value.stack\n                });\n            });\n            elements.push({\n                idLogic: id,\n                top: stack\n            });\n            visited[id] = true;\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\n                        case stDwn: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                        case Computer_1.EPS: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                    }\n                }\n            }\n            return elements;\n        };\n        var histUnit = [];\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\n        var positions = [];\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\n            positions.push({\n                stmt: stmt, stack: endsOfEpsWay[i].top,\n                from: this.nodes[curLId],\n                cur: this.nodes[stmt.idLogic],\n                by: Computer_1.EPS,\n                oldStack: stack,\n                stackDown: stackDown\n            });\n            hist.push({ by: Computer_1.EPS, from: this.nodes[curLId], value: this.nodes[stmt.idLogic] });\n        }\n        return positions;\n    };\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS) {\n            if (value.stackPush.length !== 1) {\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n            }\n            else {\n                newStack.pop();\n            }\n        }\n        else {\n            this.pushTopToNewStack0(newStack, value);\n        }\n    };\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n        }\n        else if (value.stackPush[0] !== Computer_1.EPS) {\n            var pushVals = this.copyPushList(value);\n            this.pushReverse(pushVals, newStack);\n        }\n    };\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack, hist) {\n        var _this = this;\n        var positions = [];\n        var histUnit = [];\n        var getLetter = function (id) {\n            var ret;\n            _this.alphabet.forEach(function (v, k) {\n                if (id === v) {\n                    ret = k;\n                }\n            });\n            return ret;\n        };\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\n            switch (value.stackDown) {\n                case stackDown: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchPushEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: stackDown\n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n                case Computer_1.EPS: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchDownEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput),\n                        oldStack: stack,\n                        stackDown: Computer_1.EPS\n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n            }\n        });\n        return positions;\n    };\n    PDA.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret && (!this.haveEpsilon());\n    };\n    PDA.prototype.haveAdmitting = function (positions) {\n        var ret = false;\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\n            positions.forEach(function (value) {\n                if (value.stmt.isAdmit) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n        else {\n            positions.forEach(function (value) {\n                if (value.stack.size() === 0) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n    };\n    PDA.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var _a, _b;\n            var from = {\n                id: value.from.id,\n                isAdmit: value.from.isAdmit,\n                stack: value.oldStack ? value.oldStack.getStorage() : undefined,\n                move: (_a = value.from) === null || _a === void 0 ? void 0 : _a.move,\n                output: (_b = value.from) === null || _b === void 0 ? void 0 : _b.output\n            };\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage(), from: from, cur: value.cur, by: value.by, oldStack: value.oldStack.getStorage(), stackDown: value.stackDown });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    return PDA;\n}(Computer_1.Computer));\nexports.PDA = PDA;\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    Queue.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    ImSet.prototype.getStorage = function () {\n        return this.set;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar EpsilonNFA = /** @class */ (function (_super) {\n    __extends(EpsilonNFA, _super);\n    function EpsilonNFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.enfaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        _this.enfaRun = function () {\n            var histUnit = [];\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: ret.byEpsPred, byLetter: ret.byLetter, byEpsAfter: ret.byEpsAfter });\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            console.log('histTrace');\n            console.log(histTrace);\n            console.log('histTrace');\n            return __assign(__assign({}, ret), { histTrace: histTrace });\n        };\n        _this.nfaToDfa = function () {\n            var startIds = _this.startStatements.map(function (v) { return v.id; });\n            var fakeEdges = __spreadArrays(_this.edges);\n            startIds.forEach(function (v) { return fakeEdges.push({\n                from: 999,\n                to: v,\n                transitions: new Set([[{ title: Computer_1.EPS }]]),\n                localValue: []\n            }); });\n            var fakeStart = { id: 999, isAdmit: false };\n            var fakeNodes = __spreadArrays([fakeStart], _this.nodes);\n            var fakeAutomat = new EpsilonNFA({ edges: fakeEdges, nodes: fakeNodes }, [fakeStart], []);\n            console.log(fakeAutomat);\n            var nextStepPosition = function (position, by) {\n                return fakeAutomat.cellMatrix(position.stmt.idLogic, by).map(function (v) { return ({ stmt: v }); });\n            };\n            var _nextStepPositions = function (positions, by) {\n                var acc = [];\n                positions.map(function (v) {\n                    return nextStepPosition(v, by);\n                }).forEach(function (ps) {\n                    return ps.forEach(function (p) { return acc.push(p); });\n                });\n                return acc;\n            };\n            var nextStepPositions = function (positions, by) {\n                var afterEps = function (positions) {\n                    if (fakeAutomat.epsId === undefined) {\n                        return positions;\n                    }\n                    var acc = [];\n                    var EPStack = new Stack_1.Stack();\n                    EPStack.push(Computer_1.EPS);\n                    positions.forEach(function (position) {\n                        var tmp = fakeAutomat.epsilonStep(position.stmt.idLogic, Computer_1.EPS, EPStack, []);\n                        if (tmp !== undefined) {\n                            acc.push(tmp);\n                        }\n                    });\n                    var flatted = [];\n                    acc.forEach(function (ps) { return ps.forEach(function (p) { return flatted.push(p); }); });\n                    return flatted;\n                };\n                return afterEps(_nextStepPositions(afterEps(positions), by));\n            };\n            var pop = function () { return stack.shift(); };\n            var push = function (v) {\n                stack.push(v);\n            };\n            // this.restart()\n            fakeAutomat.restart();\n            var stack = [];\n            var table = [];\n            var set = new PDA_1.ImSet();\n            // const startPos = this.curPosition\n            var startPos = fakeAutomat.curPosition;\n            push(startPos);\n            var _loop_1 = function () {\n                var head = pop();\n                var acc = [];\n                if (head === undefined || head.length < 1) {\n                    return \"break\";\n                }\n                if (set.has(head)) {\n                    return \"continue\";\n                }\n                set.add(head.map(function (v) { return ({\n                    stmt: {\n                        id: v.stmt.id,\n                        idLogic: v.stmt.idLogic,\n                        isAdmit: v.stmt.isAdmit\n                    },\n                    stack: undefined\n                }); }));\n                fakeAutomat.getAlphabet().forEach(function (value) {\n                    if (value !== fakeAutomat.epsId) {\n                        var to = nextStepPositions(head, value);\n                        var wasPushed_1 = [];\n                        var __to = to.map(function (v) {\n                            if (wasPushed_1.includes(v.stmt.idLogic)) {\n                                return { stmt: { id: -100, idLogic: -100, isAdmit: false }, stack: undefined };\n                            }\n                            wasPushed_1.push(v.stmt.idLogic);\n                            return ({\n                                stmt: {\n                                    id: v.stmt.id,\n                                    idLogic: v.stmt.idLogic,\n                                    isAdmit: v.stmt.isAdmit\n                                },\n                                stack: undefined\n                            });\n                        });\n                        var _to = __to.filter(function (v) { return (v === null || v === void 0 ? void 0 : v.stmt.idLogic) !== -100; });\n                        acc.push(_to);\n                        if (to.length > 0 && !set.has(to) && !set.has(_to)) {\n                            push(_to);\n                        }\n                    }\n                });\n                table.push(acc);\n                console.log('OOOOOOOOOO');\n                stack.forEach(function (v) { return v.forEach(function (vv) { return console.log(vv); }); });\n                console.log('LLLL');\n                set.getStorage().forEach(function (v) { return v.forEach(function (vv) { return console.log(vv); }); });\n                console.log('LLLL');\n                console.log();\n            };\n            while (stack.length > 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n            var _edges = [];\n            table.forEach(function (ps, from) {\n                fakeAutomat.getAlphabet().forEach(function (tr, letter) {\n                    if (tr !== fakeAutomat.epsId && ps[tr].length !== 0) {\n                        _edges.push({\n                            from: from,\n                            to: set.getIter(ps[tr]),\n                            transitions: new Set([[{ title: letter }]])\n                        });\n                    }\n                });\n            });\n            var nodes = set.getStorage().map(function (v) { return ({\n                id: set.getIter(v),\n                isAdmit: fakeAutomat.haveAdmitting(v)\n            }); });\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            var newEdges = [];\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                var j = i;\n                var _loop_2 = function () {\n                    var tmp = '';\n                    _edges[j].transitions.forEach(function (_) { return _.forEach(function (v) { return tmp = v.title; }); });\n                    acc.push({ title: tmp });\n                    j++;\n                };\n                while (j < _edges.length && _edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                    _loop_2();\n                }\n                i = j - 1;\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n            }\n            return { nodes: nodes, edges: edges };\n        };\n        _this.step = _this.enfaStep;\n        _this.run = _this.enfaRun;\n        return _this;\n    }\n    return EpsilonNFA;\n}(PDA_1.PDA));\nexports.EpsilonNFA = EpsilonNFA;\n// let nfa = new EpsilonNFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             // {from: 0, to: 0, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: EPS}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 2, to: 3, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 3, to: 4, transitions: new Set([ [{title: \"a\"}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: EPS}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}, {id: 3, isAdmit: false}], ['a', 'a'],\n// )\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.nfaToDfa()\n//\n// let nfa = new EpsilonNFA(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             {id: 5, isAdmit: false},\n//             {id: 6, isAdmit: false},\n//             {id: 7, isAdmit: false},\n//             {id: 8, isAdmit: false},\n//             {id: 9, isAdmit: false},\n//             {id: 10, isAdmit: false},\n//             {id: 11, isAdmit: false},\n//             {id: 12, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\n//\n//\n//\n//\n//\n//\n//             //\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\n//             //\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\n//         ]\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nexports.__esModule = true;\n"],"sourceRoot":""}