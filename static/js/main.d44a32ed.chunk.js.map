{"version":3,"sources":["Logic/Mealy.js","Logic/Moore.js","Logic/OutputAutomata.js","Logic/DFA.js","Logic/NFA.js","Logic/TM.js","Logic/DPDA.js","Logic/DMealy.js","Logic/DMoore.js","Logic/Computer.js","Logic/Stack.js","react-graph-vis-types.js","Components/ControlWrapper/ControlWrapper.tsx","Components/NodeControl/NodeControl.tsx","utils.tsx","hoc.tsx","Components/EdgeControl/EdgeControl.tsx","Components/RunControl/History.tsx","Components/RunControl/RunControl.tsx","SavesManager/BrowserSavesManager.ts","Api/apiBase.ts","Api/getSaves.ts","Api/save.ts","Api/getSave.ts","SavesManager/CloudSavesManager.ts","Components/WelcomePopout/WelcomePopout.tsx","Components/SavingPopout/SavingPopout.tsx","Components/Pages/LoginPage/GoogleOAuthButton/GoogleOAuthButton.tsx","Components/Pages/LoginPage/LoginPage.tsx","Components/Pages/PingPage/PingPage.tsx","Api/pingApi.ts","Components/Pages/FailedLoginPage/FailedLoginPage.tsx","Components/AppHeader/AppHeader.tsx","Api/obtainAuth.ts","Components/Pages/SuccessLoginPage/SuccessLoginPage.tsx","VisNetwork.tsx","ErrorModal.tsx","TreeHistory.tsx","App.tsx","index.tsx","Logic/IGraphTypes.js","Logic/Exceptions.js","Logic/PDA.js","Logic/EpsilonNFA.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","exports","__esModule","Mealy","_super","graph","startStatements","input","_this","call","mealyToMoore","outs","Map","edges","forEach","edge","transitions","_","transition","out","output","has","set","size","_nodesOuts","counter","nodes","reduce","acc","node","filter","to","id","tmp","push","undefined","outIndex","get","isAdmit","v","length","nodesOuts","_edges","vs","index","from","console","log","Set","title","sort","a","i","delta","j","starts","map","stmt","graphcore","start","curNodeOuts","step","oaStep","run","oaRun","require","OutputAutomata","Moore","restart","counterSteps","historiStep","curPosition","value","statements","mooreToMealy","mapNodes","mealyEdges","tmpTransitions","tmpTransiton","_a","add","statement","__assign","assign","t","s","n","arguments","apply","Computer_1","haveEpsilon","alphabet","EPS","historiRun","counterStepsForResult","ref","after","_step","history","haveAdmitting","toNodes","nextStepPosition","position","by","cellMatrix","idLogic","ret","k","getLetter","cur","nextStepPositions","positions","nextPOs","pos","po","outputs","Error","byLetter","trNum","nextPositions","nodesOfCurPos","setInput","key","matrix","value1","isDeterministic","line","cells","fstCell","hasDublicates","stackDown","retNodes","temp","stack","getStorage","Computer","EpsilonNFA_1","Exceptions_1","DFA","startStatement","NonDeterministic","enfaStep","enfaRun","EpsilonNFA","NFA","IGraphTypes_1","PDA_1","TMMemory","storage","pointer","getPointer","reset","lookUp","initialize","init","mvRight","curr","upd","mvLeft","tmp_1","TM","mem","__step","tr","histori","move","Move","R","stackPush","L","assignCurMt","memory","mtTrun","mtStep","checkMemFormat","isMtMem","value2","_b","curMt","newPos","stPush0","stPush1","PDA","nfa","DPDA","byEmpty","pdaStep","pdaRun","DMealy","DMoore","eof","BOTTOM","byEmptyStackAdmt","isAdmt","nfaToDfa","minimizeDfa","getCurrNode","currentNode","getStartStatements","localValue","_loop_1","this_1","getAlphabetFromEdges","getStatementsFromNodes","createMatrix","alphabetSet","i_1","statementFrom","statementTo","letterId","stDwn","stPsh","mv","Stack","capacity","Infinity","item","pop","peek","list","cpyTo","ControlWrapper","_this$props","props","visible","style","className","children","restProps","objectWithoutProperties","_excluded","react_default","createElement","Paper","concat","variant","Typography","React","Component","defaultProps","NodeControl","_this$props$node","_this$props$node2","_this$props$node3","_this$props$node4","classCallCheck","onLabelChange","event","changeNodeLabel","target","setState","label","onIsAdmitChanged","changeStateIsAdmit","checked","reinitComputer","onIsInitialChanged","changeStateIsInitial","isInitial","onDeleteClick","deleteNode","state","prevNodeId","prevProps","prevState","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_this$props$node9","Components_ControlWrapper_ControlWrapper","FormControl","TextField","onChange","FormControlLabel","control","Switch","Button","onClick","epsSubstStr","epsText","epsSubstStrs","values","join","mvStr","transitionsToLabel","frmt","maxLength","max","phs","Math","toConsumableArray","o","ttl","std","spc","epsSubst","epsSubsts","str","getTransitionsTitles","decorateGraph","elements","update","lableTokens","split","x","border","background","isCurrent","borderWidth","color","highlight","borderWidthSelected","graphToElements","DataSet","elementsToGraph","computersInfo","dfa","name","description","preview","defaultGraph","y","nfa-eps","pda","dpda","tm","mealy","dmealy","moore","dmoore","getCookie","_parts$pop","parts","document","cookie","shift","withComputerType","ComputerTypeContext","Consumer","context","computerType","EdgeControl","_this$props$edge","_this$props$edge2","_this$props$edge3","_this$props$edge4","selectTransition","activeTransition","changeTransitions","_ref","asyncToGenerator","regenerator_default","mark","_callee","accumulator","wrap","_context","prev","next","transitionsText","fth","fst","trd","bebra","reverse","snd","_value$trd","changeEdgeTransitions","stop","_x","deleteEdge","_callee2","_context2","changeEditMode","editMode","updateTransitions","_callee3","_context3","_value$trd2","deleteTransition","delete","prevEdgeId","displayedTransitionText","countRules","rules","_this$props$edge5","_this$props$edge6","_this$props$edge7","_this$props$edge8","newRow","multiline","rows","helperText","onBlur","Edit_default","History","startNode","Tooltip","historyEndRef","creatButtons","buttons","buttonsComp","button","RunControl","createRef","computerShouldBeUpdated","current","some","isEqual","getComputer","initialNode","e","byEmptyStack","initializeComputer","warn","gElements","resetHistTree","computer","result","find","createHistNode","getLastHistNodeId","idd","elem","lastHistUnits","onInputChanged","_this$state$computer","treeNonDet","byEpsPred","byEpsAfter","l","includes","rule","createHistEdge","tmp1","tmp2","treeDet","byLetterRules","setResettedStatus","wasRuned","currentInputIndex","stepResult","changeStateIsCurrent","updMem","nodeCore","_nodes","_this$historyEndRef","_this$historyEndRef$c","setHistory","History_History","scrollIntoView","behavior","setIsNonDetermenistic","error","_this$state$computer2","_this$state$computer3","histTrace","abrupt","histStep","it","toString","updateElements","setComputerType","admitByStack","curStbyEmp","setByEmptyStack","miniDFA","NonMinimizable","setIsNonMinimizable","defaultButtonsLine","defaultButtons","buttonsTree","treeContextInfo","treeVisible","buttonsNoRun","getButtons","_this2","setInit","haveEmpty","setNfaToDfa","setMinimizeDfa","setMooreToMealy","setMealyToMoore","setChangerByStack","setRun","setStep","setReset","snapshot","_this3","char","Done_default","Close_default","BrowserSavesManager","saves","getSaves","Promise","resolve","saveMeta","save","type","localStorage","next_id","save_index","findIndex","user_id","saves_json","JSON","stringify","setItem","parse","getItem","BASE_URL","URL","process","AUTH_PORT","PING_PORT","SAVES_PORT","getAuthHeaders","headers","Headers","getParams","method","onAuthFailed","reject","url","port","pathname","params","fetch","href","then","response","status","ok","statusText","json","catch","request","body","postParams","getSave","CloudSavesManager","sent","t0","serialized_save","apiSave","WelcomePopout","open","onClose","changeComputerType","browserSavesManager","cloudSavesManager","onCloudSaveOpenClicked","_ref2","onBrowserSaveOpenClicked","_ref3","_x2","updateCloudSavesMeta","_ref4","savesMeta","setLoadingCloudSavesMeta","getSavesMeta","setCloudSavesMeta","updateBrowserSavesMeta","_ref5","_callee4","_context4","setBrowserSavesMeta","_useState","useState","_useState2","slicedToArray","cloudSavesMeta","_useState3","_useState4","browserSavesMeta","_useState5","_useState6","loadingCloudSavesMeta","useEffect","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","List","dense","ListSubheader","Skeleton","animation","height","ListItem","secondaryAction","ListItemText","entries","entry","primary","secondary","IconButton","GitHub_default","SavingPopout","isLogin","updateNames","setLoadingSavesMeta","savesOrigin","setSavesMeta","setSavesOrigin","_useState7","_useState8","_useState9","_useState10","loadingSavesMeta","_useState11","_useState12","saveName","setSaveName","ToggleButtonGroup","orientation","exclusive","ToggleButton","disabled","disablePadding","ListItemButton","onSaveNameClicked","DialogActions","GoogleOAuthButton","characters","charactersLength","charAt","floor","random","getRandomString","auth_url","objectSpread2","action","src","alt","aria-hidden","LoginPage","objectDestructuringEmpty","LoginPage_GoogleOAuthButton_GoogleOAuthButton","PingPage","pong","setPong","ping","text","FailedLoginPage","react_router_dom","AppHeader","onMenuButtonClicked","onSaveButtonClicked","onLogoutButtonClicked","useHistory","AppBar","Toolbar","obtainAuth","SuccessLoginPage","onAuthSuccess","updateAuth","VisNetwork","useRef","domNode","smooth","enabled","roundness","width","arrows","scaleFactor","manipulation","addEdge","data","callback","setKeyPressed","network","disableEditMode","layout","improvedLayout","shapeProperties","interpolation","shape","font","labelHighlightBold","physics","options","_React$useState","_React$useState2","contextMenu","setContextMenu","handleContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","handleClose","keyPressed","handleUserKeyPress","useCallback","keyCode","addEdgeMode","handleUserKeyUnPress","content","end","window","addEventListener","removeEventListener","useLayoutEffect","Network","on","onDoubleClick","onClick1","onClick2","onClick3","onClick4","unselectAll","refContainer","onContextMenu","Menu","anchorReference","anchorPosition","top","left","transform","bgcolor","boxShadow","NonDetermenisticModal","setOpen","isNonDetermenistic","react","Modal","aria-labelledby","aria-describedby","Box","sx","component","mt","NonMinimizableModal","_React$useState3","_React$useState4","isNonMinimizable","TreeHistory","interaction","keyboard","dragNodes","hierarchical","treeSpacing","direction","parentCentralization","sortMethod","shakeTowards","createContext","computerAction","controlAction","changerByStack","Ribbon","_props$mem","memRef","wasComputerResetted","_memRef$current","ptr","abs","App","networkTST","errIsNonDetermenistic","errIsNonMinimizable","lastNodeId","subscribeToShortcuts","ctrlKey","openSavePopout","savePopoutOpen","closeSavePopout","openWelcomePopout","welcomePopoutOpen","closeWelcomePopout","login","logout","changePopout","popout","updateGraph","ids","createNode","canvas","lastHistNodeId","treeElems","remove","selectNode","nodesIDs","selectedNodes","selectedNode","deselectNode","rmEdges","selectEdge","edgesIDs","selectedEdges","selectedEdge","deselectEdge","changeEdgeTransition","NFAContextMenu","showTree","DFAContextMenu","MealyContextMenu","MooreContextMenu","PDAContextMenu","AnotherContextMenu","ContextMenu","inEdgeMode","widthConstraint","heightConstraint","initiallyStabilized","react_router","path","Pages_LoginPage_LoginPage","Pages_PingPage_PingPage","Pages_FailedLoginPage_FailedLoginPage","Pages_SuccessLoginPage_SuccessLoginPage","Provider","Components_WelcomePopout_WelcomePopout","Components_SavingPopout_SavingPopout","ErrorModal_NonDetermenisticModal","ErrorModal_NonMinimizableModal","App_Ribbon","Components_AppHeader_AppHeader","VisNetwork_VisNetwork","TreeHistory_TreeHistory","Components_NodeControl_NodeControl","Components_EdgeControl_EdgeControl","Components_RunControl_RunControl","f","jsx","ReactDOM","render","StrictMode","src_App_0","getElementById","Stack_1","lodash_1","epsId","admitByEmptyStack","treeHist","tree","histUnit","last","unitHsit","newPosSet","updCurPos","epsStep","pPos","epsilonStep","rmRepeations","htable","letterStep","_nextStepPositions","ps","table","ImSet","startPos","head","afterEps","EPStack","flatted","_to","letter","getIter","startId","_getJump","zero","first","second","element","number","byEveryLetter","accLine","groups","group","cutBy","cell","createTableT","getJump","updateGroups","jmpGrp","newGrp","newNumber","toRm","splice","_updateGroups","toPositions","g","cycleEps","copyPushList","cpy","pushReverse","pushVals","pushTopToNewStack0","newStack","permute0","permutation","r","cloneDeep","_tmp","dwn","_detour","lvl","permute","slice","c","fill","rmRepetitions","hash","curLId","stack0","visited","permutes","cycle","idx","newCycleStack","matchPushEpsVal","matchDownEpsVal","hist","endsOfEpsWay","dfs","transformedInput","Queue","enqueue","dequeue","normalize","_v","getItter","myForEach","getNth","iter","aa"],"mappings":"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","file":"static/js/main.d44a32ed.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Mealy = /** @class */ (function (_super) {\n    __extends(Mealy, _super);\n    function Mealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.mealyToMoore = function () {\n            var outs = new Map();\n            _this.edges.forEach(function (edge) {\n                edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    var out = transition.output;\n                    if (!outs.has(out)) {\n                        outs.set(out, outs.size);\n                    }\n                }); });\n            });\n            var nodesOuts = function () {\n                var counter = 0;\n                return _this.nodes.reduce(function (acc, node) {\n                    var edges = _this.edges.filter(function (edge) { return edge.to === node.id; });\n                    var tmp = [];\n                    outs.forEach(function () { return tmp.push(undefined); });\n                    edges.forEach(function (edge) {\n                        edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                            var out = transition.output;\n                            var outIndex = outs.get(out);\n                            if (!tmp[outIndex]) {\n                                tmp[outIndex] = {\n                                    id: counter,\n                                    isAdmit: node.isAdmit,\n                                    output: out\n                                };\n                                counter++;\n                            }\n                        }); });\n                    });\n                    if (tmp.filter(function (v) { return v !== undefined; }).length === 0) {\n                        tmp[0] = {\n                            id: counter,\n                            isAdmit: node.isAdmit,\n                            output: \"~\"\n                        };\n                        counter++;\n                    }\n                    acc.push(tmp);\n                    return acc;\n                }, []);\n            };\n            var _nodesOuts = nodesOuts();\n            var _edges = _nodesOuts.reduce(function (acc, vs, index) {\n                var edges = _this.edges.filter(function (edge) { return edge.from === _this.nodes[index].id; });\n                edges.forEach(function (edge) { return edge.transitions.forEach(function (_) { return _.forEach(function (transition) {\n                    vs.forEach(function (v) {\n                        console.log(v);\n                        if (v !== undefined) {\n                            acc.push({\n                                from: v.id,\n                                to: _nodesOuts[edge.to][outs.get(transition.output)].id,\n                                transitions: new Set([[{ title: transition.title }]])\n                            });\n                        }\n                    });\n                }); }); });\n                return acc;\n            }, []);\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                for (var j = i; j < _edges.length; j++) {\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\n                        delta++;\n                    }\n                }\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n                i += delta - 1;\n            }\n            var starts = _this.startStatements.map(function (stmt) { return stmt.id; });\n            var nodes = _nodesOuts.reduce(function (acc, vs, index) {\n                vs.forEach(function (v) {\n                    if (v) {\n                        acc.push(v);\n                    }\n                });\n                return acc;\n            }, []);\n            var start = starts.reduce(function (acc, id) {\n                var curNodeOuts = _nodesOuts[id].filter(function (v) {\n                    if (v !== undefined) {\n                        return v;\n                    }\n                });\n                acc.push(curNodeOuts[0]);\n                return acc;\n            }, []);\n            return {\n                graphcore: { edges: edges, nodes: nodes },\n                start: start\n            };\n        };\n        _this.step = _this.oaStep;\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Mealy;\n}(OutputAutomata_1.OutputAutomata));\nexports.Mealy = Mealy;\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.isDeterministic())\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//             { id: 4, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 2, to: 4, transitions: new Set([[{ title: 'a', output: '1' }, { title: 'b', output: '1' }]]) },\n//             // { from: 2, to: 2, transitions: new Set([[{ title: 'b', output: '0' }]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: 'a', output: '1' }]]) },\n//             { from: 4, to: 1, transitions: new Set([[{ title: 'b', output: '1' }]]) },\n//             { from: 4, to:3, transitions: new Set([[{ title: 'a', output: '0' }]]) },\n//         ]\n//     }, [{ id: 1, isAdmit: false }], [])\n// console.log(nfa.mealyToMoore().graphcore.edges)\n// let nfa = new Mealy(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.mealyToMoore()\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar OutputAutomata_1 = require(\"./OutputAutomata\");\nvar Moore = /** @class */ (function (_super) {\n    __extends(Moore, _super);\n    function Moore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.mooreToMealy = function () {\n            var mapNodes = new Map();\n            _this.nodes.forEach(function (node) { return mapNodes.set(node.id, { id: node.id, isAdmit: node.isAdmit, output: node.output }); });\n            var mealyEdges = _this.edges.map(function (edge) {\n                var tmpTransitions = new Set();\n                var tmpTransiton = [];\n                edge.transitions.forEach(function (v) { return v.forEach(function (transition) {\n                    var _a;\n                    tmpTransiton.push({ title: transition.title, output: (_a = mapNodes.get(edge.to)) === null || _a === void 0 ? void 0 : _a.output });\n                }); });\n                tmpTransitions.add(tmpTransiton);\n                return { from: edge.from, to: edge.to, transitions: tmpTransitions };\n            });\n            console.log('>>>>', _this.startStatements);\n            return {\n                graphcore: { edges: mealyEdges, nodes: _this.nodes.map(function (node) { return ({ id: node.id, isAdmit: node.isAdmit }); }) },\n                start: _this.startStatements.map(function (statement) { return ({ id: statement.id, isAdmit: statement.isAdmit }); })\n            };\n        };\n        _this.step = _this.oaStep;\n        // (): Step => {\n        //     if (!super.isDeterministic()) {\n        //         throw new NonDeterministic()\n        //     }\n        //     return this.oaRun()\n        // }\n        _this.run = _this.oaRun;\n        return _this;\n    }\n    return Moore;\n}(OutputAutomata_1.OutputAutomata));\nexports.Moore = Moore;\n// let nfa = new Moore(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: 'b' },\n//             { id: 1, isAdmit: false, output: 'b' },\n//             // { id: 2, isAdmit: false, output: 'a' },\n//             // { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             // { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//             { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             { from: 0, to: 0, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n//             // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n//             // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"0\"])\n// // console.log(nfa.run())\n// // console.log(nfa.mooreToMealy().start)\n// // edges.forEach(v => console.log(v.from, v.to, v.transitions))\n// console.log(nfa.run())\n// // const conv = nfa.moorToMealy()\n// // conv.graphcore.edges.forEach(edge => {\n// //     console.log(edge.from)\n// //     console.log(edge.to)\n// //     console.log(edge.transitions)\n// // })\n// // conv.graphcore.nodes.forEach(node => {\n// //     console.log(node)\n// // })\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar OutputAutomata = /** @class */ (function (_super) {\n    __extends(OutputAutomata, _super);\n    function OutputAutomata(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        // isDeterministic(): boolean {\n        //     const ret = this.matrix.reduce((acc: boolean, line) =>\n        //         acc && line.reduce((_: boolean, cell) =>\n        //             cell.reduce((accCell: boolean, stmt, index) => {\n        //                 if (index !== 0) {\n        //                     if (stmt.stackDown !== undefined) {\n        //                         return accCell && !(stmt.stackDown === cell[0].stackDown)\n        //                     }\n        //                     if (stmt.stackDown === undefined) {\n        //                         return accCell && false\n        //                     }\n        //                 }\n        //                 return accCell\n        //             }\n        //                 , acc),\n        //             acc),\n        //         true)\n        //     return ret \n        // }\n        _this.haveEpsilon = function () { return _this.alphabet.get(Computer_1.EPS) !== undefined; };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.startStatements.forEach(function (value) {\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id)\n                });\n            });\n        };\n        _this.oaRun = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var output;\n            for (var i = 0; i < _this.input.length; i++) {\n                var ref = {\n                    counterSteps: _this.counterStepsForResult,\n                    curPosition: _this.curPosition,\n                    historiStep: _this.historiRun\n                };\n                var after = _this._step(ref);\n                _this.counterStepsForResult = ref.counterSteps;\n                _this.curPosition = ref.curPosition;\n                _this.historiRun = ref.historiStep;\n                output = after.output;\n            }\n            return {\n                counter: _this.counterStepsForResult,\n                history: _this.historiRun,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                nodes: _this.toNodes(_this.curPosition),\n                output: output\n            };\n        };\n        _this.nextStepPosition = function (position, by) {\n            return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) {\n                var getLetter = function (id) {\n                    var ret;\n                    _this.alphabet.forEach(function (v, k) {\n                        if (id === v) {\n                            ret = k;\n                        }\n                    });\n                    return ret;\n                };\n                var ret = {\n                    stmt: v,\n                    by: getLetter(by),\n                    cur: _this.nodes[v.idLogic],\n                    from: _this.nodes[position.stmt.idLogic]\n                };\n                // return ({ position: { stmt: v }, output: v.output })\n                return ({ position: ret, output: v.output });\n            });\n        };\n        _this.nextStepPositions = function (positions, by) {\n            var nextPOs = positions.map(function (v) { return _this.nextStepPosition(v, by); });\n            var nextPs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) { return acc.push(po.position); });\n                return acc;\n            }, []);\n            var nextOs = nextPOs.reduce(function (acc, pos) {\n                pos.forEach(function (po) {\n                    if (po.output === undefined) {\n                        throw new Error(\"Output undefinded\");\n                    }\n                    acc.push(po.output);\n                });\n                return acc;\n            }, []);\n            return { positions: nextPs, outputs: nextOs };\n        };\n        _this._step = function (ref) {\n            var _a;\n            var byLetter = [];\n            var trNum = _this.alphabet.get((_a = _this.input[ref.counterSteps]) === null || _a === void 0 ? void 0 : _a.value);\n            var nextPositions = _this.nextStepPositions(ref.curPosition, trNum);\n            ref.curPosition = nextPositions.positions;\n            var nodesOfCurPos = _this.toNodes(ref.curPosition);\n            nodesOfCurPos.forEach(function (node) { return byLetter.push(node); });\n            ref.historiStep.push({ nodes: nodesOfCurPos, by: trNum });\n            if (ref.curPosition.length > 0) {\n                ref.counterSteps++;\n            }\n            console.log('--->byLetter');\n            console.log(byLetter);\n            console.log('--->byLetter');\n            return {\n                counter: ref.counterSteps,\n                history: ref.historiStep,\n                isAdmit: _this.haveAdmitting(ref.curPosition),\n                nodes: nodesOfCurPos,\n                output: nextPositions.outputs,\n                byLetter: byLetter\n            };\n        };\n        _this.oaStep = function () {\n            var ref = {\n                counterSteps: _this.counterSteps,\n                curPosition: _this.curPosition,\n                historiStep: _this.historiStep\n            };\n            var after = _this._step(ref);\n            _this.counterSteps = ref.counterSteps;\n            _this.curPosition = ref.curPosition;\n            _this.historiStep = ref.historiStep;\n            return {\n                counter: after.counter,\n                history: after.history,\n                isAdmit: after.isAdmit,\n                nodes: after.nodes,\n                output: after.output,\n                byLetter: after.byLetter\n            };\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.curPosition = [];\n        startStatements.forEach(function (value) {\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id)\n            });\n        });\n        _this.setInput(input);\n        _this.counterSteps = 0;\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(_this.curPosition);\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        return _this;\n    }\n    OutputAutomata.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    OutputAutomata.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { from: value.from, cur: value.cur, by: value.by, stack: value.stack === undefined ? undefined : value.stack.getStorage() });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    OutputAutomata.prototype.haveAdmitting = function (positions) {\n        return positions.reduce(function (acc, p) { return acc && p.stmt.isAdmit; }, true);\n    };\n    return OutputAutomata;\n}(Computer_1.Computer));\nexports.OutputAutomata = OutputAutomata;\n// let nfa = new Moor(\n//     {\n//         nodes: [\n//             { id: 0, isAdmit: false, output: '0' },\n//             { id: 1, isAdmit: false, output: '1' },\n//             { id: 2, isAdmit: false, output: '2' },\n//             { id: 3, isAdmit: false, output: '3' },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 2, to: 3, transitions: new Set([[{ title: '10'}]]) },\n//             { from: 3, to: 3, transitions: new Set([[{ title: '5' }]]) },\n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"5\"])\n// console.log(nfa.run())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DFA = /** @class */ (function (_super) {\n    __extends(DFA, _super);\n    function DFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.enfaRun();\n        };\n        _this.setInput(input);\n        return _this;\n    }\n    return DFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.DFA = DFA;\nvar nfa = new DFA({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: true },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n        { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], []);\n// nfa.\n// let nfa = new DFA (\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: true},\n//\n//\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: true},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//             // {id: 0, isAdmit: false},\n//             // {id: 1, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//             // {id: 3, isAdmit: false},\n//             // {id: 4, isAdmit: true},\n//             // {id: 5, isAdmit: true},\n//             // {id: 6, isAdmit: false},\n//\n//\n//         ],\n//         edges: [\n//\n//             {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //youtube\n//             // {from: 1, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 3, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 4, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 2, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 6, to: 3, transitions: new Set([ [{title: 'b'}] ])},\n//\n//\n//             // {from: 0, to: 1, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 0, to: 3, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 1, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 2, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: '0'}, {title: '1'}] ])},\n//             // {from: 3, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             // {from: 3, to: 4, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 5, transitions: new Set([ [{title: '1'}] ])},\n//             // {from: 4, to: 2, transitions: new Set([ [{title: '0'}] ])},\n//\n//             //refference\n//             // {from: 0, to: 1, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 0, to: 2, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 1, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 1, to: 4, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 2, to: 3, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 2, to: 5, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 3, to: 3, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             // {from: 4, to: 4, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 4, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 5, to: 5, transitions: new Set([ [{title: 'a'}] ])},\n//             // {from: 5, to: 6, transitions: new Set([ [{title: 'b'}] ])},\n//             // {from: 6, to: 6, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//\n//         ]\n//     }, [{id: 1, isAdmit: false}], [],\n// )\n// console.log(nfa.minimizeDfa().start)\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar EpsilonNFA_1 = require(\"./EpsilonNFA\");\nvar NFA = /** @class */ (function (_super) {\n    __extends(NFA, _super);\n    function NFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        if (_this.haveEpsilon()) {\n            throw new Error('Epsilon Transitions');\n        }\n        return _this;\n    }\n    return NFA;\n}(EpsilonNFA_1.EpsilonNFA));\nexports.NFA = NFA;\n//\n// let nfa = new NFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 0, to: 0, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: '0'}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: '1'}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}], [],\n// )\n// nfa.nfaToDfa()\n// nfa.nfaToDfa().nodes.forEach((v) => console.log(v.id))\n// nfa.nfaToDfa().edges.forEach((v) => console.log(v.from, v.to))\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar IGraphTypes_1 = require(\"./IGraphTypes\");\nvar PDA_1 = require(\"./PDA\");\nvar Computer_1 = require(\"./Computer\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar TMMemory = /** @class */ (function () {\n    function TMMemory() {\n        this.storage = ['_'];\n        this.pointer = 0;\n    }\n    TMMemory.prototype.getPointer = function () {\n        return this.pointer;\n    };\n    TMMemory.prototype.reset = function () {\n        this.storage = ['_'];\n        this.pointer = 0;\n    };\n    TMMemory.prototype.lookUp = function () {\n        return this.storage[this.pointer];\n    };\n    TMMemory.prototype.initialize = function (init) {\n        var _this = this;\n        init.forEach(function (value) { return _this.mvRight('_', value); });\n        this.pointer = 0;\n    };\n    TMMemory.prototype.mvRight = function (curr, upd) {\n        if (this.storage[this.pointer] === curr) {\n            this.storage[this.pointer] = upd;\n            this.pointer++;\n        }\n        if (this.pointer === this.storage.length) {\n            this.storage.push('_');\n        }\n    };\n    TMMemory.prototype.mvLeft = function (curr, upd) {\n        if (this.pointer === 0) {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer = 0;\n            }\n            var tmp_1 = ['_'];\n            this.storage.forEach(function (value) { return tmp_1.push(value); });\n            this.storage = tmp_1;\n        }\n        else {\n            if (this.storage[this.pointer] === curr) {\n                this.storage[this.pointer] = upd;\n                this.pointer--;\n            }\n        }\n    };\n    TMMemory.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return TMMemory;\n}());\nexports.TMMemory = TMMemory;\nvar TM = /** @class */ (function (_super) {\n    __extends(TM, _super);\n    function TM(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.mem = new TMMemory();\n        _this.__step = function (counter, tr, histori) {\n            var by = \"\";\n            _this.cellMatrix(_this.curPosition[0].stmt.idLogic, tr).forEach(function (value) {\n                if (value.stackDown === _this.mem.lookUp()) {\n                    if (value.move === IGraphTypes_1.Move.R) {\n                        _this.mem.mvRight(value.stackDown, value.stackPush[0]);\n                        by = value.stackDown;\n                    }\n                    if (value.move === IGraphTypes_1.Move.L) {\n                        _this.mem.mvLeft(value.stackDown, value.stackPush[0]);\n                        by = value.stackDown;\n                    }\n                    _this.assignCurMt({ stmt: _this.statements.get(value.id) });\n                }\n            });\n            histori.push({\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                by: by\n                // this.input[counter].value\n            });\n            console.log(\"this.mem.getStorage()\");\n            console.log(_this.mem.getStorage());\n            counter++;\n            return {\n                nodes: [_this.nodes[_this.curPosition[0].stmt.idLogic]],\n                isAdmit: _this.curPosition[0].stmt.isAdmit,\n                counter: counter,\n                history: histori,\n                memory: _this.mem.getStorage(),\n                pointer: _this.mem.getPointer()\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.mem.reset();\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n        };\n        _this.mtTrun = function () {\n            throw Error(\"TM run\");\n        };\n        _this.setInput = function (input) {\n            _this.input = [];\n            // this.restart()\n            _this.mem.reset();\n            _this.mem.initialize(input);\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.curPosition = [{\n                    stmt: _this.statements.get(_this.startStatements[0].id)\n                }];\n            console.log(_this.curPosition);\n        };\n        _this.mtStep = function () {\n            console.log(\"STPMT\");\n            var ret = _this.__step(_this.counterSteps, 0, _this.historiStep);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            if (ret.history[ret.history.length - 1].by === \"\") {\n                ret.nodes = [];\n            }\n            return __assign(__assign({}, ret), { memory: _this.mem.getStorage() });\n        };\n        _this.step = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtStep();\n        };\n        _this.run = function () {\n            if (!_this.isDeterministic()) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.mtTrun();\n        };\n        _this.checkMemFormat(graph);\n        // if (!this.isDeterministic()) {\n        //     throw Error (\"Not deterministic\")\n        // }\n        _this.mem.initialize(input);\n        _this.curPosition = [{\n                stmt: _this.statements.get(_this.startStatements[0].id)\n            }];\n        console.log(\"MTMTMTMTMTTMMTMTMT::::::::::\");\n        return _this;\n    }\n    TM.prototype.checkMemFormat = function (graph) {\n        var isMtMem = true;\n        graph.edges.forEach(function (value) { return value.transitions.forEach(function (value1) {\n            value1.forEach(function (value2) {\n                var _a, _b;\n                if (((_a = value2.stackPush) === null || _a === void 0 ? void 0 : _a.length) && ((_b = value2.stackPush) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n                    isMtMem = false;\n                }\n            });\n        }); });\n        if (!isMtMem) {\n            throw Error(\"Not MT mem\");\n        }\n    };\n    TM.prototype.curMt = function () {\n        return this.curPosition[0];\n    };\n    TM.prototype.assignCurMt = function (newPos) {\n        this.curPosition[0] = newPos;\n    };\n    TM.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var isEquals = function (stPush0, stPush1) {\n                if (!stPush0 || !stPush1) {\n                    return false;\n                }\n                if (stPush0.length !== stPush1.length) {\n                    return false;\n                }\n                return stPush0.reduce(function (acc, v, index) { return acc && stPush0[index] === stPush1[index]; }, true);\n            };\n            var hasDublicates = cells.reduce(function (acc, stmt, index) {\n                return index !== 0 &&\n                    (acc || (stmt.stackDown === fstCell.stackDown && isEquals(stmt.stackPush, fstCell.stackPush)));\n            }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret;\n    };\n    return TM;\n}(PDA_1.PDA));\nexports.TM = TM;\nvar nfa = new TM({\n    nodes: [\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 1, to: 2, transitions: new Set([[{ title: Computer_1.EPS, stackDown: '0', stackPush: ['0'], move: IGraphTypes_1.Move.R }, { title: Computer_1.EPS, stackDown: '1', stackPush: ['1'], move: IGraphTypes_1.Move.R }]]) },\n    ]\n}, [{ id: 1, isAdmit: false }], ['1']);\nconsole.log(nfa.isDeterministic());\n// let nfa = new TM(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n//             { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n//             { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n//             { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n//             { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n//\n//             // { from: 1, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['V'], move: Move.R} ]]) },\n//             // { from: 2, to: 2, transitions: new Set([[ {title: EPS, stackDown: '_', stackPush: ['B'], move: Move.R} ]]) },\n//             // { from: 2, to: 1, transitions: new Set([[ { title: 'b', stackDown: 'b', stackPush: ['6'], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: 'с', stackPush: ['['], move: Move.R } ]]) },\n//             // { from: 3, to: 3, transitions: new Set([[ { title: 'c', stackDown: '_', stackPush: [']'], move: Move.R } ]]) },\n//\n//             // {from: 1, to: 1, transitions: new Set([{title: 'a', stackDown: 'a', stackPush: ['A'], move: Move.R}])},\n//             // {from: 1, to: 2, transitions: new Set([{title: 'c', stackDown: 'b', stackPush: ['V'], move: Move.R}])},\n//             // {from: 2, to: 2, transitions: new Set([{title: 'c', stackDown: '_', stackPush: ['V'], move: Move.R}])},\n//\n//\n//\n//         ]\n//     },  [{id: 1, isAdmit: false}], ['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.setInput(['1'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n// console.log(nfa.step())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar DPDA = /** @class */ (function (_super) {\n    __extends(DPDA, _super);\n    function DPDA(graph, startStatement, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatement, input, byEmpty) || this;\n        // step = this.pdaStep\n        // run = this.pdaRun\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaStep();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.pdaRun();\n        };\n        _this.setInput(input);\n        return _this;\n        // if (!super.isDeterministic()) {\n        //     throw new Error(\"Is not determenistic\")\n        // }\n    }\n    return DPDA;\n}(PDA_1.PDA));\nexports.DPDA = DPDA;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Mealy_1 = require(\"./Mealy\");\nvar DMealy = /** @class */ (function (_super) {\n    __extends(DMealy, _super);\n    function DMealy(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMealy;\n}(Mealy_1.Mealy));\nexports.DMealy = DMealy;\nvar nfa = new DMealy({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Exceptions_1 = require(\"./Exceptions\");\nvar Moore_1 = require(\"./Moore\");\nvar DMoore = /** @class */ (function (_super) {\n    __extends(DMoore, _super);\n    function DMoore(graph, startStatements, input) {\n        var _this = _super.call(this, graph, startStatements, input) || this;\n        _this.step = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        _this.run = function () {\n            if (!_super.prototype.isDeterministic.call(_this)) {\n                throw new Exceptions_1.NonDeterministic();\n            }\n            return _this.oaRun();\n        };\n        return _this;\n    }\n    return DMoore;\n}(Moore_1.Moore));\nexports.DMoore = DMoore;\nvar nfa = new DMoore({\n    nodes: [\n        { id: 0, isAdmit: false },\n        { id: 1, isAdmit: false },\n        { id: 2, isAdmit: false },\n    ],\n    edges: [\n        { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n        { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    ]\n}, [{ id: 0, isAdmit: false }], []);\nconsole.log(nfa.isDeterministic());\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.eof = { isAdmit: false, idLogic: -1, id: -1 };\nexports.EPS = 'Epsilon';\nexports.BOTTOM = \"Z0\";\nvar Computer = /** @class */ (function () {\n    function Computer(graph, startStatements) {\n        // this.setStartStatements(graph, startStatements)\n        var _this = this;\n        this.input = [];\n        this.alphabet = new Map();\n        this.statements = new Map();\n        this.startStatements = [];\n        this.edges = [];\n        this.counterSteps = 0;\n        this.counterStepsForResult = 0;\n        this.historiStep = [];\n        this.historiRun = [];\n        this.matrix = [];\n        this.byEmptyStackAdmt = function (isAdmt) {\n            throw new Error(\"PDA attribute\");\n        };\n        this.nfaToDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.minimizeDfa = function () {\n            throw new Error(\"DFA conversion\");\n        };\n        this.mooreToMealy = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.mealyToMoore = function () {\n            throw new Error(\"Moor conversion\");\n        };\n        this.getCurrNode = function () {\n            return _this.currentNode.id;\n        };\n        this.getStartStatements = function () {\n            return _this.startStatements;\n        };\n        graph.edges\n            .sort(function (a, b) { return a.from - b.from; })\n            .forEach(function (value) { return _this.edges.push({\n            transitions: value.transitions === undefined ? new Set([[{ title: \"\" }]]) : value.transitions,\n            from: value.from,\n            to: value.to,\n            localValue: []\n        }); });\n        var _loop_1 = function (i) {\n            this_1.edges[i].localValue = [];\n            this_1.edges[i].transitions.forEach(function (value) {\n                return value.forEach(function (value1) { return _this.edges[i].localValue.push(value1); });\n            }\n            //    this.edges[i].localValue!.push(value)\n            );\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.edges.length; i++) {\n            _loop_1(i);\n        }\n        this.getAlphabetFromEdges();\n        this.getStatementsFromNodes(graph.nodes);\n        this.startStatements = startStatements;\n        this.currentNode = startStatements[0];\n        this.nodes = graph.nodes;\n        this.createMatrix();\n    }\n    Computer.prototype.getAlphabetFromEdges = function () {\n        var _this = this;\n        var alphabetSet = new Set();\n        for (var i_1 = 0; i_1 < this.edges.length; i_1++) {\n            this.edges[i_1].localValue.forEach(function (value) {\n                if (value.title !== \"\") {\n                    alphabetSet.add(value.title);\n                }\n            });\n        }\n        var i = 0;\n        alphabetSet.forEach(function (value) {\n            if (value !== \"\") {\n                _this.alphabet.set(value, i);\n                i++;\n            }\n        });\n    };\n    Computer.prototype.getStatementsFromNodes = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.statements.set(nodes[i].id, {\n                id: nodes[i].id,\n                isAdmit: nodes[i].isAdmit,\n                idLogic: i,\n                output: nodes[i].output\n            });\n        }\n    };\n    Computer.prototype.createMatrix = function () {\n        for (var i = 0; i < this.statements.size; i++) {\n            this.matrix[i] = [];\n            for (var j = 0; j < this.alphabet.size; j++) {\n                this.matrix[i][j] = [];\n                //{idLogic: -1, id: -1, isAdmit: false, stackDown: \"empty\", stackPush: []}\n            }\n        }\n        for (var i = 0; i < this.edges.length; i++) {\n            var statementFrom = this.statements.get(this.edges[i].from);\n            var statementTo = this.statements.get(this.edges[i].to);\n            for (var j = 0; j < this.edges[i].localValue.length; j++) {\n                var letterId = this.alphabet.get(this.edges[i].localValue[j].title);\n                // if (letterId === undefined) {\n                //     throw new Error(\"A\")\n                // }\n                if (letterId === undefined) {\n                    continue;\n                }\n                console.log(letterId);\n                console.log(this.edges[i].localValue[j].title);\n                var stDwn = this.edges[i].localValue[j].stackDown;\n                var stPsh = this.edges[i].localValue[j].stackPush;\n                var mv = this.edges[i].localValue[j].move;\n                var output = this.edges[i].localValue[j].output === undefined ? statementTo.output : this.edges[i].localValue[j].output;\n                if (stDwn === undefined || stPsh === undefined || stDwn === \"\" || stPsh.length === 0) {\n                    stDwn = exports.EPS;\n                    stPsh = [exports.EPS];\n                }\n                // console.log(statementTo.move)\n                this.matrix[statementFrom.idLogic][letterId].push(__assign(__assign({}, statementTo), { stackDown: stDwn, stackPush: stPsh, move: mv, output: output }));\n            }\n        }\n        this.alphabet.forEach(function (value, key) { return console.log(value, ' ', key); });\n        this.statements.forEach(function (value) { return console.log(value); });\n        this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n    };\n    Computer.prototype.cellMatrix = function (i, j) {\n        return this.matrix[i][j];\n    };\n    return Computer;\n}());\nexports.Computer = Computer;\n","\"use strict\";\nexports.__esModule = true;\nvar Stack = /** @class */ (function () {\n    function Stack(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Stack.prototype.push = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Stack has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Stack.prototype.pop = function () {\n        return this.storage.pop();\n    };\n    Stack.prototype.peek = function () {\n        return this.storage[this.size() - 1];\n    };\n    Stack.prototype.size = function () {\n        return this.storage.length;\n    };\n    Stack.prototype.getStorage = function () {\n        var list = [];\n        this.storage.forEach(function (value) { return list.push(value); });\n        return list;\n    };\n    Stack.prototype.cpyTo = function (stack) {\n        this.storage.forEach(function (value) { return stack.push(value); });\n        return stack;\n    };\n    return Stack;\n}());\nexports.Stack = Stack;\n","\"use strict\";\nexports.__esModule = true;\n","import React, {AllHTMLAttributes} from \"react\";\nimport \"./ControlWrapper.css\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ControlWrapperProps extends AllHTMLAttributes<HTMLElement> {\n    title: string,\n    visible: boolean\n}\n\nclass ControlWrapper extends React.Component<ControlWrapperProps, {}> {\n    static defaultProps = {\n        visible: true\n    }\n\n    render() {\n        const {visible, title, style, className, children, ...restProps} = this.props;\n\n        return (\n            <Paper className={`control-wrapper${visible ? \"\" : \"--hidden\"} ${className}`}\n                   variant=\"outlined\"\n                   style={style}\n                   {...restProps}\n            >\n                <div className=\"control-wrapper--content\">\n                    <div>\n                        <Typography variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </div>\n\n                    <div className=\"control-wrapper--child\">\n                        {children}\n                    </div>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default ControlWrapper;","import React, { ChangeEvent } from \"react\";\nimport \"./NodeControl.css\";\nimport { node } from \"../../react-graph-vis-types\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\n\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\ninterface nodeControlProps {\n    node: node | null,\n    changeNodeLabel: (id: number, label: string) => void,\n    changeStateIsAdmit: (id: number, isAdmit: boolean) => void,\n    changeStateIsInitial: (id: number, isInitial: boolean) => void,\n    deleteNode: (id: number) => void,\n    reinitComputer: (() => void)\n}\n\ninterface nodeControlState {\n    prevNodeId: number | undefined,\n    label: string,\n    isAdmit: boolean,\n    isInitial: boolean\n}\n\nclass NodeControl extends React.Component<nodeControlProps, nodeControlState> {\n    constructor(props: nodeControlProps) {\n        super(props);\n\n        this.state = {\n            prevNodeId: this.props.node?.id,\n            label: this.props.node?.label || \"\",\n            isAdmit: this.props.node?.isAdmit || false,\n            isInitial: this.props.node?.isInitial || false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<nodeControlProps>, prevState: Readonly<nodeControlState>) {\n        if (this.props.node?.id !== prevState.prevNodeId) {\n            this.setState({\n                label: this.props.node?.label || \"\",\n                    // + ((\" | \" + this.props.node?.output || \"\")) \n                    \n                isAdmit: this.props.node?.isAdmit || false,\n                isInitial: this.props.node?.isInitial || false,\n                prevNodeId: this.props.node?.id\n            });\n        }\n    }\n\n    onLabelChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeNodeLabel(this.props.node.id, event.target.value);\n            this.setState({ label: event.target.value });\n        }\n    }\n\n    onIsAdmitChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null) {\n            this.props.changeStateIsAdmit(this.props.node.id, event.target.checked);\n            this.setState({ isAdmit: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onIsInitialChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.node !== null && !this.props.node.isAdmit) {\n            this.props.changeStateIsInitial(this.props.node.id, event.target.checked);\n            this.setState({ isInitial: event.target.checked }, () => this.props.reinitComputer());\n        }\n    }\n\n    onDeleteClick = (): void => {\n        if (this.props.node !== null) {\n            this.props.deleteNode(this.props.node.id);\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title=\"Состояние\" visible={this.props.node !== null}>\n                <FormControl>\n\n                    <div className=\"node-control__item\">\n                        <TextField\n                            label=\"Имя\"\n                            size=\"small\"\n                            value={this.state.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isInitial}\n                                    onChange={this.onIsInitialChanged}\n                                />\n                            }\n                            label={\"Начальное\"}\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.isAdmit}\n                                    onChange={this.onIsAdmitChanged}\n                                />\n                            }\n                            label=\"Допускающее\"\n                        />\n                    </div>\n\n                    <div className=\"node-control__item\">\n                        <Button\n                            onClick={this.onDeleteClick}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </FormControl>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default NodeControl;","import {ComputerInfo, ComputerType, edge, graph, node} from \"./react-graph-vis-types\";\nimport {EPS} from \"./Logic/Computer\";\nimport {Move, TransitionParams} from \"./Logic/IGraphTypes\";\nimport { Elements } from \"./App\";\nimport { DataSet } from \"vis-network/standalone/esm/vis-network\";\nimport { Output } from \"./Logic/Types\";\n\n\nconst epsSubstStr = (epsText: string) => (value: string) => value === EPS ? epsText : value\n\nconst epsSubstStrs = (epsText: string) => (values: string[]) => {\n    return values.map(v =>  epsSubstStr(epsText)(v)).join(\":\")\n}\n\nconst mvStr = (value: Move) => value === 0 ? \"L\" : \"R\"\n\nexport const transitionsToLabel = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType ): string => {\n    const maxLength = (): number => {\n        let max: number = 0;\n        if (transitions !== undefined) {\n            transitions.forEach(value => {\n                value.forEach(value1 => {\n                    if (value1.stackDown !== undefined && value1.stackPush !== undefined) {\n                        const phs: number = Math.max(...value1.stackPush.map(o => o === EPS ? 0 : o.length), 0)\n                        const ttl: number = value1.title === EPS ? 0 : value1.title.length\n                        const std: number = value1.stackDown === EPS ? 0 : value1.stackDown.length\n                        max = Math.max(...[phs, ttl, std, max].map(o => o), 0)\n                    }\n                })\n            })\n        }\n        return max\n    }\n\n    let spc = \"\"\n    const pdng_k = 7\n\n    for (let i = 0; i < maxLength() * pdng_k ; i++) {\n        spc += \" \"\n    }\n\n    const epsSubst = epsSubstStr(\"ε\")\n    const epsSubsts = epsSubstStrs(\"ε\")\n\n    spc = frmt === 'tm' ? '       ' : spc\n\n    let str = \"\" + spc\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + mvStr(v.move) + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === 'pda' || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \" \" + \"\\n\" + spc\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \"\\n\" + spc\n                    }\n                })\n            })\n        }\n    }\n    return str\n}\n\n\nexport const getTransitionsTitles = (transitions: Set<TransitionParams[]>, frmt: null | ComputerType): string => {\n    const epsSubst = epsSubstStr(\"eps\")\n    const epsSubsts = epsSubstStrs(\"eps\")\n\n    let str = \"\"\n    if (transitions !== undefined) {\n        if (frmt === 'tm') {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.stackDown !== undefined && v.stackPush !== undefined && v.move !== undefined) {\n                        str += epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + '>' + mvStr(v.move) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"pda\" || frmt === \"dpda\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.stackDown !== undefined && v.stackDown.length > 0 && v.stackPush !== undefined && v.stackPush.length > 0) {\n                        str += epsSubst(v.title) + \", \" + epsSubst(v.stackDown) + \" | \" + epsSubsts(v.stackPush) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"dfa\" || frmt === \"nfa\" || frmt === \"nfa-eps\" || frmt === \"moore\" || frmt === \"dmoore\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0) {\n                        str += epsSubst(v.title) + \";\\n\"\n                    }\n                })\n            })\n        } else if (frmt === \"mealy\" || frmt === \"dmealy\") {\n            transitions.forEach(value => {\n                value.forEach((v) => {\n                    if (v.title !== undefined && v.title.length > 0 && v.output !== undefined) {\n                        str += epsSubst(v.title) + \" | \" + v.output + \";\\n\"\n                    }\n                })\n            })\n        }\n    }\n\n    return str\n}\n\nexport const decorateGraph = (elements: Elements, frmt: null | ComputerType) => {\n    elements.edges.forEach((edge) => {\n        elements.edges.update({\n            id: edge.id!,\n            label: transitionsToLabel(edge.transitions, frmt)\n        })\n    })\n\n    elements.nodes.forEach((node) => {\n        const lableTokens =\n            node.label\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split('|')\n        const output = lableTokens[1] !== undefined ? lableTokens[1] : undefined \n        node.output = output \n\n        const border = node.isInitial ? \"#0041d0\" : node.isAdmit ? \"#ff0072\" : \"#000000\"\n        const background = node.isCurrent ? \"#ffff55\" : \"#ffffff\";\n        const borderWidth = {\n            default: 1.5,\n            primary: 2,\n            highlight: 4\n        };\n\n        elements.nodes.update({\n            id: node.id,\n            // label: node.label ,\n            // + (node.output !== undefined ? \" | \" + node.output : \"\"),\n            color: {\n                background: background,\n                border: border,\n                highlight: {\n                    border: border,\n                    background: background\n                }\n            },\n            borderWidth: node.isInitial || node.isAdmit ? borderWidth.primary : borderWidth.default,\n            borderWidthSelected: borderWidth.highlight\n        })\n    })\n\n}\n\nexport const graphToElements = (graph: graph): Elements => {\n    let acc: Elements = {nodes: new DataSet<node, \"id\">(), edges: new DataSet<edge, \"id\">()}\n\n    graph.nodes.forEach((node) => {\n        acc.nodes.add(node)\n    })\n    graph.edges.forEach((edge) => {\n        acc.edges.add(edge)\n    })\n\n    return acc\n}\n\nexport const elementsToGraph = (elements: Elements): graph => {\n    let acc: graph = {nodes: [], edges: []}\n\n    elements.nodes.forEach((node) => {\n        acc.nodes.push(node)\n    })\n    elements.edges.forEach((edge) => {\n        acc.edges.push(edge)\n    })\n\n    return acc\n}\n\nexport const getNodeNamePrefix = (graph: graph): string => {\n    let prefix = graph.nodes.length === 0 ? \"\" : graph.nodes[0].label;\n\n    graph.nodes.forEach(node => {\n        let i = 0;\n        while (i < node.label.length && i < prefix.length && node.label[i] === prefix[i]) {\n            i++;\n        }\n        prefix = prefix.substring(0, i);\n    });\n\n    return prefix;\n}\n\nexport const computersInfo: Record<ComputerType, ComputerInfo> = {\n    dfa: {\n        name: \"ДКА\",\n        description: \"Конечный автомат, принимающий или отклоняющий заданную строку символов\",\n        preview: \"dfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 20, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                // {id: 3, x: 0, y: 180, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                // {id: 4, x: 180, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 2, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 2, to: 1, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 3, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: \"0\"}]])},\n                // {from: 1, to: 3, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 2, to: 4, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 3, to: 2, transitions: new Set([[{title: \"1\"}]])},\n                // {from: 4, to: 2, transitions: new Set([[{title: \"1\"}]])},\n            ]\n        }\n    },\n    nfa: {\n        name: \"НКА\",\n        description: \"Может находиться в нескольких состояниях одновременно\",\n        preview: \"nfa.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 200, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 300, y: 300, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: '0'}]])},\n                {from: 2, to: 3, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 4, transitions: new Set([[{title: '1'}]])},\n\n                {from: 4, to: 4, transitions: new Set([[{title: '0'}]])},\n                // {from: 4, to: 4, transitions: new Set([[{title: '0'}]])}\n            ]\n        }\n    },\n    \"nfa-eps\": {\n        name: \"ε-НКА\",\n        description: \"Расширение НКА, в котором используются ε-переходы\",\n        preview: \"nfa-eps.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 100, label: \"S\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 100, label: \"A1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 100, y: 200, label: \"B1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 100, label: \"A2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 5, x: 300, y: 100, label: \"A3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 6, x: 400, y: 100, label: \"A4\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 7, x: 200, y: 200, label: \"B2\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 8, x: 300, y: 200, label: \"B3\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 9, x: 400, y: 200, label: \"B4\", isAdmit: true, isInitial: false, isCurrent: false},\n\n            ],\n            edges: [\n                {from: 1, to: 1, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 1, to: 2, transitions: new Set([[{title: EPS}]])},\n                {from: 1, to: 3, transitions: new Set([[{title: EPS}]])},\n                {from: 2, to: 4, transitions: new Set([[{title: '0'}]])},\n                {from: 4, to: 5, transitions: new Set([[{title: '1'}]])},\n                {from: 5, to: 6, transitions: new Set([[{title: '1'}]])},\n                {from: 3, to: 7, transitions: new Set([[{title: '0'}]])},\n                {from: 7, to: 8, transitions: new Set([[{title: '0'}]])},\n                {from: 8, to: 9, transitions: new Set([[{title: '1'}]])},\n\n                {from: 9, to: 9, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n                {from: 6, to: 6, transitions: new Set([[{title: '0'}, {title: '1'}]])},\n\n            ]\n        }\n    },\n    pda: {\n        name: \"Автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 200, y: 0, label: \"S2\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([\n                        [\n                            {title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},\n                            {title: '1', stackDown: 'Z0', stackPush: ['1', 'Z0']},\n                            {title: '0', stackDown: '0', stackPush: ['0', '0']},\n                            {title: '0', stackDown: '1', stackPush: ['0', '1']},\n                            {title: '1', stackDown: '0', stackPush: ['1', '0']},\n                            {title: '1', stackDown: '1', stackPush: ['1', '1']}\n                        ]])\n                },\n\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: 'Z0', stackPush: ['1', 'Z0']}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '0',  stackPush: ['0', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '0',  stackDown: '1',  stackPush: ['0', '1' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '0',  stackPush: ['1', '0' ]}]])},\n                // {from: 1, to: 1, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: ['1', '1' ]}]])},\n\n                {\n                    from: 1, to: 2, transitions: new Set([\n                        [\n                            {title: EPS, stackDown: 'Z0', stackPush: ['Z0']},\n                            {title: EPS, stackDown: '0', stackPush: ['0']},\n                            {title: EPS, stackDown: '1', stackPush: ['1']}\n                        ]])\n                },\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '0',  stackPush: ['0'      ]}]])},\n                // {from: 1, to: 2, transitions: new Set([[{title: EPS,  stackDown: '1',  stackPush: ['1'      ]}]])},\n\n                {\n                    from: 2, to: 2, transitions: new Set([\n                        [\n                            {title: '0', stackDown: '0', stackPush: [EPS]},\n                            {title: '1', stackDown: '1', stackPush: [EPS]}\n                        ]])\n                },\n                // {from: 2, to: 2, transitions: new Set([[{title: '1',  stackDown: '1',  stackPush: [EPS      ]}]])},\n\n                {from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: 'Z0', stackPush: [EPS]}]])},\n\n            ]\n        }\n    },\n    dpda: {\n        name: \"Детерминированный автомат с магазинной памятью\",\n        description: \"Использует стек для хранения состояний\",\n        preview: \"pda.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                // {id: 2, x: 100, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                {\n                    from: 1, to: 1, transitions: new Set([[{title: '0', stackDown: 'Z0', stackPush: ['0', 'Z0']},]])\n                },\n            ]\n        }\n    },\n    tm: {\n        name: \"Машина Тьюринга\",\n        description: \"_\",\n        preview: \"tm.png\",\n        defaultGraph: {\n            nodes: [\n                {id: 1, x: 0, y: 0, label: \"S0\", isAdmit: false, isInitial: true, isCurrent: false},\n                {id: 2, x: 200, y: 0, label: \"S1\", isAdmit: false, isInitial: false, isCurrent: false},\n                {id: 3, x: 0, y: 200, label: \"S2\", isAdmit: true, isInitial: false, isCurrent: false},\n                {id: 4, x: 200, y: 200, label: \"S3\", isAdmit: true, isInitial: false, isCurrent: false},\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['0'], move: Move.R}, {title: EPS, stackDown: '1', stackPush: ['1'], move: Move.R} ]]) },\n                { from: 1, to: 2, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['_'], move: Move.L} ]]) },\n                { from: 2, to: 2, transitions: new Set([[{title: EPS, stackDown: '1', stackPush: ['0'], move: Move.L} ]]) },\n                { from: 2, to: 3, transitions: new Set([[{title: EPS, stackDown: '0', stackPush: ['1'], move: Move.L} ]]) },\n                { from: 2, to: 4, transitions: new Set([[{title: EPS, stackDown: '_', stackPush: ['1'], move: Move.L} ]]) },\n            ]\n        }\n    },\n    mealy: {\n        name: \"Автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"_\",\n        defaultGraph: {\n            // nodes: [\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n            //     { x: 300, y: -200, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n            //     { x: 500, y: -300, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n            //     { x: -100, y: -500, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            // ],\n            // edges: [\n            //     { from: 0, to: 1, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 0, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n            //     { from: 1, to: 2, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n            //     { from: 1, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 2, to: 0, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n            //     { from: 3, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n            //     { from: 3, to: 0, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            // ]\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                { x: 300, y: -200, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                { x: 500, y: -300, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 4, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 1, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 1, to: 4, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                { from: 2, to: 4, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                { from: 4, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 4, to: 1, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n            //     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n        \n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\n        }\n    },\n    dmealy: {\n        name: \"Детерминированный автомат Мили\",\n        preview: \"mealy.png\",\n        description: \"_\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"0 rub\" },\n                // { x: 300, y: -200, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"5 rub\" },\n                // { x: 500, y: -300, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"15 rub\" },\n                { x: -100, y: -500, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"10 rub\" }\n            ],\n            edges: [\n                { from: 0, to: 0, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                { from: 0, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                // { from: 1, to: 2, transitions: new Set([[{ title: 't', output: 'n' }]]) },\n                // { from: 1, to: 3, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                // { from: 2, to: 0, transitions: new Set([[{ title: 'f', output: '0' }, { title: 't', output: '5' }]]) },\n                // { from: 3, to: 2, transitions: new Set([[{ title: 'f', output: 'n' }]]) },\n                // { from: 3, to: 0, transitions: new Set([[{ title: 't', output: '0' }]]) },\n            ]\n            //     {\n//         nodes: [\n//             { id: 0, isAdmit: false },\n//             { id: 1, isAdmit: false },\n//             { id: 2, isAdmit: false },\n//             { id: 3, isAdmit: false },\n//         ],\n//         edges: [\n//             { from: 0, to: 1, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 0, to: 3, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 2, transitions: new Set([[{ title: '10', output: 'n' }]]) },\n//             { from: 1, to: 3, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 2, to: 0, transitions: new Set([[{ title: '5', output: '0' }, { title: '10', output: '5' }]]) },\n//             { from: 3, to: 2, transitions: new Set([[{ title: '5', output: 'n' }]]) },\n//             { from: 3, to: 0, transitions: new Set([[{ title: '10', output: '0' }]]) },\n        \n//         ]\n//     }, [{ id: 0, isAdmit: false }], [\"10\", \"10\"])\n        }\n    },\n    moore: {\n        name: \"Автомат Мура\",\n        description: \"_\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 3, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n                // { id: 3, isAdmit: false, output: '3' },\n            ],\n            edges: [\n                { from: 1, to: 1, transitions: new Set([[{ title: '1' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 2, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 3, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 3, to: 2, transitions: new Set([[{ title: '0' }]]) },\n                { from: 3, to: 1, transitions: new Set([[{ title: '1' }]]) },\n            ]        \n        }\n    },\n    dmoore: {\n        name: \"Детерминированный автомат Мура\",\n        description: \"_\",\n        preview: \"moore.png\",\n        defaultGraph: {\n            nodes: [\n                { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n                { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n                { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n                // { id: 3, isAdmit: false, output: '3' },\n            ],\n            edges: [\n                { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n                { from: 0, to: 1, transitions: new Set([[{ title: '0' }]]) },\n    \n                { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n                { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n                { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            ]\n            // nodes: [\n            //     { x: 0, y: 0, id: 0, isAdmit: false, isCurrent: false, isInitial: true, label: \"S0 | b\" },\n            //     { x: 300, y: 0, id: 1, isAdmit: false, isCurrent: false, isInitial: false, label: \"S1 | b\"  },\n            //     { x: 100, y: 100, id: 2, isAdmit: false, isCurrent: false, isInitial: false, label: \"S2 | a\"  },\n            // ],\n            // edges: [\n            //     { from: 0, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            //     { from: 0, to: 1, transitions: new Set([[{ title: '1' }]]) },\n    \n            //     // { from: 1, to: 1, transitions: new Set([[{ title: '0' }]]) },\n            //     // { from: 1, to: 2, transitions: new Set([[{ title: '1' }]]) },\n    \n            //     // { from: 2, to: 1, transitions: new Set([[{ title: '0' }]]) },\n            //     // { from: 2, to: 0, transitions: new Set([[{ title: '1' }]]) },\n            // ]        \n        }\n    },\n\n}\n\nexport const getCookie = (name: string) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n}\n\n\nexport const getRandomString = (length: number): string => {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","import React from \"react\";\nimport {ComputerTypeContext} from \"./App\";\n\nexport const withComputerType = (Component: typeof React.Component) => (\n    (props: any) => (\n        <ComputerTypeContext.Consumer>\n            { context => <Component computerType={context} {...props}/> }\n        </ComputerTypeContext.Consumer>\n    )\n)","import React from \"react\";\nimport {ComputerType, edge} from \"../../react-graph-vis-types\";\nimport {getTransitionsTitles, transitionsToLabel} from \"../../utils\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport Button from \"@mui/material/Button\";\nimport \"./EdgeControl.css\";\nimport Transition from \"./Transition/Transition\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport TextField from \"@mui/material/TextField\";\nimport {withComputerType} from \"../../hoc\";\nimport {EPS} from \"../../Logic/Computer\";\nimport {Move, TransitionParams} from \"../../Logic/IGraphTypes\";\nimport { TextareaAutosize } from \"@mui/material\";\n\n\ninterface EdgeControlProps {\n    edge: edge | null,\n    changeEdgeTransitions: (id: string, transitions: Set<TransitionParams[]>) => void,\n    deleteEdge: (id: string) => void,\n    computerType: ComputerType | null\n    reinitComputer: (() => void)\n}\n\ninterface Rule{\n    id: number\n    value: string\n}\n\ninterface EdgeControlState {\n    prevEdgeId: string | undefined,\n    transitions: Set<TransitionParams[]>,\n    transitionsText: string,\n    displayedTransitionText: string,\n    activeTransition: TransitionParams[] | null,\n    editMode: boolean,\n    countRules?: number, \n    rules: Rule[],\n}\n\nclass EdgeControl extends React.Component<EdgeControlProps, EdgeControlState> {\n    constructor(props: EdgeControlProps) {\n        super(props);\n\n        this.state = {\n            prevEdgeId: this.props.edge?.id,\n            transitions: this.props.edge?.transitions || new Set(),\n            transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            displayedTransitionText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n            activeTransition: null,\n            editMode: false,\n            countRules: 1,\n            rules: [\n                {id: 1, value: ' '}\n            ]\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<EdgeControlProps>, prevState: Readonly<EdgeControlState>) {\n        if (this.props.edge?.id !== prevState.prevEdgeId) {\n\n            this.setState({\n                transitions: this.props.edge?.transitions || new Set(),\n                prevEdgeId: this.props.edge?.id,\n                transitionsText: getTransitionsTitles(this.props.edge?.transitions || new Set<TransitionParams[]>(), this.props.computerType),\n                activeTransition: null,\n                editMode: false\n            });\n\n        }\n    }\n\n    selectTransition = (transition: TransitionParams[] | null): void => {\n        if (this.state.activeTransition === transition) {\n            this.setState({activeTransition: null});\n        } else {\n            this.setState({activeTransition: transition});\n        }\n    }\n\n    changeTransitions = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        this.setState({transitionsText: value});\n\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined }[] = []\n        let acc: TransitionParams[] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth })\n                })\n\n\n            // accumulator.forEach(value => {\n            //     if (value.fth !== undefined) {\n            //         acc.push(\n            //             {\n            //                 title: EPS,\n            //                 stackDown: value.snd === 'eps' ? EPS : value.snd,\n            //                 stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n            //                 move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n            //             }\n            //         )\n            //     }\n            // })\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: snd, trd: undefined, fth: undefined })\n            })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            output: value.snd\n                        }\n                    )\n                }\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined })\n                })\n\n            accumulator.forEach(value => {\n                if (value.fst !== undefined) {\n                    acc.push(\n                        {\n                            title: value.fst === 'eps' ? EPS : value.fst,\n                            stackDown: value.snd === 'eps' ? EPS : value.snd,\n                            stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                            move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined\n                        }\n                    )\n                }\n            })\n        }\n\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.props.changeEdgeTransitions(this.props.edge!.id!, transitions)\n        console.log(\"ALLLOO\")\n        /////\n        // await this.props.reinitComputer()\n        ///\n        this.setState({transitionsText: value\n            , transitions: transitions\n        }, () => this.props.reinitComputer());\n    }\n\n    deleteEdge = async (): Promise<void> => {\n        if (this.props.edge !== null) {\n            this.props.deleteEdge(this.props.edge.id!);\n        }\n        await this.props.reinitComputer()\n\n    }\n    \n    private addInstruction(value: string) {\n        let newRow = {id: this.state.rules.length, value: value};\n        this.setState({rules: this.state.rules.concat(newRow)});\n    }\n    \n    changeEditMode = () => {\n         this.setState({editMode: !this.state.editMode});\n         this.updateTransitions();\n\n    }\n    \n    updateTransitions = async () => {\n        let accumulator: {\n            fst: string | undefined,\n            snd: string | undefined,\n            trd: string | undefined,\n            fth: string | undefined \n            out: string | undefined\n        } [] = []\n\n        if (this.props.computerType === \"tm\") {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split('')\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let trd = tmp\n                    let fth = undefined\n\n                    let bebra = tmp.join(\"\").split(\">\")\n                    bebra.reverse()\n                    fth = bebra.shift()\n                    bebra.reverse()\n                    trd = bebra\n                    console.log(\"tmp\")\n                    console.log(bebra)\n\n                    accumulator.push({ fst: EPS, snd: fst, trd: trd.join(':'), fth: fth, out: undefined })\n                })\n\n        } \n        if (this.props.computerType === \"mealy\" || this.props.computerType === \"dmealy\") {\n            this.state.transitionsText\n            .split('')\n            .filter(x => x !== \" \" && x !== \"\\n\")\n            .join('')\n            .split(\";\")\n            .forEach(value => {\n                let tmp = value.split(\"|\")\n                let fst = tmp.shift()\n                let snd = tmp.shift()\n                accumulator.push({ fst: fst, snd: undefined, trd: undefined, fth: undefined, out: snd })\n            })\n        } \n        else {\n            this.state.transitionsText\n                .split('')\n                .filter(x => x !== \" \" && x !== \"\\n\")\n                .join('')\n                .split(\";\")\n                .forEach(value => {\n                    let tmp = value.split(\",\")\n                    let fst = tmp.shift()\n                    tmp = tmp.join('').split(\"|\" || \">\")\n                    let snd = tmp.shift()\n                    let trd = tmp\n                    accumulator.push({ fst: fst, snd: snd, trd: trd.join(':'), fth: undefined, out: undefined })\n                })\n        }\n\n\n        let acc: TransitionParams[] = []\n        accumulator.forEach(value => {\n            if (value.fst !== undefined) {\n                acc.push(\n                    {\n                        title: value.fst === 'eps' ? EPS : value.fst,\n                        stackDown: value.snd === 'eps' ? EPS : value.snd,\n                        stackPush: value.trd?.split(':').map(value => value === 'eps' ? EPS : value),\n                        move: value.fth === 'L' ? Move.L : value.fth === 'R' ? Move.R : undefined,\n                        output: value.out,\n                        \n                    }\n                )\n            }\n        })\n\n        let transitions: Set<TransitionParams[]> = new Set<TransitionParams[]>([acc])\n\n        this.setState({\n            transitionsText: getTransitionsTitles(transitions, this.props.computerType),\n            transitions: transitions\n        })\n        ///\n        await this.props.reinitComputer()\n        ///\n    }\n\n    deleteTransition = (): void => {\n        if (this.props.edge !== null && this.state.activeTransition !== null) {\n            const transitions = this.state.transitions;\n            transitions.delete(this.state.activeTransition);\n\n            this.props.changeEdgeTransitions(this.props.edge.id!, transitions);\n            this.setState({transitions: transitions, transitionsText: getTransitionsTitles(transitions, this.props.computerType)});\n        }\n    }\n\n\n\n    render() {\n        return (\n            <ControlWrapper title=\"Переход\" visible={this.props.edge !== null}>\n                <div className=\"edge-control__container\">\n                    <div className=\"edge-control__item edge-control__transitions\">\n                        {\n                                <TextField\n                                    id=\"filled-multiline-static\"\n                                    multiline\n                                    rows={3}\n                                    variant=\"standard\"\n                                    label=\"Переходы\"\n                                    size=\"small\"\n                                    value={this.state.transitionsText}\n                                    onChange={this.changeTransitions}\n                                    helperText={this.props.computerType === \"nfa-eps\" || \"pda\"|| \"dpda\" ? 'Список символов или \"eps\" через запятую' : \"Список символов через запятую\"}\n                                    onBlur={this.updateTransitions}\n                                />\n                        }\n\n                        <div className=\"edge-control__edit-transitions\"\n                             onClick={this.changeEditMode}>\n                            <EditIcon/>\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"edge-control__item\">\n                        <Button\n                            onClick={this.deleteEdge}\n                        >\n                            Удалить\n                        </Button>\n                    </div>\n\n                </div>\n            </ControlWrapper>\n            );\n        }\n}\n\nexport default withComputerType(EdgeControl);","import React, { ChangeEvent } from \"react\";\n\nimport { node } from \"../../react-graph-vis-types\";\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\n\nexport const History = (props: {\n    startNode: node, history: {\n        a: node;\n        b: string[] | undefined;\n    }[][], historyEndRef: any\n}) => {\n    return (\n        <div className=\"run-control__item run-control__history\">\n            <div className=\"run-control__history__header\">\n                <Typography variant=\"h6\">История</Typography>\n            </div>\n            {\n                props.history.length !== 0 ?\n                    <div className=\"run-control__history__scroll\">\n\n\n                        {\n                            props.startNode !== undefined\n                                ?\n                                <div className=\"run-control__history__row\" key={0}>\n                                    <span className=\"run-control__history__index\">{0}</span>\n                                    {\n                                        <Tooltip\n                                            title={<Typography className=\"display-linebreak\">{\"~\"}</Typography>}>\n                                            <div\n                                                className=\"run-control__history__node\"\n                                                style={{ border: `${props.startNode.isInitial ? \"#0041d0\" : props.startNode.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                            >\n                                                {props.startNode!.label}\n                                            </div>\n                                        </Tooltip>\n                                    }\n                                </div>\n                                : <div />\n                        }\n\n                        {\n                            props.history.map((nodes, index) => (\n                                <div className=\"run-control__history__row\" key={index}>\n                                    <span className=\"run-control__history__index\">{index + 1}</span>\n                                    {\n                                        nodes.map((node, index) => (\n                                            <Tooltip\n                                                title={<Typography className=\"display-linebreak\">{node.b !== undefined ? node.b.join('\\n') : ''}</Typography>}>\n                                                <div\n                                                    className=\"run-control__history__node\"\n                                                    style={{ border: `${node.a.isInitial ? \"#0041d0\" : node.a.isAdmit ? \"#ff0072\" : \"#000000\"} 2px solid` }}\n                                                >\n                                                    {node.a.label}\n                                                </div>\n                                            </Tooltip>\n                                        ))\n                                    }\n                                </div>\n                            ))\n                        }\n                        <div ref={props.historyEndRef} />\n                    </div>\n                    :\n                    <div className=\"run-control__history__placeholder\">\n                        Используйте пошаговый запуск, чтобы наблюдать за историей\n                    </div>\n            }\n        </div>)\n}\n","import React, { ChangeEvent } from \"react\";\nimport { ComputerType, graph, histNode, node } from \"../../react-graph-vis-types\";\nimport { DFA } from \"../../Logic/DFA\";\nimport { isEqual } from \"lodash\";\nimport { withComputerType } from \"../../hoc\";\nimport { Computer } from \"../../Logic/Computer\";\nimport { NFA } from \"../../Logic/NFA\";\nimport ControlWrapper from \"../ControlWrapper/ControlWrapper\";\nimport \"./RunControl.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { EpsilonNFA } from \"../../Logic/EpsilonNFA\";\nimport { PDA } from \"../../Logic/PDA\";\nimport { TM } from \"../../Logic/TM\";\nimport { Elements } from \"../../App\";\nimport { decorateGraph, elementsToGraph, graphToElements } from \"../../utils\";\nimport { HistUnit, Step } from \"../../Logic/Types\";\nimport { GraphEval, GraphEvalMultiStart, NodeCore } from \"../../Logic/IGraphTypes\";\nimport { Mealy } from \"../../Logic/Mealy\";\nimport { Moore } from \"../../Logic/Moore\";\nimport { start } from \"repl\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nimport { NonDeterministic, NonMinimizable } from \"../../Logic/Exceptions\";\nimport { DPDA } from \"../../Logic/DPDA\";\nimport { DMealy } from \"../../Logic/DMealy\";\nimport { DMoore } from \"../../Logic/DMoore\";\nimport { isAbsolute } from \"path\";\nimport { History } from \"./History\"\n\ninterface runControlProps {\n    computerType: ComputerType,\n    elements: Elements,\n    treeElems: Elements,\n    changeStateIsCurrent: (ids: number[], isCurrent: boolean) => void\n    updMem: (mem: string[] | undefined, ptr: number | undefined) => void\n    network: any\n    createHistNode: (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => void\n    createHistEdge: (from: number, to: number, by: any) => void\n    getLastHistNodeId: () => number\n    resetHistTree: () => void\n    setInit: (f: () => void) => void\n    setNfaToDfa: (f: () => void) => void\n    setMinimizeDfa: (f: () => void) => void\n    setMooreToMealy: (f: () => void) => void\n    setMealyToMoore: (f: () => void) => void\n    setChangerByStack: (f: () => void) => void\n    setRun: (f: () => void) => void\n    setStep: (f: () => void) => void\n    setReset: (f: () => void) => void\n    setHistory: (jsx: () => JSX.Element) => void\n    updateElements: (elements: Elements) => void\n    setComputerType: (type: null | ComputerType) => void\n    setResettedStatus: (status: boolean) => void\n    setByEmptyStack: (byEmptyStack: boolean) => void\n    setIsNonDetermenistic: (v: boolean) => void\n    setIsNonMinimizable: (v: boolean) => void\n    treeContextInfo: () => string\n    treeVisible: () => boolean\n}\n\ninterface runControlState {\n    input: string,\n    result?: boolean,\n    computer: Computer | undefined,\n    editMode: boolean,\n    currentInputIndex: number,\n    history: { a: node, b: string[] | undefined }[][],\n    byEmptyStack: boolean,\n    wasRuned: boolean,\n    memory: string[] | undefined,\n    gElements: graph,\n    startNode: node | undefined,\n    lastHistUnits: { id: number, idd: number }[],\n    startStatements: NodeCore[]\n}\n\ntype ButtonSource = { name: () => string, onClick: () => void }\n\nconst creatButtons = (buttons: ButtonSource[][]) => {\n    const buttonsComp = buttons.reduce((acc: any[], buttons) => {\n        acc.push(\n            <div className=\"run-control__item run-control__buttons\">\n                {\n                    buttons.map((button) =>\n                        <div className=\"run-control__button\">\n                            <Button\n                                variant=\"outlined\"\n                                onClick={\n                                    () => { button.onClick() }\n                                }\n                            >\n                                {button.name()}\n                            </Button>\n                        </div>\n                    )\n\n                }\n            </div>\n        )\n\n        return acc\n    }, [])\n    return (\n        <div>\n            {buttonsComp}\n        </div>\n    )\n}\n\n\nclass RunControl extends React.Component<runControlProps, runControlState> {\n\n    historyEndRef = React.createRef<HTMLDivElement>();\n\n    constructor(props: runControlProps) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            result: undefined,\n            computer: undefined,\n            editMode: true,\n            currentInputIndex: -1,\n            history: [],\n            byEmptyStack: false,\n            wasRuned: false,\n            memory: undefined,\n            gElements: elementsToGraph(this.props.elements),\n            startNode: undefined,\n            lastHistUnits: [],\n            startStatements: []\n            // {nodes: [], edges: []}\n        };\n        // this.initializeComputer()\n    }\n\n    componentDidMount() {\n        this.props.setInit(() => {\n            let haveEmpty = false\n            this.props.elements.edges.forEach(edge => {\n                if (edge.label === \"\") {\n                    haveEmpty = true\n                }\n            })\n            if (!haveEmpty) {\n                return this.initializeComputer()\n            }\n        })\n        this.props.setNfaToDfa(this.nfaToDfa)\n        this.props.setMinimizeDfa(this.minimizeDfa)\n        this.props.setMooreToMealy(this.mooreToMealy)\n        this.props.setMealyToMoore(this.mealyToMoore)\n        this.props.setChangerByStack(this.admitByStack)\n        this.props.setRun(this.run)\n        this.props.setStep(this.step)\n        this.props.setReset(this.reset)\n        this.props.setHistory(() =>\n            <History\n                startNode={this.state.startNode!}\n                history={this.state.history!}\n                historyEndRef={this.historyEndRef}\n            />)\n        this.initializeComputer()\n    }\n\n    componentDidUpdate(prevProps: Readonly<runControlProps>, prevState: Readonly<runControlState>, snapshot?: any) {\n        if (this.computerShouldBeUpdated(elementsToGraph(prevProps.elements), elementsToGraph(this.props.elements))) {\n            this.initializeComputer();\n        }\n\n    }\n\n    computerShouldBeUpdated = (prev: graph, current: graph): boolean => {\n        const compareNodes = (): boolean => {\n            if (prev.nodes.length !== current.nodes.length) {\n                return true;\n            }\n\n            return prev.nodes.some((prev, index) => {\n                const curr = current.nodes[index];\n                return prev.id !== curr.id ||\n                    prev.isAdmit !== curr.isAdmit ||\n                    prev.isInitial !== curr.isInitial;\n            })\n        }\n\n        const compareEdges = (): boolean => {\n            if (prev.edges.length !== current.edges.length) {\n                return true;\n            }\n\n            return prev.edges.some((prev, index) => {\n                const curr = current.edges[index];\n                return prev.id !== curr.id ||\n                    prev.from !== curr.from ||\n                    prev.to !== curr.to ||\n                    !isEqual(curr.transitions, prev.transitions)\n            });\n        }\n\n        // console.log('[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]')\n        // prev.edges.forEach(v => {\n        //     console.log(v.from + ' ' + v.to)\n        //     v.transitions.forEach((t) => console.log(t))\n        // })\n\n        return compareEdges() || compareNodes()\n    }\n\n    getComputer = (computerType: ComputerType, graph: graph, initialNode: node[], input: string[]): Computer | undefined => {\n        switch (computerType) {\n            case \"dfa\":\n                try {\n                    return new DFA(graph, initialNode, input);\n                } catch (e) {\n                    return undefined;\n                }\n            case \"nfa\":\n                return new NFA(graph, initialNode, input);\n            case \"nfa-eps\":\n                return new EpsilonNFA(graph, initialNode, input);\n            case \"pda\":\n                return new PDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"dpda\":\n                return new DPDA(graph, initialNode, input, this.state.byEmptyStack);\n            case \"tm\":\n                return new TM(graph, initialNode, input);\n            case \"mealy\":\n                return new Mealy(graph, initialNode, input);\n            case \"dmealy\":\n                return new DMealy(graph, initialNode, input);\n            case \"moore\":\n                return new Moore(graph, initialNode, input);\n            case \"dmoore\":\n                return new DMoore(graph, initialNode, input);\n        }\n\n    }\n\n    initializeComputer = () => {\n        console.warn(\"Reinitializing computer\");\n\n        this.setState({ gElements: elementsToGraph(this.props.elements) }, () => {\n            this.props.resetHistTree()\n\n            const initialNode: node[] = elementsToGraph(this.props.elements).nodes.filter(node => node.isInitial);\n            const input = this.state.input.split(\"\");\n\n            if (initialNode === undefined) {\n                console.warn(\"There is no initial node. Computer will not be initialized\");\n                return;\n            }\n\n            console.log(\"this.state.gElementshis.state.gElementshis.state.gElements\")\n            console.log(this.state.gElements)\n\n            this.setState({\n                computer: this.getComputer(this.props.computerType, this.state.gElements, initialNode, input),\n                result: undefined\n            }, async () => {\n\n                const tmp: { id: number, idd: number }[] = []\n\n                const startStmts = this.state.computer !== undefined\n                    ? this.state.computer.getStartStatements()\n                    : []\n\n                startStmts\n                    .map((stmt) => this.state.gElements.nodes.find(node => node.id === stmt.id))\n                    .filter((node): node is node => node !== undefined)\n                    .forEach((v) => {\n                        this.props.createHistNode(v.id, v.label, v.isAdmit, v.isInitial, v.isCurrent)\n                        tmp.push({ id: this.props.getLastHistNodeId(), idd: v.id })\n                    })\n\n                console.log('OOOOOOOOOOOO')\n                console.log(tmp.length)\n                tmp.map((v) => this.state.gElements.nodes.find((elem) => elem.id === v.idd))\n                    .filter((node): node is node => node !== undefined)\n                    .forEach((v) => console.log(v.label))\n                // this.state.lastHistUnits.forEach((v) => console.log(v.id, tstst.get(v.id)))\n                console.log('OOOOOOOOOOOO')\n                await this.setState({ lastHistUnits: tmp })\n            });\n\n        })\n\n        // this.setState({\n        //     startStatements: (this.state.computer !== undefined) \n        //         ? this.state.computer.getStartStatements() \n        //         : []\n        // }, () => {\n        //     this.state.startStatements.forEach((stmt) => {\n\n        //     })\n        // })\n\n\n\n        console.log('::::::::::::::::::::::>')\n        this.props.elements.edges.forEach((v) => {\n            console.log(v.from + ' -- ' + v.to)\n            v.transitions.forEach(t => console.log(t))\n        })\n    }\n\n    onInputChanged = (event: ChangeEvent<HTMLInputElement>): void => {\n        const input = event.target.value;\n\n        this.reset();\n        this.state.computer?.setInput(input.split(\"\"));\n\n        this.setState({ input: input });\n\n\n    }\n\n    treeNonDet = (byEpsPred: NodeCore[], byLetter: NodeCore[], byEpsAfter: NodeCore[]) => {\n        const tmp: { id: number, idd: number }[] = []\n\n        byEpsPred.map((node) =>\n            this.state.gElements.nodes.find((elem) => elem.id === node.id))\n            .filter((node): node is node => node !== undefined)\n            .forEach((v) => {\n                this.props.createHistNode(v.id, v.label, v.isAdmit, v.isInitial, v.isCurrent)\n                tmp.push({ id: this.props.getLastHistNodeId(), idd: v.id })\n            })\n\n        const byEpsPredRules = byEpsPred.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const a = this.state.lastHistUnits.filter((l) => v.from && (v.from.id === l.idd))\n            if (a.length > 0) {\n                const from = this.state.lastHistUnits.filter((l) => v.from && (v.from.id === l.idd))[0].id\n                const to = tmp.filter((t) => v.id === t.idd).map((v) => v.id)\n                if (!to.includes(from)) {\n                    acc.push({ from, to, by: v.by })\n                }\n            }\n            return acc\n        }, [])\n\n        byEpsPredRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        this.setState({ lastHistUnits: tmp })\n\n        const tmp1: { id: number, idd: number }[] = []\n\n        byLetter.map((node) => this.state.gElements.nodes.find((elem) => elem.id === node.id))\n            .filter((node): node is node => node !== undefined)\n            .forEach((v) => {\n                this.props.createHistNode(v.id, v.label, v.isAdmit, v.isInitial, v.isCurrent)\n                tmp1.push({ id: this.props.getLastHistNodeId(), idd: v.id })\n            })\n\n        const byLetterRules = byLetter.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const a = tmp.filter((l) => v.from && (v.from.id === l.idd))\n            if (a.length > 0) {\n                const from = tmp.filter((l) => v.from && v.from.id === l.idd)[0].id\n                const to = tmp1.filter((t) => v.id === t.idd).map((v) => v.id)\n                acc.push({ from, to, by: v.by })\n            }\n            return acc\n        }, [])\n\n        byLetterRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        this.setState({ lastHistUnits: tmp1 })\n\n        const tmp2: { id: number, idd: number }[] = []\n\n        byEpsAfter.map((node) => this.state.gElements.nodes.find((elem) => elem.id === node.id))\n            .filter((node): node is node => node !== undefined)\n            .forEach((v) => {\n                this.props.createHistNode(v.id, v.label, v.isAdmit, v.isInitial, v.isCurrent)\n                tmp2.push({ id: this.props.getLastHistNodeId(), idd: v.id })\n            })\n\n        const byEpsAfterRules = byEpsAfter.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            const a = tmp1.filter((l) => v.from && v.from.id === l.idd)\n            if (a.length > 0) {\n                const from = tmp1.filter((l) => v.from && v.from.id === l.idd)[0].id\n                const to = tmp2.filter((t) => v.id === t.idd).map((v) => v.id)\n                acc.push({ from, to, by: v.by })\n            }\n            return acc\n        }, [])\n\n        byEpsAfterRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n\n        this.setState({ lastHistUnits: tmp2 })\n\n    }\n\n\n    treeDet = (byLetter: NodeCore[]) => {\n\n        const tmp1: { id: number, idd: number }[] = []\n\n        byLetter.map((node) => this.state.gElements.nodes.find((elem) => elem.id === node.id))\n            .filter((node): node is node => node !== undefined)\n            .forEach((v) => {\n                this.props.createHistNode(v.id, v.label, v.isAdmit, v.isInitial, v.isCurrent)\n                tmp1.push({ id: this.props.getLastHistNodeId(), idd: v.id })\n            })\n\n        console.log('--->tmp1')\n        console.log(this.state.lastHistUnits)\n        console.log(tmp1)\n        console.log('--->tmp1')\n\n        const byLetterRules = byLetter.reduce((acc: { from: number, to: number[], by: any }[], v) => {\n            // console.log('<<<<<<<<<<<<>>>>>>>>>>>>')\n            // console.log(this.state.lastHistUnits)\n            // console.log(v)\n            // console.log('<<<<<<<<<<<<>>>>>>>>>>>>>')\n            \n            const a = this.state.lastHistUnits.filter((l) => v.from && (v.from.id === l.idd))\n            \n            console.log(';;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;>>>>')\n            console.log(a)\n            console.log('----->>>>>>>>>>>>>>>>>')\n            console.log(v)\n            console.log(this.state.lastHistUnits)\n            console.log(';;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;>>>>')\n            if (a.length > 0) {\n                const from = this.state.lastHistUnits.filter((l) => v.from && v.from.id === l.idd)[0].id\n                const to = tmp1.filter((t) => v.id === t.idd).map((v) => v.id)\n                console.log('from', from, to, v.by)\n                acc.push({ from, to, by: v.by })\n            }\n            return acc\n        }, [])\n\n        console.log(byLetterRules)\n\n        byLetterRules.forEach((rule) => rule.to.forEach((to) => this.props.createHistEdge(rule.from, to, rule.by)))\n\n        \n        // if (tmp1.length > 0) \n        this.setState({ lastHistUnits: tmp1 })\n\n    }\n\n    step = () => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        this.props.setResettedStatus(true)\n\n\n        if (this.state.wasRuned) {\n            this.setState({ wasRuned: false });\n            this.reset();\n            this.props.resetHistTree()\n        }\n\n        if (this.state.currentInputIndex === this.state.input.length - 1 && this.props.computerType !== \"tm\") return;\n        if (this.state.result !== undefined && this.state.currentInputIndex !== -1 && this.props.computerType !== \"tm\") return;\n\n        try {\n            const stepResult: Step = this.state.computer.step()\n\n            if (stepResult.nodes.length === 0) return;\n\n            this.props.changeStateIsCurrent(stepResult.nodes.map(node => node.id), true);\n            this.props.updMem(stepResult.memory, stepResult.pointer)\n\n            let result = undefined;\n            if (stepResult.counter === this.state.input.length) {\n                result = stepResult.isAdmit\n            } else if (this.state.currentInputIndex + 2 !== stepResult.counter) {\n                result = false;\n            }\n\n            const nodes = stepResult.nodes\n                .map(nodeCore => this.state.gElements.nodes.find(node => node.id === nodeCore.id))\n                .filter((node): node is node => node !== undefined);\n\n            const byEpsPred = stepResult.byEpsPred ? stepResult.byEpsPred : []\n\n            const byLetter = stepResult.byLetter ? stepResult.byLetter : []\n\n            const byEpsAfter = stepResult.byEpsAfter ? stepResult.byEpsAfter : []\n\n            if (this.state.computer.haveEpsilon()) {\n                this.treeNonDet(byEpsPred, byLetter, byEpsAfter)\n            } else {\n                this.treeDet(byLetter)\n            }\n\n            const _nodes = nodes.map((e, i) => {\n                const stack = stepResult.nodes[i].stack\n                return {\n                    a: e,\n                    b: stack !== undefined\n                        ? stack.reverse()\n                        : stepResult.output !== undefined\n                            ? stepResult.output!\n                            : undefined\n                }\n            })\n\n            if (this.props.computerType === \"moore\" && stepResult.counter === 1) {\n                const startNode: { a: node, b: string[] | undefined }[] = [{\n                    a: this.state.gElements.nodes.filter(node => node.id === this.state.computer!.getCurrNode())[0],\n                    b: [\"~\"]\n                }]\n                console.log(startNode)\n                this.setState({\n                    startNode: this.state.gElements.nodes.filter(node => node.id === this.state.computer!.getCurrNode())[0]\n                    // history: [...this.state.history, startNode],\n                })\n            }\n\n            this.setState({\n                result: result,\n                currentInputIndex: this.state.currentInputIndex + 1,\n                history: [...this.state.history, _nodes],\n                memory: stepResult.memory,\n                // lastHistUnits: tmp\n            }, () => {\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.historyEndRef}\n                    />)\n                this.historyEndRef?.current?.scrollIntoView({ behavior: 'smooth' })\n            });\n\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.error('KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK')\n                console.log('NonDeterministic')\n            }\n            else {\n                console.log(e)\n            }\n        }\n\n    }\n\n    reset = (): void => {\n        this.state.computer?.restart();\n        this.props.changeStateIsCurrent([], true); // resets all nodes\n        this.setState({\n            result: undefined,\n            currentInputIndex: -1,\n            history: [],\n            // counter: 0\n        },\n            () => {\n                this.initializeComputer()\n                this.props.setHistory(() =>\n                    <History\n                        startNode={this.state.startNode!}\n                        history={this.state.history!}\n                        historyEndRef={this.historyEndRef}\n                    />)\n            }\n        );\n        this.state.computer?.setInput(this.state.input.split(\"\"))\n        this.props.setResettedStatus(false)\n        this.props.resetHistTree()\n\n        // this.initializeComputer()\n    }\n\n    run = async (): Promise<void> => {\n        if (this.state.computer === undefined) {\n            console.error(\"Computer is not initialized yet\");\n            return;\n        }\n\n        await this.reset();\n\n        try {\n            const result = this.state.computer.run();\n\n            const histTrace = result.histTrace ? result.histTrace : []\n            console.log('histTrace[1].byEpsAfter')\n            console.log(histTrace[1].byEpsAfter)\n            histTrace.forEach((histStep) => {\n\n                const byEpsPred = histStep.byEpsPred ? histStep.byEpsPred : []\n\n                const byLetter = histStep.byLetter ? histStep.byLetter : []\n\n                const byEpsAfter = histStep.byEpsAfter ? histStep.byEpsAfter : []\n                if (this.state.computer) {\n\n                    if (this.state.computer.haveEpsilon()) {\n                        this.treeNonDet(byEpsPred, byLetter, byEpsAfter)\n                    } else {\n                        this.treeDet(byLetter)\n                    }\n                }\n\n\n            })\n\n            this.setState({ result: result.isAdmit, currentInputIndex: -1, history: [] });\n            this.setState({ wasRuned: true })\n        } catch (e) {\n            if (e instanceof NonDeterministic) {\n                this.props.setIsNonDetermenistic(true)\n                console.error('KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK')\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    nfaToDfa = (): void => {\n        const nfaToDfa = this.state.computer!.nfaToDfa()\n        const nodes = nfaToDfa.nodes.map((v, it) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: v.id.toString(),\n            isInitial: it === 0,\n            isCurrent: false\n        }))\n        const edges = nfaToDfa.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"dfa\")\n        })\n    }\n\n    admitByStack = (): void => {\n        const curStbyEmp = this.state.byEmptyStack;\n        this.setState({ byEmptyStack: !curStbyEmp });\n        this.props.setByEmptyStack(!curStbyEmp)\n        this.state.computer!.byEmptyStackAdmt(!curStbyEmp)\n        this.reset();\n    }\n\n    minimizeDfa = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        try {\n            const miniDFA: GraphEval = this.state.computer!.minimizeDfa()\n            const nodes = miniDFA.graphcore.nodes.map((v) => ({\n                id: v.id,\n                isAdmit: v.isAdmit,\n                label: 'G' + v.id.toString(),\n                isInitial: v.id === miniDFA.start.id,\n                isCurrent: false\n            }))\n            const edges = miniDFA.graphcore.edges\n            const gElements = {\n                nodes: nodes,\n                edges: edges\n            }\n\n            this.setState({\n                gElements: gElements\n            }, () => {\n                this.props.updateElements(graphToElements(gElements))\n            })\n        } catch (e) {\n            if (e instanceof NonMinimizable) {\n                this.props.setIsNonMinimizable(true)\n                console.error('KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK')\n                console.log('NonDeterministic')\n            }\n        }\n    }\n\n    mooreToMealy = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const mealy: GraphEvalMultiStart = this.state.computer!.mooreToMealy()\n\n        const starts = mealy.start.map((v) => v.id)\n\n        const nodes = mealy.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString(),\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = mealy.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"mealy\")\n        })\n    }\n\n    mealyToMoore = (): void => {\n        this.initializeComputer();\n        this.reset();\n\n        const miniDFA: GraphEvalMultiStart = this.state.computer!.mealyToMoore()\n\n        const starts = miniDFA.start.map(v => v.id)\n\n        // console.log('()()()()()))()(', miniDFA.graphcore.edges)\n\n        const nodes = miniDFA.graphcore.nodes.map((v) => ({\n            id: v.id,\n            isAdmit: v.isAdmit,\n            label: 'S' + v.id.toString() + ' | ' + v.output,\n            isInitial: starts.includes(v.id),\n            isCurrent: false,\n        }))\n        const edges = miniDFA.graphcore.edges\n        const gElements = {\n            nodes: nodes,\n            edges: edges\n        }\n        this.setState({\n            gElements: gElements\n        }, () => {\n            this.props.updateElements(graphToElements(gElements))\n            this.props.setComputerType(\"moore\")\n        })\n    }\n\n    private defaultButtonsLine: ButtonSource[] = [\n        { name: () => 'Шаг', onClick: () => this.step() },\n        { name: () => 'Запуск', onClick: () => this.run() },\n        { name: () => 'Сбросить', onClick: () => this.reset() },\n    ]\n\n    private defaultButtons: ButtonSource[][] = [this.defaultButtonsLine]\n\n    private buttonsTree: ButtonSource[][] = [\n        this.defaultButtonsLine,\n        [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private buttonsNoRun: ButtonSource[][] = [\n        [\n            { name: () => 'Шаг', onClick: () => this.step() },\n            { name: () => 'Сбросить', onClick: () => this.reset() }\n        ],\n        // [{ name: this.props.treeContextInfo, onClick: this.props.treeVisible }]\n    ]\n\n    private getButtons = () => {\n        switch (this.props.computerType) {\n            case \"dfa\":\n            case \"nfa\":\n            case \"nfa-eps\": return creatButtons(this.buttonsTree)\n            case \"tm\": return creatButtons(this.buttonsNoRun)\n            default: return creatButtons(this.defaultButtons)\n        }\n    }\n\n    render() {\n        return (\n            <ControlWrapper title={\"Запуск\"}>\n                <div>\n\n                    <div className=\"run-control__item run-control__input__row\">\n                        {\n                            this.state.editMode\n                                ?\n                                <TextField\n                                    label=\"Входная строка\"\n                                    size=\"small\"\n                                    value={this.state.input}\n                                    onChange={this.onInputChanged}\n                                    onBlur={() => {\n                                        this.state.input.length && this.setState({ editMode: false }, () => this.initializeComputer())\n                                    }}\n                                />\n                                :\n                                <div\n                                    className=\"run-control__input-value\"\n                                    onClick={() => {\n                                        this.setState({ editMode: true });\n                                    }}\n                                >\n                                    {\n                                        Array.from(this.state.input).map((char, index) => (\n                                            <span\n                                                className={\"run-control__input__span\" + (this.state.currentInputIndex === index ? \"--current\" : \"\")}\n                                                key={index}\n                                            >\n                                                {char}\n                                            </span>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"run-control__result\">\n                            {\n                                this.state.result === undefined ? null :\n                                    this.state.result\n                                        ? <DoneIcon style={{ color: \"var(--commerce)\" }} />\n                                        : <CloseIcon style={{ color: \"var(--destructive)\" }} />\n                            }\n                        </div>\n\n                    </div>\n                    {this.getButtons()}\n\n\n                </div>\n            </ControlWrapper>\n        )\n    }\n}\n\nexport default withComputerType(RunControl);","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nconst itemName = \"saves\";\n\nexport default class BrowserSavesManager implements SavesManager {\n    getSavesMeta(): Promise<SaveMeta[]> {\n        let saves = BrowserSavesManager.getSaves();\n\n        return new Promise<SaveMeta[]>(function (resolve) {\n                resolve(saves);\n            }\n        )\n    }\n\n    getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        let saves = BrowserSavesManager.getSaves();\n\n        let save = saves.find(save => save.id == saveMeta.id);\n\n        return new Promise(function (resolve) {\n            resolve(save || null);\n        });\n    }\n\n    save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        const saves = BrowserSavesManager.getSaves();\n        const next_id = Math.max(...saves.map(save => save.id)) + 1;\n        const save_index = saves.findIndex(save => save.name == name);\n        const save = {id: 0, name: name, save: {graph: graph, type: type}, user_id: \"local\"};\n\n        if (save_index == -1) {\n            save.id = next_id;\n            saves.push(save);\n        } else {\n            save.id = saves[save_index].id;\n            saves[save_index] = save;\n        }\n\n        let saves_json = JSON.stringify(saves, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        localStorage.setItem(itemName, saves_json);\n\n        return new Promise(function (resolve) {\n            resolve();\n        });\n    }\n\n    private static getSaves(): Save[] {\n        if (!localStorage) {\n            throw new Error(\"no local storage\");\n        }\n\n        let saves: Save[] = [];\n\n        try {\n            saves = JSON.parse(localStorage.getItem(itemName) || \"\");\n        } catch (error) {\n            console.warn(\"Invalid saves in local storage: \" + error);\n            return [];\n        }\n\n        return saves;\n    }\n}","import {getCookie} from \"../utils\";\n\nexport const BASE_URL = new URL(process.env.REACT_APP_BACKEND_BASE_URL ?? \"http://localhost\");\nexport const AUTH_PORT = process.env.REACT_APP_BACKEND_AUTH_PORT ?? \"8001\";\nexport const PING_PORT = process.env.REACT_APP_BACKEND_PING_PORT ?? \"8002\";\nexport const SAVES_PORT = process.env.REACT_APP_BACKEND_SAVES_PORT ?? \"8003\";\n\nexport function getAuthHeaders(): Headers {\n    const headers = new Headers();\n\n    headers.set(\"tt\", \"g\");\n    headers.set(\"t\", getCookie(\"token\") || \"\");\n\n    return headers;\n}\n\nexport function getParams(headers: Headers): RequestInit {\n    return {\n        method: \"GET\",\n        headers: headers,\n    };\n}\n\nexport function postParams(headers: Headers, body: BodyInit): RequestInit {\n    headers.set(\"Content-Type\", \"application/json\");\n\n    return {\n        method: \"POST\",\n        headers: headers,\n        body: body,\n    };\n}","import {BASE_URL, getAuthHeaders, getParams, SAVES_PORT} from \"./apiBase\";\n\nexport type GetSavesResponse = {\n    id: number,\n    name: string,\n    user_id: string,\n}[];\n\nexport default function getSaves(onAuthFailed: () => void): Promise<GetSavesResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams, postParams, SAVES_PORT} from \"./apiBase\";\n\nexport type SaveRequest = {\n    name: string,\n    save: string,\n};\n\nexport default function save(request: SaveRequest, onAuthFailed: () => void): Promise<void> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n\n        const body = JSON.stringify(request);\n        const headers = getAuthHeaders();\n        const params = postParams(headers, body);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                resolve();\n            })\n            .catch(error => reject(error));\n    });\n}","import {BASE_URL, getAuthHeaders, getParams, SAVES_PORT} from \"./apiBase\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nexport type GetSaveRequest = {\n    id: number,\n};\n\nexport type GetSaveResponse = {\n    id: number,\n    name: string,\n    save: string,\n    user_id: string,\n};\n\nexport default function getSave(request: GetSaveRequest, onAuthFailed: () => void): Promise<GetSaveResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = SAVES_PORT;\n        url.pathname = \"/saves\";\n        url.pathname += \"/\" + request.id;\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (response.status == 401) {\n                    onAuthFailed();\n                }\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import SavesManager from \"./SavesManager\";\nimport {Save, SaveMeta} from \"./Save\";\nimport {ComputerType, graph} from \"../react-graph-vis-types\";\n\nimport getSaves, {GetSavesResponse} from \"../Api/getSaves\";\nimport {default as apiSave, SaveRequest} from \"../Api/save\";\nimport getSave, {GetSaveRequest} from \"../Api/getSave\";\n\nexport default class CloudSavesManager implements SavesManager {\n    private readonly onAuthFailed;\n\n    constructor(onAuthFailed: () => void) {\n        this.onAuthFailed = onAuthFailed;\n    }\n\n    async getSave(saveMeta: SaveMeta): Promise<Save | null> {\n        const request: GetSaveRequest = {\n            id: saveMeta.id\n        };\n\n        let save = null;\n\n        try {\n            const response = await getSave(request, this.onAuthFailed);\n\n            save = {\n                id: response.id,\n                name: response.name,\n                save: JSON.parse(response.save),\n                user_id: response.user_id,\n            };\n        } catch (error) {\n            console.error(error);\n        }\n\n        return save;\n    }\n\n    async getSavesMeta(): Promise<SaveMeta[]> {\n        let saves: GetSavesResponse = [];\n\n        try {\n            saves = await getSaves(this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n\n        return saves;\n    }\n\n    async save(name: string, graph: graph, type: ComputerType): Promise<void> {\n        const serialized_save = JSON.stringify({\n            graph: graph,\n            type: type\n        }, (key, value) => value instanceof Set ? Array.from(value) : value);\n\n        const request: SaveRequest = {\n            name: name,\n            save: serialized_save\n        };\n\n        try {\n            await apiSave(request, this.onAuthFailed);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\nimport {computersInfo} from \"../../utils\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nimport \"./WelcomePopout.css\";\nimport {IconButton} from \"@mui/material\";\n\nexport interface WelcomePopoutProps {\n    open: boolean,\n    onClose: () => void,\n    onAuthFailed: () => void,\n    changeComputerType: (computerType: null | ComputerType, graph: graph | null) => void,\n}\n\nexport const WelcomePopout: React.FunctionComponent<WelcomePopoutProps> = (\n    {\n        open,\n        onClose,\n        onAuthFailed,\n        changeComputerType\n    }) => {\n    const browserSavesManager = new BrowserSavesManager();\n    const cloudSavesManager = new CloudSavesManager(onAuthFailed);\n\n    const onCreateTemplateClicked = (type: ComputerType) => {\n        changeComputerType(type, null);\n        onClose();\n    }\n\n    const onCreateEmptyClicked = (type: ComputerType) => {\n        changeComputerType(type, {nodes: [], edges: []});\n        onClose();\n    }\n\n    const onCloudSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await cloudSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const onBrowserSaveOpenClicked = async (saveMeta: SaveMeta) => {\n        const save = await browserSavesManager.getSave(saveMeta);\n\n        if (save) {\n            changeComputerType(save.save.type, save.save.graph);\n            onClose();\n        }\n    }\n\n    const updateCloudSavesMeta = async () => {\n        setLoadingCloudSavesMeta(true);\n\n        const savesMeta = await cloudSavesManager.getSavesMeta();\n        setCloudSavesMeta(savesMeta);\n\n        setLoadingCloudSavesMeta(false);\n    }\n\n    const updateBrowserSavesMeta = async () => {\n        const savesMeta = await browserSavesManager.getSavesMeta();\n        setBrowserSavesMeta(savesMeta);\n    }\n\n    const [cloudSavesMeta, setCloudSavesMeta] = useState<SaveMeta[]>([]);\n    const [browserSavesMeta, setBrowserSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingCloudSavesMeta, setLoadingCloudSavesMeta] = useState(false);\n\n    useEffect(() => {\n        if (open) {\n            updateBrowserSavesMeta();\n            updateCloudSavesMeta();\n        }\n    }, [open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <p>Симулятор автоматов</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <Paper\n                    className=\"welcome-popout__body\"\n                    variant=\"outlined\"\n                >\n                    <List dense>\n                        {\n                            cloudSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в облаке\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            loadingCloudSavesMeta\n                                ?\n                                <div className=\"welcome-popout__body__cloud-skeleton\">\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n\n                                    <Skeleton\n                                        className=\"welcome-popout__body__cloud-skeleton__rectangle\"\n                                        animation=\"wave\"\n                                        variant=\"rectangular\"\n                                        height={28}\n                                    />\n                                </div>\n                                :\n                                cloudSavesMeta.length !== 0 ?\n                                    cloudSavesMeta.map(saveMeta => (\n                                        <ListItem\n                                            key={saveMeta.id}\n                                            secondaryAction={\n                                                <Button\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => onCloudSaveOpenClicked(saveMeta)}\n                                                >\n                                                    Открыть\n                                                </Button>\n                                            }\n                                        >\n                                            <ListItemText>\n                                                {saveMeta.name}\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))\n                                    : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                <ListSubheader>\n                                    Открыть сохранение в браузере\n                                </ListSubheader>\n                                : null\n                        }\n\n                        {\n                            browserSavesMeta.length !== 0 ?\n                                browserSavesMeta.map(saveMeta => (\n                                    <ListItem\n                                        key={saveMeta.id}\n                                        secondaryAction={\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onBrowserSaveOpenClicked(saveMeta)}\n                                            >\n                                                Открыть\n                                            </Button>\n                                        }\n                                    >\n                                        <ListItemText>\n                                            {saveMeta.name}\n                                        </ListItemText>\n                                    </ListItem>\n                                ))\n                                : null\n                        }\n\n                        <ListSubheader>\n                            Создать новый вычислитель\n                        </ListSubheader>\n                        {\n                            Object.entries(computersInfo).map(entry => (\n                                <ListItem\n                                    key={entry[1].name}\n                                    secondaryAction={\n                                        <div>\n                                            <Button\n                                                className=\"welcome-popout__create-empty-button\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                                onClick={() => onCreateEmptyClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать пустым\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => onCreateTemplateClicked(entry[0] as ComputerType)}\n                                            >\n                                                Создать\n                                            </Button>\n                                        </div>\n                                    }\n                                >\n                                    <ListItemText primary={entry[1].name} secondary={entry[1].description}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Paper>\n\n                <div className=\"welcome-popout__footer\">\n                    <IconButton href=\"https://github.com/spbu-se/WebAutomataConstructor\">\n                        <GitHubIcon className=\"welcome-popout__github-icon\"/>\n                    </IconButton>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default WelcomePopout;\n","import React, {useEffect, useState} from \"react\";\n\nimport {ComputerType, graph} from \"../../react-graph-vis-types\";\n\nimport BrowserSavesManager from \"../../SavesManager/BrowserSavesManager\";\nimport CloudSavesManager from \"../../SavesManager/CloudSavesManager\";\nimport {SaveMeta} from \"../../SavesManager/Save\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport \"./SavingPopout.css\";\n\nexport interface SavingPopoutProps {\n    open: boolean,\n    onClose: () => void,\n    isLogin: boolean,\n    onAuthFailed: () => void,\n\n    computerType: ComputerType,\n    graph: graph,\n}\n\nexport const SavingPopout: React.FunctionComponent<SavingPopoutProps> = (\n    {\n        open,\n        onClose,\n        isLogin,\n        onAuthFailed,\n        graph,\n        computerType\n    }) => {\n    const onSavesOriginChanged = (_: React.MouseEvent<HTMLElement>, value: string) => {\n        value = value || savesOrigin;\n        setSavesOrigin(value);\n    }\n\n    const onSaveNameClicked = (_: React.MouseEvent<HTMLDivElement>, saveMeta: SaveMeta) => {\n        setSaveName(saveMeta.name);\n    }\n\n    const onSaveNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSaveName(value);\n    }\n\n    const onSaveClicked = (_: React.MouseEvent<HTMLButtonElement>) => {\n        switch (savesOrigin) {\n            case \"cloud\":\n                cloudSavesManager.save(saveName, graph, computerType);\n                break;\n            case \"browser\":\n                browserSavesManager.save(saveName, graph, computerType);\n                break;\n            default:\n                break;\n        }\n\n        updateNames();\n        onClose();\n    }\n\n    const updateNames = async () => {\n        setLoadingSavesMeta(true);\n\n        let savesMeta: SaveMeta[] = [];\n\n        switch (savesOrigin) {\n            case \"cloud\":\n                savesMeta = await cloudSavesManager.getSavesMeta();\n                break;\n            case \"browser\":\n                savesMeta = await browserSavesManager.getSavesMeta();\n                break;\n            default:\n                setSavesMeta([]);\n                break;\n        }\n\n        setSavesMeta(savesMeta);\n        setLoadingSavesMeta(false);\n    }\n\n    const updateDefaultOrigin = () => {\n        setSavesOrigin(isLogin ? \"cloud\" : \"browser\");\n    }\n\n    const [browserSavesManager] = useState<BrowserSavesManager>(new BrowserSavesManager());\n    const [cloudSavesManager] = useState<CloudSavesManager>(new CloudSavesManager(onAuthFailed));\n    const [savesOrigin, setSavesOrigin] = useState<string>(isLogin ? \"cloud\" : \"browser\");\n    const [savesMeta, setSavesMeta] = useState<SaveMeta[]>([]);\n    const [loadingSavesMeta, setLoadingSavesMeta] = useState<boolean>(false);\n    const [saveName, setSaveName] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (open) {\n            updateDefaultOrigin();\n            updateNames();\n        }\n    }, [open]);\n\n    useEffect(() => {\n        updateNames();\n    }, [savesOrigin]);\n\n    useEffect(() => {\n        setSaveName(\"\");\n    }, [savesOrigin, open]);\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                <p>Сохранение</p>\n            </DialogTitle>\n\n            <DialogContent>\n                <div className=\"saving-popout__body\">\n                    <div className=\"saving-popout__body__sidebar\">\n                        <ToggleButtonGroup\n                            orientation=\"vertical\"\n                            exclusive\n                            value={savesOrigin}\n                            onChange={onSavesOriginChanged}\n                        >\n                            <ToggleButton value=\"cloud\" disabled={!isLogin}>Облако</ToggleButton>\n                            <ToggleButton value=\"browser\">Браузер</ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n\n                    <div className=\"saving-popout__body__main\">\n                        <Paper\n                            className=\"saving-popout__body__main__paper\"\n                            variant=\"outlined\"\n                        >\n                            {\n                                loadingSavesMeta\n                                    ?\n                                    <div className=\"saving-popout__body__main__skeleton\">\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n\n                                        <Skeleton\n                                            className=\"saving-popout__body__main__skeleton__bar\"\n                                            animation=\"wave\"\n                                            variant=\"rectangular\"\n                                            height=\"36\"\n                                        />\n                                    </div>\n                                    :\n                                    <List dense>\n                                        {\n                                            savesMeta.map(saveMeta => (\n                                                <ListItem\n                                                    key={saveMeta.id}\n                                                    disablePadding\n                                                >\n                                                    <ListItemButton onClick={e => onSaveNameClicked(e, saveMeta)}>\n                                                        <ListItemText primary={saveMeta.name}/>\n                                                    </ListItemButton>\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                            }\n\n                        </Paper>\n                    </div>\n                </div>\n\n                <TextField\n                    className=\"saving-popout__save-name-input\"\n                    variant=\"standard\"\n                    size=\"small\"\n                    label=\"Имя сохранения\"\n                    value={saveName}\n                    onChange={onSaveNameChanged}\n                />\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onSaveClicked}\n                    >\n                        Сохранить\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        Отмена\n                    </Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default SavingPopout;","import React, {AllHTMLAttributes, FC} from \"react\";\n\nimport {getRandomString} from \"../../../../utils\";\n\nimport \"./GoogleOAuthButton.css\";\n\nexport interface GoogleOAuthButtonProps extends AllHTMLAttributes<HTMLDivElement> {\n}\n\nconst GoogleOAuthButton: FC<GoogleOAuthButtonProps> = ({style, className}) => {\n    const domain = \"https://accounts.google.com/o/oauth2/v2/auth\";\n    const access_type = \"offline\";\n    const client_id = \"196702226545-b0hbpiq78pg29jle3rigem4jcucu8g36.apps.googleusercontent.com\";\n    const callback_url = process.env.REACT_APP_GOOGLE_OAUTH_CALLBACK_URL;\n    const response_type = \"code\";\n    const scope = \"https://www.googleapis.com/auth/userinfo.email\";\n    const state = getRandomString(30);\n\n    document.cookie = `state=${state}; path=/; max-age=3600; secure`;\n\n    const auth_url = `${domain}?access_type=${access_type}&client_id=${client_id}&redirect_uri=${callback_url}&response_type=${response_type}&scope=${scope}&state=${state}`;\n\n    return (\n        <div className={`google_oauth_button ${className}`} style={{...style}}>\n            <form className=\"google_oauth_button__form\" method=\"POST\" action={auth_url}>\n                <button className=\"google_oauth_button__button\" type=\"submit\" value=\"Authorize via Google OAuth\">\n                    <img className=\"google_oauth_button__logo\" src={\"media/images/google_logo_18.png\"} alt=\"Google icon\"\n                         aria-hidden/>\n                    <p className=\"google_oauth_button__text\">\n                        Sign in with Google\n                    </p>\n                </button>\n            </form>\n        </div>\n    )\n};\n\nexport default GoogleOAuthButton;\n","import React, {FC} from \"react\";\nimport \"./LoginPage.css\";\nimport GoogleOAuthButton from \"./GoogleOAuthButton/GoogleOAuthButton\";\n\ninterface LoginPageProps {\n}\n\nconst LoginPage: FC<LoginPageProps> = ({}) => {\n    return (\n        <div className=\"login-page\">\n            <div className=\"login-page__form\">\n                <GoogleOAuthButton/>\n            </div>\n        </div>\n    )\n};\n\nexport default LoginPage;","import React, {FC, useEffect, useState} from \"react\";\nimport \"./PingPage.css\";\nimport pingApi from \"../../../Api/pingApi\";\n\ninterface PingPageProps {\n}\n\nconst PingPage: FC<PingPageProps> = ({}) => {\n    const [pong, setPong] = useState('ping...');\n\n    const ping = async (): Promise<string | null> => {\n        let pong = null;\n\n        try {\n            const response = await pingApi();\n            pong = response.pong;\n        } catch (error) {\n            console.error(error);\n        }\n\n        return pong;\n    }\n\n    useEffect(() => {\n        ping().then(pong => setPong(pong ?? \"Failed to ping\"));\n    });\n\n    return (\n        <div className='ping-page'>\n            {pong}\n        </div>\n    )\n};\n\nexport default PingPage;","import {BASE_URL, PING_PORT, getAuthHeaders, getParams} from \"./apiBase\";\n\nexport type PingResponse = {\n    pong: string,\n};\n\nexport default function pingApi(): Promise<PingResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = PING_PORT;\n        url.pathname = \"/ping\";\n\n        const headers = getAuthHeaders();\n        const params = getParams(headers);\n\n        fetch(url.href, params)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.text();\n            })\n            .then(text => resolve({pong: text}))\n            .catch(error => reject(error));\n    });\n}","import React, {FC} from \"react\";\nimport \"./FailedLoginPage.css\";\n\nimport { Link } from \"react-router-dom\";\n\ninterface FailedLoginPageProps {\n}\n\nconst FailedLoginPage: FC<FailedLoginPageProps> = ({}) => {\n    return (\n        <div className=\"failed-login-page\">\n            <h1>Login failed</h1>\n            <Link to=\"/login\">Login page</Link>\n        </div>\n    )\n};\n\nexport default FailedLoginPage;","import React from \"react\";\n\nimport {useHistory} from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport \"./AppHeader.css\";\n\nexport interface AppHeaderProps {\n    onMenuButtonClicked: (event: React.MouseEvent) => void,\n    onSaveButtonClicked: (event: React.MouseEvent) => void,\n    onLogoutButtonClicked: () => void,\n    isLogin: boolean,\n}\n\nexport const AppHeader: React.FunctionComponent<AppHeaderProps> = (\n    {\n        onMenuButtonClicked,\n        onSaveButtonClicked,\n        onLogoutButtonClicked,\n        isLogin,\n    }) => {\n    const history = useHistory();\n\n    const onSignInButtonClicked = () => {\n        history.push(\"/login\");\n    }\n\n    const onSignOutButtonClicked = () => {\n        document.cookie = \"token=; path=/; secure; max-age=-99999999\";\n        onLogoutButtonClicked();\n    }\n\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar variant=\"dense\">\n                <div className=\"app__header__left\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onMenuButtonClicked}\n                    >\n                        Меню\n                    </Button>\n\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={onSaveButtonClicked}\n                    >\n                        Сохранить\n                    </Button>\n                </div>\n\n                <div className=\"app__header__right\">\n                    <Button\n                        className=\"app__header__button\"\n                        color=\"inherit\"\n                        onClick={isLogin ? onSignOutButtonClicked : onSignInButtonClicked}\n                    >\n                        {isLogin ? \"Выйти\" : \"Войти\"}\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import {AUTH_PORT, BASE_URL} from \"./apiBase\";\n\nexport type ObtainAuthRequest = {\n    state: string,\n};\n\nexport type ObtainAuthResponse = {\n    value: string,\n};\n\nexport default function obtainAuth(request: ObtainAuthRequest): Promise<ObtainAuthResponse> {\n    return new Promise(function (resolve, reject) {\n        const url = BASE_URL;\n        url.port = AUTH_PORT;\n        url.pathname = \"/auth/obtain\";\n        url.pathname += \"/\" + request.state;\n\n        fetch(url.href)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status + response.statusText);\n                }\n\n                return response.json()\n            })\n            .then(json => resolve(json))\n            .catch(error => reject(error));\n    });\n}","import React, {useEffect} from \"react\";\n\nimport {useHistory} from \"react-router-dom\";\n\nimport {getCookie} from \"../../../utils\";\n\nimport obtainAuth from \"../../../Api/obtainAuth\";\n\nimport \"./SuccessLoginPage.css\";\n\nexport interface SuccessLoginPageProps {\n    onAuthSuccess: () => void,\n}\n\nexport const SuccessLoginPage: React.FunctionComponent<SuccessLoginPageProps> = ({onAuthSuccess}) => {\n    const updateAuth = async () => {\n        const state = getCookie(\"state\") || \"\";\n\n        let response = null;\n\n        try {\n            response = await obtainAuth({state: state});\n            onAuthSuccess();\n        } catch (error) {\n            console.error(error);\n            return;\n        }\n\n        document.cookie = `token=${response.value}; path=/; secure; max-age=86400`;\n        history.push(\"/\");\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, []);\n\n    const history = useHistory();\n\n    return (\n        <div>\n        </div>\n    )\n};\n\nexport default SuccessLoginPage;","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    // DataSet,\n    Network,\n    Options,\n    Data, \n} from \"vis-network/peer\";\nimport { DataSet } from \"vis-data/peer\";\nimport { Timeline } from \"vis-timeline/peer\";\n// vis-network/standalone/esm/vis-network\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\n// import { Timeline } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const VisNetwork = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        // interaction: {\n        //     dragView: false,\n        //     keyboard: false,\n        //     dragNodes: false,\n        // },\n        layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"circle\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n  // DOM element where the Timeline will be attached\n  const [container, _co] = useState(useRef<HTMLDivElement>(null)) ;\n//   document.getElementById(\"visualization\");\n\n  // Create a DataSet (allows two way data-binding)\n  const items = new DataSet([\n    { id: 1, content: \"item 1\", start: \"2014-04-20\" },\n    { id: 2, content: \"item 2\", start: \"2014-04-14\" },\n    { id: 3, content: \"item 3\", start: \"2014-04-18\" },\n    { id: 4, content: \"item 4\", start: \"2014-04-16\", end: \"2014-04-19\" },\n    { id: 5, content: \"item 5\", start: \"2014-04-25\" },\n    { id: 6, content: \"item 6\", start: \"2014-04-27\", type: \"point\" }\n  ]);\n\n  // Configuration for the Timeline\n  const timeLineOptions = {};\n\n  // Create a Timeline\n\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n    const timeline = React.createRef<Timeline | null>();\n    // const timeline\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            // timeline = new Timeline(container, items, options)\n            // timeline.current = new Timeline(container.current, items, timeLineOptions);\n\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"network\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useEffect } from 'react';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const NonDetermenisticModal = (props: { isNonDetermenistic: boolean, setIsNonDetermenistic: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonDetermenistic) {\n            setOpen(props.isNonDetermenistic)\n            props.setIsNonDetermenistic(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Недетерменизм\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n\nexport const NonMinimizableModal = (props: { isNonMinimizable: boolean, setIsNonMinimizable: (v: boolean) => void }) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        if (props.isNonMinimizable) {\n            setOpen(props.isNonMinimizable)\n            props.setIsNonMinimizable(false)\n        }\n    });\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Ошибка\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Невозможно минимизровать\n                    </Typography>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState, useLayoutEffect, useCallback } from \"react\";\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Move, NodeCore } from \"./Logic/IGraphTypes\";\nimport { edge, graph, node } from \"./react-graph-vis-types\";\nimport { Menu, MenuItem, MenuList, Paper, Typography } from \"@mui/material\";\nimport { useKey } from \"rooks\";\nimport { network } from \"vis-network\";\n\ninterface PropsVisNet {\n    nodes: DataSet<node>,\n    edges: DataSet<edge>,\n    data: { nodes: DataSet<node, \"id\">, edges: DataSet<edge, \"id\"> },\n    onDoubleClick: (params?: any) => void,\n    onClick1: (params?: any) => void,\n    onClick2: (params?: any) => void,\n    onClick3: (params?: any) => void,\n    onClick4: (params?: any) => void,\n    network: any,\n    contextMenu?: any\n}\n\nexport const MyUseKey = (key: any, condition: boolean) => {\n    const [isKeyPressed, setIsKeyPressed] = useState(false)\n\n    const downHadler = (k: any) => {\n        if (key === k) setIsKeyPressed(true)\n    }\n\n    const upHadler = (k: any) => {\n        if (key !== k) setIsKeyPressed(false)\n    }\n\n    useEffect(() => {\n        if (condition) {\n            window.addEventListener('keydown', downHadler)\n            window.addEventListener('keyup', upHadler)\n\n            return () => {\n                window.removeEventListener('keydown', downHadler)\n                window.removeEventListener('keyup', upHadler)\n            }\n        }\n    }, [])\n    return isKeyPressed\n}\n\nexport const TreeHistory = (props: PropsVisNet) => {\n    // A reference to the div rendered by this component\n    const [domNode, setdomNode] = useState(useRef<HTMLDivElement>(null));\n\n    const [options, setOptions] = useState<Options>({\n        edges: {\n            smooth: {\n                enabled: true,\n                type: \"discrete\",\n                roundness: 0.5\n            },\n            // color: {\n            //     //color:'#848484',\n            //     highlight:'#848484',\n            //     hover: '#d3d2cd',\n            //     inherit: true,\n            //     opacity:1.0\n            // },\n            color: \"#000000\",\n            width: 0.5,\n            arrows: {\n                to: {\n                    enabled: true,\n                    scaleFactor: 0.5\n                }\n            },\n            length: 200\n        },\n        manipulation: {\n            enabled: false,\n            addEdge: function (data: { from: any; to: any; }, callback: (arg0: any) => void) {\n                console.log('add edge', data);\n                callback(data);\n                // after each adding you will be back to addEdge mode\n                setKeyPressed(false)\n\n                props.network.current.disableEditMode()\n                // addEdgeMode();\n            }\n\n        },\n        interaction: {\n            // dragView: false,\n            keyboard: false,\n            dragNodes: false,\n        },\n        layout: {\n         hierarchical: {\n        //  direction: directionInput,\n         treeSpacing:200,\n         direction: 'LR',\n         parentCentralization: false,\n         sortMethod: 'directed',\n         shakeTowards: 'roots'\n        //  directed\n      },\n    },\n        // layout: { improvedLayout: false },\n        nodes: {\n            shapeProperties: {\n                interpolation: false\n            },\n            shape: \"circle\",\n            font: \"18px Roboto black\",\n            labelHighlightBold: false,\n            size: 40,\n            borderWidth: 2,\n            color: {\n                background: \"#ffffff\",\n                border: \"#000000\",\n                highlight: {\n                    border: \"#000000\",\n                    background: \"#ffffff\"\n                }\n            },\n            // color: \"#ffffff\",\n        },\n        physics: {\n            enabled: false\n        }\n    });\n\n    const [contextMenu, setContextMenu] = React.useState<{ mouseX: any, mouseY: any } | null>(null);\n\n    const handleContextMenu = (event: { preventDefault: () => void; clientX: number; clientY: number; }) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n    const handleUserKeyPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (!keyPressed) {\n                console.log('handleUserKeyPress')\n                props.network.current.addEdgeMode();\n                setKeyPressed(true);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n\n    const handleUserKeyUnPress = useCallback(event => {\n        if (event.keyCode === 17) {\n            if (keyPressed) {\n                console.log('handleUserKeyUnPress')\n                props.network.current.disableEditMode();\n                setKeyPressed(false);\n                console.log('-->' + keyPressed)\n            }\n        }\n    }, [keyPressed]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n        window.addEventListener(\"keyup\", handleUserKeyUnPress);\n        \n        console.log('--' + keyPressed)\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n            window.removeEventListener(\"keyup\", handleUserKeyUnPress);\n        };\n    }, [handleUserKeyPress])\n\n    useLayoutEffect(() => {\n\n        if (domNode.current) {\n            props.network.current = new Network(domNode.current, props.data, options);\n            console.log(\"HERE<-domNode.current\")\n        }\n\n        console.log(\"HERE<-\")\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n\n        if (props.network.current) {\n            props.network.current.on('doubleClick', (params: any) => {\n                setKeyPressed(false)\n                props.onDoubleClick(params)\n            })\n            props.network.current.on('click', props.onClick1);\n            props.network.current.on('click', props.onClick2);\n            props.network.current.on('click', props.onClick3);\n            props.network.current.on('click', props.onClick4);\n            props.network.current.on('click', props.onClick4);\n\n            props.network.current.on('dragging', () => {\n                props.network.current.unselectAll();\n            });\n\n\n            props.network.current.on('controlNodeDragging', () => {\n                props.network.current.unselectAll();\n            });\n            \n        }\n\n\n    }, [domNode, props.data, props.network, options]);\n    // \n    const refContainer = () => {\n        return (\n            <div id={\"vnc\"}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}\n                ref={domNode}\n            />\n        );\n    }\n\n    return (\n        props.contextMenu === undefined\n            ?\n            refContainer()\n            :\n            <div onContextMenu={handleContextMenu}\n                style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                }}>\n                {refContainer()}\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    {props.contextMenu(handleClose, handleContextMenu)}\n                </Menu>\n            </div>\n    );\n};","import React, { ReactNode } from 'react';\nimport \"./App.css\"\n// import Graph from \"react-graph-vis\";\nimport {\n    ComputerType,\n    edge,\n    graph,\n    histNode,\n    node\n} from \"./react-graph-vis-types\";\nimport NodeControl from \"./Components/NodeControl/NodeControl\";\nimport EdgeControl from \"./Components/EdgeControl/EdgeControl\";\nimport {\n    computersInfo, decorateGraph, elementsToGraph, getNodeNamePrefix, getTransitionsTitles,\n    graphToElements, transitionsToLabel\n} from \"./utils\";\nimport RunControl from \"./Components/RunControl/RunControl\";\nimport WelcomePopout from \"./Components/WelcomePopout/WelcomePopout\";\nimport Paper from \"@mui/material/Paper\";\nimport SavingPopout from \"./Components/SavingPopout/SavingPopout\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport LoginPage from \"./Components/Pages/LoginPage/LoginPage\";\nimport PingPage from \"./Components/Pages/PingPage/PingPage\";\nimport FailedLoginPage from \"./Components/Pages/FailedLoginPage/FailedLoginPage\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport { TransitionParams } from \"./Logic/IGraphTypes\";\nimport SuccessLoginPage from \"./Components/Pages/SuccessLoginPage/SuccessLoginPage\";\nimport { VisNetwork } from './VisNetwork';\nimport {\n    DataSet,\n    Network,\n    Options,\n    Data,\n} from \"vis-network/standalone/esm/vis-network\";\nimport { Output } from './Logic/Types';\nimport { NonDetermenisticModal, NonMinimizableModal } from './ErrorModal';\nimport { TreeHistory } from './TreeHistory';\n// import {ContextMenu, MenuItem as CotextMenuItem, ContextMenuTrigger} from \"react-contextmenu\";\n\ninterface appProps {\n}\n\nexport type Elements = {\n    nodes: DataSet<node, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\nexport type HistElements = {\n    nodes: DataSet<histNode, \"id\">,\n    edges: DataSet<edge, \"id\">\n}\n\ninterface appState {\n    computerType: null | ComputerType,\n    selectedNode: node | null,\n    selectedEdge: edge | null,\n    inEdgeMode: boolean,\n    elements: Elements,\n    treeElems: HistElements,\n    options: any,\n    initiallyStabilized: boolean,\n    popout: ReactNode | null,\n    savePopoutOpen: boolean,\n    welcomePopoutOpen: boolean,\n    isLogin: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined,\n    wasComputerResetted: boolean,\n    byEmptyStack: boolean,\n    errIsNonDetermenistic: boolean,\n    errIsNonMinimizable: boolean,\n    showTree: boolean,\n    History: (() => JSX.Element)\n}\n\nexport const ComputerTypeContext = React.createContext<null | ComputerType>(null);\n\nexport const computerAction = {\n    init: (() => { }),\n    nfaToDfa: (() => { }),\n    minimizeDfa: (() => { }),\n    mooreToMealy: (() => { }),\n    mealyToMoore: (() => { })\n}\n\nexport const controlAction = {\n    changerByStack: (() => { }),\n    run: (() => { }),\n    step: (() => { }),\n    reset: (() => { }),\n}\n\n// export interface errorAction {\n//     isNonDetermenistic: boolean, \n//     setIsNonDetermenistic: (v: boolean) => void\n// }\n// export const errorAction =  {\n//     isNonDetermenistic: false, \n//     setIsNonDetermenistic: (v: boolean): void => { errorAction.isNonDetermenistic = v }\n// }\n\n\ninterface RibbonProps {\n    computerType: null | ComputerType,\n    wasComputerResetted: boolean,\n    mem: string[] | undefined,\n    ptr: number | undefined\n}\n\nexport const Ribbon = (props: RibbonProps) => {\n    const memRef = React.createRef<HTMLDivElement>()\n    return (\n        props.computerType === \"tm\" && props.wasComputerResetted\n            ?\n            <div className=\"app__mem_ribbon\">\n                {\n                    props.mem?.map((value, index) =>\n                        <div\n                            className=\"app__mem_cell\"\n                            style={{ border: `${index === props.ptr ? \"#0041d0\" : \"#000000\"} 2px solid` }}\n                        >\n                            {Math.abs(Math.abs(index) - Math.abs(props.ptr!)) <= 5\n                                ? <div ref={memRef} />\n                                : <div />\n                            }\n                            {value}\n                            {memRef?.current?.scrollIntoView({ behavior: 'smooth' })}\n                        </div>\n                    )\n                }\n            </div>\n            : <div />\n    )\n}\n\nclass App extends React.Component<appProps, appState> {\n\n    memRef = React.createRef<HTMLDivElement>();\n    network = React.createRef<Network | null>();\n    networkTST = React.createRef<Network | null>();\n\n    constructor(props: appProps) {\n        super(props);\n\n        this.state = {\n            computerType: null,\n\n            selectedNode: null,\n            selectedEdge: null,\n            inEdgeMode: false,\n            elements: { nodes: new DataSet<node>(), edges: new DataSet<edge>() },\n            treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() },\n            options: {\n                edges: {\n                    smooth: {\n                        enabled: true,\n                        type: \"discrete\",\n                        roundness: 0.5\n                    },\n                    length: 200\n                },\n                nodes: {\n                    shape: \"box\",\n                    font: \"18px Roboto black\",\n                    labelHighlightBold: false,\n                    widthConstraint: 40,\n                    color: \"red\",\n                    heightConstraint: 40\n                },\n                physics: {\n                    enabled: false\n                }\n            },\n            initiallyStabilized: false,\n            popout: null,\n            savePopoutOpen: false,\n            welcomePopoutOpen: false,\n            isLogin: true,\n            mem: undefined,\n            ptr: undefined,\n            wasComputerResetted: false,\n            byEmptyStack: false,\n\n            errIsNonDetermenistic: false,\n            errIsNonMinimizable: false,\n\n            showTree: false,\n            History: () => ( <div></div> ),\n            // errorAction: {\n            //     isNonDetermenistic: false, \n            //     setIsNonDetermenistic: (v: boolean): void => { this.setState({ errorAction.isNonDetermenistic = v}) }\n            // }\n        };\n    }\n\n    setIsNonDetermenistic = (v: boolean) => this.setState({ errIsNonDetermenistic: v })\n\n    setIsNonMinimizable = (v: boolean) => this.setState({ errIsNonMinimizable: v })\n\n    componentDidMount() {\n        this.updateGraph();\n        // this.subscribeToShortcuts();\n        this.openWelcomePopout();\n    }\n\n    lastNodeId = 0;\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    subscribeToShortcuts = () => {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            // if (event.key === \"Shift\" && !this.state.inEdgeMode) {\n            //     this.enterEdgeMode();\n            // }\n            if (event.key === \"s\" && event.ctrlKey) {\n                event.preventDefault();\n                this.openSavePopout();\n            }\n        })\n\n        // document.addEventListener(\"keyup\", (event: KeyboardEvent) => {\n        //     if (event.key === \"Shift\" && this.state.inEdgeMode) {\n        //         this.leaveEdgeMode();\n        //     }\n        // })\n    }\n\n    openSavePopout = () => {\n        this.setState({ savePopoutOpen: true });\n    }\n\n    closeSavePopout = () => {\n        this.setState({ savePopoutOpen: false });\n    }\n\n    openWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: true });\n    }\n\n    closeWelcomePopout = () => {\n        this.setState({ welcomePopoutOpen: false });\n    }\n\n    login = () => {\n        this.setState({ isLogin: true });\n    }\n\n    logout = () => {\n        this.setState({ isLogin: false });\n    }\n\n    changePopout = (popout: ReactNode | null) => {\n        this.setState({ popout: popout });\n    }\n\n\n    updateGraph = (): void => {\n        decorateGraph(this.state.elements, this.state.computerType)\n    }\n\n    changeNodeLabel = (id: number, label: string): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                const lableTokens =\n                    label\n                        .split('')\n                        .filter(x => x !== \" \" && x !== \"\\n\")\n                        .join('')\n                        .split('|')\n                const output = lableTokens[1] !== undefined ? lableTokens[1] : \"\"\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    label: label,\n                    output: output\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsAdmit = (id: number, isAdmit: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isAdmit: isAdmit\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    changeStateIsInitial = (id: number, isInitial: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.id === id) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isInitial: isInitial\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n\n    changeStateIsCurrent = (ids: number[], isCurrent: boolean): void => {\n        this.state.elements.nodes.forEach((node) => {\n            if (node.isCurrent) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: false\n                })\n            }\n        })\n        this.state.elements.nodes.forEach((node) => {\n            if (ids.includes(node.id)) {\n                this.state.elements.nodes.update({\n                    id: node.id,\n                    isCurrent: isCurrent\n                })\n            }\n        })\n        this.updateGraph()\n    }\n\n    createNode = (e: { pointer: { canvas: { x: any; y: any; }; }; }) => {\n        this.lastNodeId++;\n        const node = {\n            id: this.lastNodeId,\n            label: 'S' + (this.lastNodeId),\n            x: e.pointer.canvas.x,\n            y: e.pointer.canvas.y,\n            isAdmit: false,\n            isInitial: false,\n            isCurrent: false,\n        }\n        this.state.elements.nodes.add(node);\n    }\n\n    lastHistNodeId = 0\n\n    createHistNode = (idd: number, label: string, isAdmit: boolean, isInitial: boolean, isCurrent: boolean) => {\n        this.lastHistNodeId++;\n\n        const node: histNode = {\n            id: this.lastHistNodeId,\n            idd,\n            label,\n            isAdmit,\n            isInitial,\n            isCurrent\n        }\n        this.state.treeElems.nodes.add(node);\n    }\n\n    createHistEdge = (from: number, to: number, by: any) => {\n        const transitions = new Set([[{ title: by }]])\n\n        this.state.treeElems.edges.add({\n            from: from,\n            to: to,\n            transitions: transitions,\n            label: this.state.computerType !== 'mealy' && this.state.computerType !== 'dmealy' \n                ? transitionsToLabel(transitions, this.state.computerType)\n                : by\n                // transitionsToLabel(transitions, this.state.computerType)\n        })\n    }\n\n    getLastHistNodeId = () => this.lastHistNodeId\n\n    resetHistTree = () => {\n        for (let i = 0; i <= this.lastHistNodeId; i++) {\n            this.state.treeElems.nodes.remove(i)\n        }\n        this.state.treeElems.edges.forEach((e) => this.state.treeElems.edges.remove(e.id!))\n        this.lastHistNodeId = 0;\n        // this.state.treeElems.nodes.remove()\n        // this.state.treeElems.edges.clear()\n        // this.setState({\n        //     treeElems: { nodes: new DataSet<histNode>(), edges: new DataSet<edge>() }\n        // })\n    }\n\n    selectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        const selectedNodes = this.state.elements.nodes.get(nodesIDs);\n        this.setState({ selectedNode: selectedNodes[0] });\n    }\n\n\n    deselectNode = (e: { nodes: number[]; }): void => {\n        const nodesIDs: number[] = e.nodes;\n        if (nodesIDs.length === 0) {\n            this.setState({ selectedNode: null });\n        }\n    }\n\n    deleteNode = (id: number): void => {\n        this.state.elements.nodes.remove(id)\n\n        let rmEdges: string[] = []\n        this.state.elements.edges.forEach((edge) => {\n            if (edge.from === id || edge.to === id) {\n                rmEdges.push(edge.id!)\n            }\n        })\n        this.state.elements.edges.remove(rmEdges)\n    }\n\n    selectEdge = (e: { edges: any; }): void => {\n        const edgesIDs: number[] = e.edges;\n        const selectedEdges = this.state.elements.edges.get(edgesIDs);\n        this.setState({ selectedEdge: selectedEdges[0] });\n        console.log('click1  = selectEdge')\n    }\n\n    deselectEdge = (e: { edges: number[]; }): void => {\n        const edgesIDs: number[] = e.edges;\n        if (edgesIDs.length === 0) {\n            this.setState({ selectedEdge: null });\n        }\n    }\n\n\n    changeEdgeTransition = (id: string, transitions: Set<TransitionParams[]>): void => {\n        this.state.elements.edges.update({\n            id: id,\n            label: transitionsToLabel(transitions, this.state.computerType),\n            transitions: transitions\n        })\n    }\n\n    deleteEdge = (id: string): void => {\n        this.state.elements.edges.remove(id)\n    }\n\n    updMem = (mem: string[], ptr: number): void => {\n        this.setState({ mem: mem, ptr: ptr });\n    }\n\n    NFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.nfaToDfa}\n                    >\n                        {\"НКА->ДКА\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    treeVisible = () => {\n        this.setState({ showTree: !this.state.showTree})\n        return !this.state.showTree\n    }\n\n    treeContextInfo = () => (this.state.showTree ? \"Закрыть\" : \"Открыть\") + \" дерево вычислений\"\n\n    DFAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.minimizeDfa}\n                    >\n                        {\"Минимизровать\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={this.treeVisible}\n                    >\n                        {this.treeContextInfo()}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MealyContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mealyToMoore}\n                    >\n                        {\"Мур\"}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    MooreContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={computerAction.mooreToMealy}\n                    >\n                        {\"Мили\"}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    PDAContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.changerByStack}\n\n                    >\n                        {this.state.byEmptyStack ? \"По стеку\" : \"По состоянию\"}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    AnotherContextMenu = (handleContextMenu: any, handleClose: any) => {\n        return (\n            <div onContextMenu={handleContextMenu}>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.step}\n                    >\n                        {\"Шаг\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.run}\n                    >\n                        {\"Запуск\"}\n                    </button>\n                </div>\n                <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                        onClick={controlAction.reset}\n                    >\n                        {\"Сброс\"}\n                    </button>\n                </div>\n                {/* <div onClick={handleClose}>\n                    <button\n                        className={\"button-context-menu\"}\n                    >\n                        {\"Just-button\"}\n                    </button>\n                </div> */}\n            </div>\n        )\n    }\n\n    ContextMenu = (computerType: null | ComputerType) => {\n        switch (computerType) {\n            case \"nfa\":\n            case \"nfa-eps\": {\n                return this.NFAContextMenu\n            }\n            case \"dfa\": {\n                return this.DFAContextMenu\n            }\n            case \"mealy\":\n            case \"dmealy\": {\n                return this.MealyContextMenu\n            }\n            case \"moore\":\n            case \"dmoore\": {\n                return this.MooreContextMenu\n            }\n            case \"pda\":\n            case \"dpda\": {\n                return this.PDAContextMenu\n            }\n            default: {\n                return this.AnotherContextMenu\n            }\n        }\n    }\n\n\n\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/login\">\n                        <LoginPage />\n                    </Route>\n                    <Route path=\"/ping\">\n                        <PingPage />\n                    </Route>\n                    <Route path=\"/failed-login\">\n                        <FailedLoginPage />\n                    </Route>\n                    <Route path=\"/success-login\">\n                        <SuccessLoginPage onAuthSuccess={this.login} />\n                    </Route>\n                    <Route path=\"/\">\n                        <ComputerTypeContext.Provider value={this.state.computerType}>\n                            <div className=\"app\">\n                                <WelcomePopout\n                                    open={this.state.welcomePopoutOpen}\n                                    onClose={this.closeWelcomePopout}\n                                    onAuthFailed={this.logout}\n                                    changeComputerType={(computerType, graph: graph | null) => {\n\n                                        const defaultGraph = graph || computersInfo[computerType!].defaultGraph;\n\n                                        console.log(defaultGraph);\n                                        console.log(defaultGraph[\"nodes\"]);\n                                        graphToElements(defaultGraph).nodes.forEach((v) => console.log(v))\n\n                                        this.lastNodeId = defaultGraph.nodes.length;\n                                        this.setState({\n                                            computerType: computerType,\n                                            elements: graphToElements(defaultGraph)\n                                        }\n                                            , () => this.updateGraph()\n                                        );\n                                    }}\n                                />\n\n                                {this.state.popout}\n\n                                <SavingPopout open={this.state.savePopoutOpen}\n                                    onClose={this.closeSavePopout}\n                                    isLogin={this.state.isLogin}\n                                    onAuthFailed={this.logout}\n                                    graph={elementsToGraph(this.state.elements)}\n                                    computerType={this.state.computerType!} />\n                                <div className=\"history-container\">\n                                    {this.state.History()}\n                                </div>\n                                <div className=\"hint-container\">\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Ctrl+S — сохранить автомат\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Удерживайте Ctrl чтобы создать ребро\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        Двойное нажатие чтобы создать вершину\n                                    </Paper>\n                                    <Paper className=\"hint\" variant=\"outlined\">\n                                        ПКМ для открытия контекстного меню\n                                    </Paper>\n                                </div>\n                                <NonDetermenisticModal\n                                    isNonDetermenistic={this.state.errIsNonDetermenistic}\n                                    setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                />\n                                <NonMinimizableModal\n                                    isNonMinimizable={this.state.errIsNonMinimizable}\n                                    setIsNonMinimizable={this.setIsNonMinimizable}\n                                />\n                                <Ribbon\n                                    computerType={this.state.computerType}\n                                    wasComputerResetted={this.state.wasComputerResetted}\n                                    mem={this.state.mem}\n                                    ptr={this.state.ptr}\n                                />\n\n                                <AppHeader\n                                    onMenuButtonClicked={this.openWelcomePopout}\n                                    onSaveButtonClicked={this.openSavePopout}\n                                    onLogoutButtonClicked={this.logout}\n                                    isLogin={this.state.isLogin}\n                                />\n\n\n                                <div className=\"field__container\">\n                                    <VisNetwork\n                                        nodes={this.state.elements.nodes}\n                                        edges={this.state.elements.edges}\n                                        data={this.state.elements}\n                                        onDoubleClick={this.createNode}\n                                        onClick1={this.selectEdge}\n                                        onClick2={this.selectNode}\n                                        onClick3={this.deselectNode}\n                                        onClick4={this.deselectEdge}\n                                        network={this.network}\n                                        contextMenu={this.ContextMenu(this.state.computerType)}\n                                    />\n                                </div>\n\n                                {this.state.showTree ?\n                                    <div className=\"eval-tree\">\n                                        <TreeHistory\n                                            nodes={this.state.treeElems.nodes}\n                                            edges={this.state.treeElems.edges}\n                                            data={this.state.treeElems}\n                                            onDoubleClick={this.createNode}\n                                            onClick1={this.selectEdge}\n                                            onClick2={this.selectNode}\n                                            onClick3={this.deselectNode}\n                                            onClick4={this.deselectEdge}\n                                            network={this.networkTST}\n                                            contextMenu={this.ContextMenu(this.state.computerType)}\n                                        />\n                                    </div>\n                                    : <div />}\n                                <div className=\"app__right-menu\">\n                                    <NodeControl\n                                        node={this.state.selectedNode}\n                                        changeNodeLabel={this.changeNodeLabel}\n                                        changeStateIsAdmit={this.changeStateIsAdmit}\n                                        changeStateIsInitial={this.changeStateIsInitial}\n                                        deleteNode={this.deleteNode}\n                                        reinitComputer={computerAction.init}\n\n                                    />\n                                    <EdgeControl\n                                        edge={this.state.selectedEdge}\n                                        changeEdgeTransitions={this.changeEdgeTransition}\n                                        deleteEdge={this.deleteEdge}\n                                        computerType={this.state.computerType}\n                                        reinitComputer={computerAction.init}\n                                    />\n                                     \n                                    <RunControl\n                                        updMem={this.updMem}\n                                        elements={this.state.elements}\n                                        treeElems={this.state.treeElems}\n                                        createHistNode={this.createHistNode}\n                                        createHistEdge={this.createHistEdge}\n                                        getLastHistNodeId={this.getLastHistNodeId}\n                                        resetHistTree={this.resetHistTree}\n                                        changeStateIsCurrent={this.changeStateIsCurrent}\n                                        network={this.network}\n                                        setInit={(f: () => void) => computerAction.init = f}\n                                        setNfaToDfa={(f: () => void) => computerAction.nfaToDfa = f}\n                                        setMinimizeDfa={(f: () => void) => computerAction.minimizeDfa = f}\n                                        setMooreToMealy={(f: () => void) => computerAction.mooreToMealy = f}\n                                        setMealyToMoore={(f: () => void) => computerAction.mealyToMoore = f}\n                                        updateElements={(elements: Elements) => this.setState({ elements: elements }, () => this.updateGraph())}\n                                        setComputerType={(type: null | ComputerType) => this.setState({ computerType: type })}\n                                        setResettedStatus={(status: boolean) => this.setState({ wasComputerResetted: status })}\n                                        setByEmptyStack={(byEmptyStack: boolean) => this.setState({ byEmptyStack: byEmptyStack })}\n                                        setChangerByStack={(f: () => void) => controlAction.changerByStack = f}\n                                        setRun={(f: () => void) => controlAction.run = f}\n                                        setStep={(f: () => void) => controlAction.step = f}\n                                        setReset={(f: () => void) => controlAction.reset = f}\n                                        setHistory={(jsx: () => JSX.Element) => this.setState({ History: jsx })}\n                                        setIsNonDetermenistic={this.setIsNonDetermenistic}\n                                        setIsNonMinimizable={this.setIsNonMinimizable}\n                                        treeContextInfo={this.treeContextInfo}\n                                        treeVisible={this.treeVisible}\n                                    />\n                                     \n                                </div>\n                                \n                            </div>\n                        </ComputerTypeContext.Provider>\n                    </Route>\n                </Switch>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default App;","import React, {createRef, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","\"use strict\";\nexports.__esModule = true;\nvar Move;\n(function (Move) {\n    Move[Move[\"L\"] = 0] = \"L\";\n    Move[Move[\"R\"] = 1] = \"R\";\n})(Move = exports.Move || (exports.Move = {}));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar NonDeterministic = /** @class */ (function (_super) {\n    __extends(NonDeterministic, _super);\n    function NonDeterministic() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonDeterministic';\n        Object.setPrototypeOf(_this, NonDeterministic.prototype);\n        return _this;\n    }\n    return NonDeterministic;\n}(Error));\nexports.NonDeterministic = NonDeterministic;\nvar NonMinimizable = /** @class */ (function (_super) {\n    __extends(NonMinimizable, _super);\n    function NonMinimizable() {\n        var _this = _super.call(this) || this;\n        _this.name = 'NonMinimizable';\n        Object.setPrototypeOf(_this, NonMinimizable.prototype);\n        return _this;\n    }\n    return NonMinimizable;\n}(Error));\nexports.NonMinimizable = NonMinimizable;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Computer_1 = require(\"./Computer\");\nvar Stack_1 = require(\"./Stack\");\nvar lodash_1 = require(\"lodash\");\nvar Exceptions_1 = require(\"./Exceptions\");\nvar PDA = /** @class */ (function (_super) {\n    __extends(PDA, _super);\n    // isDeterministic0(): boolean {\n    //     let ret = true\n    //     this.matrix.forEach(value => {\n    //         value.forEach(value1 => {\n    //             if (value1.length > 1) {\n    //                 let tmp: statementCell = value1[0]\n    //                 value1.forEach((value2, index) => {\n    //                     if (index !== 0 && tmp.stackDown === undefined && value2.stackDown || index !== 0 && tmp.stackDown === value2.stackDown ) {\n    //                         ret = false\n    //                     }\n    //                 })\n    //             }\n    //         })\n    //     })\n    //     return ret && (!this.haveEpsilon())\n    // }\n    function PDA(graph, startStatements, input, byEmpty) {\n        var _this = _super.call(this, graph, startStatements) || this;\n        _this.stack = new Stack_1.Stack();\n        _this.setInput = function (input) {\n            _this.input = [];\n            input.forEach(function (value) {\n                _this.input.push({ idLogic: _this.alphabet.get(value), value: value });\n            });\n            _this.restart();\n        };\n        _this.haveEpsilon = function () {\n            return _this.epsId !== undefined;\n        };\n        _this.byEmptyStackAdmt = function (isAdmt) {\n            _this.admitByEmptyStack = isAdmt;\n        };\n        _this.treeHist = [];\n        _this.pdaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            _this.treeHist = ret.tree ? ret.tree : [];\n            console.log(\"STEP stck: \");\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return console.log(value1.stack); }); });\n            console.log(\"STEP admit: \");\n            console.log(ret.isAdmit);\n            return ret;\n        };\n        _this.pdaRun = function () {\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            var histUnit = [];\n            var histTrace = [];\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var last = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: last.byEpsPred, byLetter: last.byLetter, byEpsAfter: last.byEpsAfter });\n            var ret = {\n                nodes: last.nodes,\n                counter: last.counter,\n                isAdmit: last.isAdmit,\n                history: last.history,\n                histTrace: histTrace\n            };\n            return ret;\n        };\n        _this.step = _this.pdaStep;\n        _this.run = _this.pdaRun;\n        // (): Step => {\n        //     return { counter: 0, history: [], isAdmit: false, nodes: [] }\n        // }\n        // this.pdaRun\n        _this._step = function (counter, tr, histori, unitHsit, histTrace) {\n            var byEpsPred = [];\n            var byEpsAfter = [];\n            var byLetter = [];\n            var newPosSet = [];\n            var updCurPos = function () {\n                _this.curPosition = [];\n                newPosSet.forEach(function (value) { return _this.curPosition.push(value); });\n                newPosSet = [];\n            };\n            var epsStep = function () {\n                _this.curPosition.forEach(function (value) {\n                    var _a;\n                    var pPos = _this.epsilonStep(value.stmt.idLogic, (_a = value.stack) === null || _a === void 0 ? void 0 : _a.peek(), value.stack, unitHsit);\n                    pPos === null || pPos === void 0 ? void 0 : pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var letterSter = function () {\n                _this.curPosition.forEach(function (value) {\n                    var pPos = _this.letterStep(tr, value.stmt.idLogic, value.stack.peek(), value.stack, unitHsit);\n                    pPos.forEach(function (value1) { return newPosSet.push(value1); });\n                });\n            };\n            var rmRepeations = function () {\n                var htable = new Map();\n                var positions = [];\n                _this.curPosition.forEach(function (value) {\n                    var v = {\n                        stmt: value.stmt, stack: value.stack\n                    };\n                    if (htable.get(JSON.stringify(v)) === undefined) {\n                        positions.push(value);\n                        htable.set(JSON.stringify(v), value);\n                    }\n                });\n                _this.curPosition = [];\n                positions.forEach(function (value) { return _this.curPosition.push(value); });\n            };\n            if (_this.epsId !== undefined) {\n                epsStep();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsPred.push(v); });\n            }\n            if (counter < _this.input.length) {\n                letterSter();\n                updCurPos();\n                rmRepeations();\n                _this.toNodes(_this.curPosition).forEach(function (v) { return byLetter.push(v); });\n                if (_this.epsId !== undefined) {\n                    epsStep();\n                    updCurPos();\n                    rmRepeations();\n                    _this.toNodes(_this.curPosition).forEach(function (v) { return byEpsAfter.push(v); });\n                }\n            }\n            else {\n                rmRepeations();\n                // console.log(\":::::::::::::::::::\")\n                // this.curPosition.forEach(value => {\n                //     console.log(value.stmt)\n                //     console.log(value.stack)\n                // })\n                // console.log(\":::::::::::::::::::\")\n                _this.treeHist.push(unitHsit);\n                histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n                return {\n                    nodes: _this.toNodes(_this.curPosition),\n                    counter: counter,\n                    isAdmit: _this.haveAdmitting(_this.curPosition),\n                    history: histori,\n                    tree: _this.treeHist,\n                    byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                    histTrace: []\n                };\n            }\n            rmRepeations();\n            // console.log(\":::::::::::::::::::\")\n            // this.curPosition.forEach(value => {\n            //     console.log(value.stmt)\n            //     console.log(value.stack)\n            // })\n            // console.log(\":::::::::::::::::::\")\n            histori.push({ nodes: _this.toNodes(_this.curPosition), by: _this.input[counter].value });\n            counter++;\n            _this.treeHist.push(unitHsit);\n            histTrace.push({ byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter });\n            return {\n                nodes: _this.toNodes(_this.curPosition),\n                counter: counter,\n                isAdmit: _this.haveAdmitting(_this.curPosition),\n                history: histori,\n                tree: _this.treeHist,\n                byEpsPred: byEpsPred, byEpsAfter: byEpsAfter, byLetter: byLetter,\n                histTrace: []\n            };\n        };\n        _this.restart = function () {\n            _this.counterSteps = 0;\n            _this.historiStep = [];\n            _this.curPosition = [];\n            _this.treeHist = [];\n            _this.startStatements.forEach(function (value) {\n                var stack = new Stack_1.Stack();\n                stack.push(Computer_1.BOTTOM);\n                _this.curPosition.push({\n                    stmt: _this.statements.get(value.id),\n                    stack: stack\n                });\n            });\n        };\n        // move to Nfa\n        _this.nfaToDfa = function () {\n            var nextStepPosition = function (position, by) {\n                return _this.cellMatrix(position.stmt.idLogic, by).map(function (v) { return ({ stmt: v }); });\n            };\n            var _nextStepPositions = function (positions, by) {\n                var acc = [];\n                positions.map(function (v) {\n                    return nextStepPosition(v, by);\n                }).forEach(function (ps) {\n                    return ps.forEach(function (p) { return acc.push(p); });\n                });\n                return acc;\n            };\n            var nextStepPositions = function (positions, by) {\n                var afterEps = function (positions) {\n                    if (_this.epsId === undefined) {\n                        return positions;\n                    }\n                    var acc = [];\n                    var EPStack = new Stack_1.Stack();\n                    EPStack.push(Computer_1.EPS);\n                    positions.forEach(function (position) {\n                        var tmp = _this.epsilonStep(position.stmt.idLogic, Computer_1.EPS, EPStack, []);\n                        if (tmp !== undefined) {\n                            acc.push(tmp);\n                        }\n                    });\n                    var flatted = [];\n                    acc.forEach(function (ps) { return ps.forEach(function (p) { return flatted.push(p); }); });\n                    return flatted;\n                };\n                return afterEps(_nextStepPositions(afterEps(positions), by));\n            };\n            var pop = function () { return stack.shift(); };\n            var push = function (v) {\n                stack.push(v);\n            };\n            var stack = [];\n            var table = [];\n            var set = new ImSet();\n            var startPos = _this.curPosition;\n            _this.restart();\n            push(startPos);\n            var _loop_1 = function () {\n                var head = pop();\n                var acc = [];\n                if (head === undefined || head.length === 0) {\n                    return \"break\";\n                }\n                if (set.has(head)) {\n                    return \"continue\";\n                }\n                set.add(head.map(function (v) { return ({\n                    stmt: {\n                        id: v.stmt.id,\n                        idLogic: v.stmt.idLogic,\n                        isAdmit: v.stmt.isAdmit\n                    },\n                    stack: undefined\n                }); }));\n                _this.alphabet.forEach(function (value) {\n                    if (value !== _this.epsId) {\n                        var to = nextStepPositions(head, value);\n                        var _to = to.map(function (v) { return ({\n                            stmt: {\n                                id: v.stmt.id,\n                                idLogic: v.stmt.idLogic,\n                                isAdmit: v.stmt.isAdmit\n                            },\n                            stack: undefined\n                        }); });\n                        acc.push(_to);\n                        if (to.length > 0 && !set.has(to) && !set.has(_to)) {\n                            push(_to);\n                        }\n                    }\n                });\n                table.push(acc);\n            };\n            while (stack.length > 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n            var _edges = [];\n            table.forEach(function (ps, from) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    if (tr !== _this.epsId && ps[tr].length !== 0) {\n                        console.log(ps[tr]);\n                        console.log(from, set.getIter(ps[tr]));\n                        _edges.push({\n                            from: from,\n                            to: set.getIter(ps[tr]),\n                            transitions: new Set([[{ title: letter }]])\n                        });\n                    }\n                });\n            });\n            var nodes = set.getStorage().map(function (v) { return ({\n                id: set.getIter(v),\n                isAdmit: _this.haveAdmitting(v)\n            }); });\n            var edges = [];\n            _edges.sort(function (a, b) { return a.from - b.from || a.to - b.to; });\n            for (var i = 0; i < _edges.length; i++) {\n                var acc = [];\n                var delta = 0;\n                for (var j = i; j < _edges.length; j++) {\n                    if (_edges[i].from === _edges[j].from && _edges[i].to === _edges[j].to) {\n                        acc.push(Array.from(_edges[j].transitions)[0][0]);\n                        delta++;\n                    }\n                }\n                edges.push({\n                    from: _edges[i].from,\n                    to: _edges[i].to,\n                    transitions: new Set([acc])\n                });\n                i += delta - 1;\n            }\n            return { nodes: nodes, edges: edges };\n        };\n        //https://www.usna.edu/Users/cs/wcbrown/courses/F17SI340/lec/l22/lec.html\n        _this.minimizeDfa = function () {\n            _this.restart();\n            var startId = _this.curPosition[0].stmt.idLogic;\n            var cutBy = function (by) {\n                var acc = [];\n                _this.matrix.forEach(function (_, it) { return acc.push(_this.cellMatrix(it, by)[0]); });\n                return acc;\n            };\n            var _lookUp = function (group) { return function (id) {\n                return group[id];\n            }; };\n            var _getJump = function (table) { return function (by) { return function (id) {\n                return table[by][id];\n            }; }; };\n            var createTableT = function (zero) {\n                var lookUp = _lookUp(zero);\n                var table = [];\n                _this.alphabet.forEach(function (tr) {\n                    var acc = [];\n                    var cutted = cutBy(tr);\n                    cutted.forEach(function (cell) {\n                        acc.push(lookUp(cell.idLogic));\n                    });\n                    table.push(acc);\n                });\n                return table;\n            };\n            var _updateGroups = function (zero) { return function (groups) { return function (getJump) { return function (group) {\n                var jmpGrp = getJump(group[0].node.idLogic).number;\n                var newGrp = [];\n                var newNumber = groups.length + 1;\n                var toRm = [];\n                group.forEach(function (value, index) {\n                    if (getJump(value.node.idLogic).number !== jmpGrp) {\n                        value.number = newNumber;\n                        toRm.push(value.node.idLogic);\n                        newGrp.push(value);\n                    }\n                });\n                for (var i = 0; i < group.length; i++) {\n                    if (toRm.includes(group[i].node.idLogic)) {\n                        group.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (newGrp.length > 0) {\n                    groups.push(newGrp);\n                    return { fst: group, snd: newGrp };\n                }\n                return { fst: [], snd: [] };\n            }; }; }; };\n            var stack = [];\n            var pop = function () { return stack.shift(); };\n            var push = function (v) { return stack.push(v); };\n            var zero = [];\n            var first = [];\n            var second = [];\n            _this.statements.forEach(function (statement) {\n                var element = { number: -1, node: { idLogic: -1, id: -1, isAdmit: false } };\n                if (statement.isAdmit) {\n                    element = { number: 1, node: statement };\n                    first.push(element);\n                }\n                else {\n                    element = { number: 2, node: statement };\n                    second.push(element);\n                }\n                zero.push(element);\n            });\n            var byEveryLetter = _this.matrix.reduce(function (acc, line) {\n                return acc && line.reduce(function (accLine, cells) { return accLine && cells.length > 0; }, acc);\n            }, true);\n            if (first.length < 1 || !byEveryLetter) {\n                console.log('CATHTHT');\n                throw new Exceptions_1.NonMinimizable();\n            }\n            // плюс если есть пробелы в таблице!\n            var groups = [];\n            groups.push(first);\n            groups.push(second);\n            var table = createTableT(zero);\n            _this.alphabet.forEach(function (tr) {\n                groups.forEach(function (stmt) { return push(stmt); });\n                var getJump = _getJump(table)(tr);\n                var updateGroups = _updateGroups(zero)(groups)(getJump);\n                while (stack.length > 0) {\n                    var head = pop();\n                    if (head === undefined) {\n                        break;\n                    }\n                    var newGrp = updateGroups(head);\n                    if (newGrp.fst.length > 0) {\n                        push(newGrp.fst);\n                        push(newGrp.snd);\n                    }\n                }\n            });\n            var toPositions = function (group) { return group.map(function (g) { return ({ stmt: g.node }); }); };\n            var grpAfterJmp = function (group, by) { return _getJump(table)(by)(group[0].node.idLogic).number; };\n            var nodes = groups.map(function (group) { return ({ id: group[0].number, isAdmit: _this.haveAdmitting(toPositions(group)) }); });\n            var edges = groups.reduce(function (acc, g) {\n                _this.alphabet.forEach(function (tr, letter) {\n                    acc.push({\n                        from: g[0].number,\n                        to: grpAfterJmp(g, tr),\n                        transitions: new Set([[{ title: letter }]])\n                    });\n                });\n                return acc;\n            }, []);\n            console.log(nodes);\n            var startGrp = groups.filter(function (g) {\n                var gIds = g.map(function (v) { return v.node.idLogic; });\n                return gIds.includes(startId);\n            });\n            var start = nodes[startGrp[0][0].number - 1];\n            return { graphcore: { nodes: nodes, edges: edges }, start: start };\n        };\n        _this.admitByEmptyStack = byEmpty;\n        _this.epsId = _this.alphabet.get(Computer_1.EPS);\n        // this.createMatrix()\n        // this.matrix.forEach(value => {\n        //     value.forEach(value1 => value1.forEach(value2 => {\n        //         console.log(value2.idLogic)\n        //         console.log(value2.stackDown)\n        //         console.log(value2.stackPush)\n        //         console.log(value2.stack)\n        //\n        //     }))\n        // })\n        _this.stack.push(Computer_1.BOTTOM);\n        _this.curPosition = []; //{stack: new Stack<string>(), stmt: startStatements}\n        _this.treeHist = [];\n        startStatements.forEach(function (value) {\n            var stack = new Stack_1.Stack();\n            stack.push(Computer_1.BOTTOM);\n            _this.curPosition.push({\n                stmt: _this.statements.get(value.id),\n                stack: stack\n            });\n        });\n        _this.setInput(input);\n        if (_this.epsId) { //\n            _this.curPosition.forEach(function (value) {\n                _this.cycleEps(value.stmt.idLogic, value.stack);\n            });\n            ////// this.cycleEps(this.curPosition[0].stmt.idLogic, this.curPosition[0].stack!)\n        } //\n        console.log('-------------------------');\n        console.log(_this.isDeterministic());\n        console.log(\"ALPHBT\");\n        _this.alphabet.forEach(function (value, key) { return console.log(value, key); });\n        console.log(\"STMTS\");\n        _this.statements.forEach(function (value) { return console.log(value); });\n        console.log(\"MTX\");\n        _this.matrix.forEach(function (value) {\n            console.log();\n            value.forEach(function (value1) { return console.log(value1); });\n        });\n        console.log('-------------------------');\n        return _this;\n    }\n    PDA.prototype.copyPushList = function (value) {\n        var _a;\n        var cpy = [];\n        (_a = value.stackPush) === null || _a === void 0 ? void 0 : _a.forEach(function (value) { return cpy.push(value); });\n        return cpy;\n    };\n    PDA.prototype.pushReverse = function (pushVals, stack) {\n        pushVals.reverse().forEach(function (value) {\n            stack.push(value);\n        });\n    };\n    PDA.prototype.pushTopToNewStack0 = function (newStack, value) {\n        newStack.pop();\n        var pushVals = this.copyPushList(value);\n        this.pushReverse(pushVals, newStack);\n    };\n    PDA.permute0 = function (permutation) {\n        var r = lodash_1.cloneDeep(permutation);\n        function cmp(a, b) {\n            if (a.stackDown && b.stackDown) {\n                if (a.stackDown < b.stackDown) {\n                    return -1;\n                }\n                if (a.stackDown > b.stackDown) {\n                    return 1;\n                }\n                return 0;\n            }\n            return 0;\n        }\n        r = r.sort(cmp);\n        var tmp = [];\n        var _tmp = [];\n        var dwn = r[0].stackDown;\n        for (var i = 0; i < r.length; i++) {\n            if (r[i].stackDown === dwn) {\n                _tmp.push(r[i]);\n            }\n            else {\n                tmp.push(_tmp);\n                dwn = r[i].stackDown;\n                _tmp = [];\n                _tmp.push(r[i]);\n            }\n        }\n        tmp.push(_tmp);\n        var ret = [];\n        var _detour = function (lvl, cur, acc) {\n            if (lvl < tmp.length) {\n                for (var i = 0; i < tmp[lvl].length; i++) {\n                    var a = lodash_1.cloneDeep(acc);\n                    a.push(tmp[lvl][i]);\n                    _detour(lvl + 1, i, a);\n                }\n            }\n            else {\n                ret.push(acc);\n            }\n        };\n        _detour(0, 0, []);\n        return ret;\n    };\n    PDA.permute = function (permutation) {\n        var length = permutation.length;\n        var result = [permutation.slice()];\n        var c = new Array(length).fill(0);\n        var i = 1;\n        var k;\n        var p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = permutation[i];\n                permutation[i] = permutation[k];\n                permutation[k] = p;\n                c[i]++;\n                i = 1;\n                result.push(permutation.slice());\n            }\n            else {\n                c[i] = 0;\n                i++;\n            }\n        }\n        return result;\n    };\n    PDA.prototype.rmRepetitions = function (htable, value, positions, idLogic, newStack) {\n        var wasCreated = function (hash) {\n            return htable.get(hash) !== undefined;\n        };\n        if (!wasCreated(JSON.stringify(value))) {\n            positions.push({ stmt: this.statements.get(idLogic), stack: newStack });\n            htable.set(JSON.stringify({ stmt: this.statements.get(idLogic), stack: newStack }), { stmt: this.statements.get(idLogic), stack: newStack });\n        }\n    };\n    PDA.prototype.cycleEps = function (curLId, stack0) {\n        var _this = this;\n        var htable = new Map();\n        var positions = [];\n        var visited = [];\n        this.cellMatrix(curLId, this.epsId).forEach(function () { return visited.push(false); });\n        var permutes = this.cellMatrix(curLId, this.epsId)[0] !== undefined\n            ? PDA.permute0(this.cellMatrix(curLId, this.epsId))\n            : [(this.cellMatrix(curLId, this.epsId))];\n        // permutes.push(this.cellMatrix(curLId, this.epsId))\n        // let permutes: statementCell[][] = PDA.permute(this.cellMatrix(curLId, this.epsId))\n        var cycle = function (cell, idx, idLogic, stack) {\n            visited[idx] = true;\n            cell.forEach(function (value, index) {\n                if (value.idLogic === idLogic) {\n                    if (value.stackDown === stack.peek()) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchPushEpsVal(value, newCycleStack); //\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                    else if (value.stackDown === Computer_1.EPS) {\n                        var newCycleStack = stack.cpyTo(new Stack_1.Stack());\n                        _this.matchDownEpsVal(value, newCycleStack);\n                        _this.rmRepetitions(htable, { stmt: _this.statements.get(idLogic), stack: newCycleStack }, positions, idLogic, newCycleStack);\n                        if (!visited[index]) {\n                            cycle(cell, index, idLogic, newCycleStack);\n                        }\n                    }\n                }\n            });\n        };\n        permutes.forEach(function (value) {\n            for (var i = 0; i < visited.length; i++) {\n                visited[i] = false;\n            }\n            cycle(value, 0, curLId, stack0);\n        });\n        return positions;\n    };\n    PDA.prototype.epsilonStep = function (curLId, stackDown, stack, hist) {\n        var _this = this;\n        if (this.epsId === undefined) {\n            return;\n        }\n        var visited = [];\n        for (var i = 0; i < this.statements.size; i++) {\n            visited.push(false);\n        }\n        var dfs = function (id, stack, stDwn, elements) {\n            _this.cycleEps(id, stack).forEach(function (value) {\n                elements.push({\n                    idLogic: id,\n                    top: value.stack\n                });\n            });\n            elements.push({\n                idLogic: id,\n                top: stack\n            });\n            visited[id] = true;\n            for (var i = 0; i < _this.matrix[id][_this.epsId].length; i++) {\n                if (!visited[_this.cellMatrix(id, _this.epsId)[i].idLogic]) {\n                    switch (_this.cellMatrix(id, _this.epsId)[i].stackDown) {\n                        case stDwn: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchPushEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                        case Computer_1.EPS: {\n                            var newStack = stack.cpyTo(new Stack_1.Stack());\n                            _this.matchDownEpsVal(_this.cellMatrix(id, _this.epsId)[i], newStack);\n                            dfs(_this.cellMatrix(id, _this.epsId)[i].idLogic, newStack, newStack.peek(), elements);\n                            break;\n                        }\n                    }\n                }\n            }\n            return elements;\n        };\n        var histUnit = [];\n        var endsOfEpsWay = dfs(curLId, stack, stackDown, []);\n        var positions = [];\n        for (var i = 0; i < endsOfEpsWay.length; i++) {\n            var stmt = this.statements.get(this.nodes[endsOfEpsWay[i].idLogic].id);\n            positions.push({\n                stmt: stmt, stack: endsOfEpsWay[i].top,\n                from: this.nodes[curLId],\n                cur: this.nodes[stmt.idLogic],\n                by: Computer_1.EPS\n                //?\n            });\n            hist.push({ by: Computer_1.EPS, from: this.nodes[curLId], value: this.nodes[stmt.idLogic] });\n        }\n        // hist.push(histUnit)\n        return positions;\n    };\n    PDA.prototype.matchPushEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS) {\n            if (value.stackPush.length !== 1) {\n                throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n            }\n            else {\n                newStack.pop();\n            }\n        }\n        else {\n            this.pushTopToNewStack0(newStack, value);\n        }\n    };\n    PDA.prototype.matchDownEpsVal = function (value, newStack) {\n        if (value.stackPush[0] === Computer_1.EPS && value.stackPush.length !== 1) {\n            throw Error(\"pushing list should be consist by [EPS] for 'pop'\");\n        }\n        else if (value.stackPush[0] !== Computer_1.EPS) {\n            var pushVals = this.copyPushList(value);\n            this.pushReverse(pushVals, newStack);\n        }\n    };\n    PDA.prototype.letterStep = function (transformedInput, curLId, stackDown, stack, hist) {\n        var _this = this;\n        var positions = [];\n        var histUnit = [];\n        var getLetter = function (id) {\n            var ret;\n            _this.alphabet.forEach(function (v, k) {\n                if (id === v) {\n                    ret = k;\n                }\n            });\n            return ret;\n        };\n        this.cellMatrix(curLId, transformedInput).forEach(function (value) {\n            switch (value.stackDown) {\n                case stackDown: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchPushEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput)\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n                case Computer_1.EPS: {\n                    var newStack = stack.cpyTo(new Stack_1.Stack());\n                    _this.matchDownEpsVal(value, newStack);\n                    positions.push({\n                        stmt: _this.statements.get(value.id), stack: newStack,\n                        from: _this.nodes[curLId],\n                        cur: _this.nodes[value.idLogic],\n                        by: getLetter(transformedInput)\n                        //? \n                    });\n                    hist.push({ by: getLetter(transformedInput), from: _this.nodes[curLId], value: _this.nodes[value.idLogic] });\n                    break;\n                }\n            }\n        });\n        return positions;\n    };\n    PDA.prototype.isDeterministic = function () {\n        var ret = true;\n        this.matrix.forEach(function (line) { return line.forEach(function (cells) {\n            var fstCell = cells[0];\n            var hasDublicates = cells.reduce(function (acc, stmt) { return acc || (stmt.stackDown === fstCell.stackDown); }, false);\n            if (cells.length > 1 && hasDublicates) {\n                ret = false;\n            }\n        }); });\n        return ret && (!this.haveEpsilon());\n    };\n    PDA.prototype.haveAdmitting = function (positions) {\n        var ret = false;\n        if (this.admitByEmptyStack === false || this.admitByEmptyStack === undefined) {\n            positions.forEach(function (value) {\n                if (value.stmt.isAdmit) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n        else {\n            positions.forEach(function (value) {\n                if (value.stack.size() === 0) {\n                    ret = true;\n                }\n            });\n            return ret;\n        }\n    };\n    PDA.prototype.toNodes = function (positions) {\n        var _this = this;\n        var retNodes = [];\n        positions.forEach(function (value) {\n            var temp = __assign(__assign({}, _this.nodes[value.stmt.idLogic]), { stack: value.stack.getStorage(), from: value.from, cur: value.cur, by: value.by });\n            retNodes.push(temp);\n        });\n        return retNodes;\n    };\n    return PDA;\n}(Computer_1.Computer));\nexports.PDA = PDA;\nvar Queue = /** @class */ (function () {\n    function Queue(capacity) {\n        if (capacity === void 0) { capacity = Infinity; }\n        this.capacity = capacity;\n        this.storage = [];\n    }\n    Queue.prototype.enqueue = function (item) {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n    };\n    Queue.prototype.dequeue = function () {\n        return this.storage.shift();\n    };\n    Queue.prototype.size = function () {\n        return this.storage.length;\n    };\n    Queue.prototype.getStorage = function () {\n        return this.storage;\n    };\n    return Queue;\n}());\nvar ImSet = /** @class */ (function () {\n    function ImSet() {\n        this.table = new Map();\n        this.set = [];\n    }\n    ImSet.prototype.normalize = function (v) {\n        var _v = lodash_1.cloneDeep(v);\n        _v = _v.sort();\n        return _v;\n    };\n    ImSet.prototype.getItter = function (value) {\n        if (!this.has(value)) {\n            throw Error;\n        }\n        var it = 0;\n        var _v = this.normalize(value);\n        this.set.forEach(function (value1, index) {\n            if (JSON.stringify(_v) === JSON.stringify(value1)) {\n                it = index;\n            }\n        });\n        return it;\n    };\n    ImSet.prototype.has = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        return this.table.has(k);\n    };\n    ImSet.prototype.myForEach = function (callback) {\n        this.set.forEach(function (value1, index) {\n            callback(value1, index);\n        });\n    };\n    ImSet.prototype.add = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        if (!this.table.has(k)) {\n            this.table.set(k, _v);\n            this.set.push(_v);\n        }\n    };\n    ImSet.prototype.size = function () {\n        return this.set.length;\n    };\n    ImSet.prototype.getNth = function (i) {\n        return this.set[i];\n    };\n    ImSet.prototype.getIter = function (value) {\n        var _v = this.normalize(value);\n        var k = JSON.stringify(_v);\n        var iter = 0;\n        this.set.forEach(function (v, index) {\n            if (JSON.stringify(v) === k) {\n                iter = index;\n            }\n        });\n        return iter;\n    };\n    ImSet.prototype.getStorage = function () {\n        return this.set;\n    };\n    return ImSet;\n}());\nexports.ImSet = ImSet;\nvar nfa = new PDA({\n    nodes: [\n        // { id: 9, isAdmit: false },\n        { id: 10, isAdmit: false },\n        { id: 11, isAdmit: false },\n        { id: 12, isAdmit: false },\n        { id: 13, isAdmit: false },\n        { id: 14, isAdmit: false },\n        { id: 15, isAdmit: false },\n        { id: 16, isAdmit: false },\n        { id: 17, isAdmit: false },\n    ],\n    edges: [\n        // { from: 9, to: 10, transitions: new Set([[{ title: EPS }]]) },\n        { from: 10, to: 11, transitions: new Set([[{ title: 'a' }]]) },\n        { from: 11, to: 12, transitions: new Set([[{ title: Computer_1.EPS }]]) },\n        { from: 12, to: 13, transitions: new Set([[{ title: 'b' }]]) },\n        { from: 14, to: 15, transitions: new Set([[{ title: 'a' }]]) },\n        { from: 15, to: 16, transitions: new Set([[{ title: Computer_1.EPS }]]) },\n        { from: 16, to: 17, transitions: new Set([[{ title: 'b' }]]) },\n    ]\n}, [{ id: 10, isAdmit: false }, { id: 14, isAdmit: false }], ['a', 'b']);\n// console.log(nfa.isDeterministic())\n// nfa.step()\nvar aa = nfa.run();\nconsole.log('_____-_--');\naa.histTrace.forEach(function (v) {\n    // console.log(v.byEpsPred)\n    console.log(v.byEpsAfter);\n    // console.log(v.byLetter)\n    console.log();\n});\n// const a = nfa.step()\n// console.log()\n// console.log()\n// console.log('Letter')\n// console.log(a.byLetter)\n// console.log('byEpsPred')\n// console.log(a.byEpsPred)\n// console.log('byEpsAfter')\n// console.log(a.byEpsAfter)\n// a.tree?.forEach((v) => {\n//     v.forEach((vv) => console.log(vv.by, vv.from, vv.value))\n//     console.log()\n// })\n// let nfa = new PDA(\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: true},\n//             {id: 5, isAdmit: true},\n//             {id: 6, isAdmit: false},\n//\n//         ],\n//         edges: [\n//\n//             {from: 0, to: 1, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 0, to: 2, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 1, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 1, to: 4, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 2, to: 3, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 2, to: 5, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 3, to: 3, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 3, to: 3, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 4, to: 4, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 4, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 5, to: 5, transitions: new Set([    [{title:      '0' }]])},\n//             {from: 5, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//             {from: 6, to: 6, transitions: new Set([    [{title:      '0' }, {title:      '1' }]])},\n//             // {from: 6, to: 6, transitions: new Set([    [{title:      '1' }]])},\n//\n//\n//         ]\n//     }, [{id: 0, isAdmit: false}], [\"0\", \"1\", \"0\"], )\n//\n// nfa.nfaToDfa()\n// console.log(nfa.run())\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar PDA_1 = require(\"./PDA\");\nvar EpsilonNFA = /** @class */ (function (_super) {\n    __extends(EpsilonNFA, _super);\n    function EpsilonNFA(graph, startStatement, input) {\n        var _this = _super.call(this, graph, startStatement, input) || this;\n        _this.enfaStep = function () {\n            var _a;\n            var histUnit = [];\n            var ret = _this._step(_this.counterSteps, _this.alphabet.get((_a = _this.input[_this.counterSteps]) === null || _a === void 0 ? void 0 : _a.value), _this.historiStep, histUnit, []);\n            _this.counterSteps = ret.counter;\n            _this.historiStep = ret.history;\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return ret;\n        };\n        _this.enfaRun = function () {\n            var histUnit = [];\n            var histTrace = [];\n            _this.historiRun = [];\n            _this.counterStepsForResult = 0;\n            for (var i = 0; i < _this.input.length - 1; i++) {\n                var tmp = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n                _this.counterStepsForResult = tmp.counter;\n                _this.historiRun = tmp.history;\n                histTrace.push({ byEpsPred: tmp.byEpsPred, byLetter: tmp.byLetter, byEpsAfter: tmp.byEpsAfter });\n            }\n            var ret = _this._step(_this.counterStepsForResult, _this.alphabet.get(_this.input[_this.counterStepsForResult].value), _this.historiRun, histUnit, []);\n            histTrace.push({ byEpsPred: ret.byEpsPred, byLetter: ret.byLetter, byEpsAfter: ret.byEpsAfter });\n            ret.nodes.forEach(function (value) { return value.stack = undefined; });\n            ret.history.forEach(function (value) { return value.nodes.forEach(function (value1) { return value1.stack = undefined; }); });\n            return __assign(__assign({}, ret), { histTrace: histTrace });\n        };\n        _this.step = _this.enfaStep;\n        _this.run = _this.enfaRun;\n        return _this;\n    }\n    return EpsilonNFA;\n}(PDA_1.PDA));\nexports.EpsilonNFA = EpsilonNFA;\n// let nfa = new EpsilonNFA (\n//     {\n//         nodes: [\n//             {id: 0, isAdmit: false},\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             // {id: 2, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             // {from: 0, to: 0, transitions: new Set([ [{title: 'a'}, {title: 'b'}] ])},\n//             {from: 0, to: 1, transitions: new Set([ [{title: EPS}] ])},\n//             {from: 1, to: 2, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 2, to: 3, transitions: new Set([ [{title: \"a\"}] ])},\n//             {from: 3, to: 4, transitions: new Set([ [{title: \"a\"}] ])},\n//             // {from: 1, to: 2, transitions: new Set([ [{title: EPS}] ])},\n//         ]\n//     }, [{id: 0, isAdmit: false}, {id: 3, isAdmit: false}], ['a', 'a'],\n// )\n// console.log(nfa.step())\n// console.log(nfa.step())\n// nfa.nfaToDfa()\n//\n// let nfa = new EpsilonNFA(\n//     {\n//         nodes: [\n//             {id: 1, isAdmit: false},\n//             {id: 2, isAdmit: false},\n//             {id: 3, isAdmit: false},\n//             {id: 4, isAdmit: false},\n//             {id: 5, isAdmit: false},\n//             {id: 6, isAdmit: false},\n//             {id: 7, isAdmit: false},\n//             {id: 8, isAdmit: false},\n//             {id: 9, isAdmit: false},\n//             {id: 10, isAdmit: false},\n//             {id: 11, isAdmit: false},\n//             {id: 12, isAdmit: false},\n//\n//         ],\n//         edges: [\n//             {from: 1, to: 2, transitions: new Set([     {title:      EPS}])},\n//             {from: 1, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 3, transitions: new Set([     {title:      EPS }])},\n//             {from: 2, to: 9, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 3, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 4, to: 5, transitions: new Set([     {title:      'a' }])},\n//             {from: 5, to: 4, transitions: new Set([     {title:      EPS }])},\n//             {from: 5, to: 6, transitions: new Set([     {title:      EPS }])},\n//             {from: 6, to: 7, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 2, transitions: new Set([     {title:      EPS }])},\n//             {from: 7, to: 8, transitions: new Set([     {title:      EPS }])},\n//             {from: 9, to: 10, transitions: new Set([    {title:      EPS }])},\n//             {from: 9, to: 12, transitions: new Set([    {title:      EPS }])},\n//             {from: 10, to: 11, transitions: new Set([   {title:      'b' }])},\n//             {from: 11, to: 10, transitions: new Set([   {title:      EPS }])},\n//             {from: 11, to: 12, transitions: new Set([   {title:      EPS }])},\n//             {from: 12, to: 7, transitions: new Set([    {title:      EPS }])},\n//\n//\n//\n//\n//\n//\n//             //\n//             // {from: 1, to: 3, transitions: new Set([{title: EPS}])},\n//             // {from: 2, to: 4, transitions: new Set([{title: '0'}])},\n//             // {from: 4, to: 5, transitions: new Set([{title: '1'}])},\n//             // {from: 5, to: 6, transitions: new Set([{title: '1'}])},\n//             // {from: 3, to: 7, transitions: new Set([{title: '1'}])},\n//             // {from: 7, to: 8, transitions: new Set([{title: '0'}])},\n//             // {from: 8, to: 9, transitions: new Set([{title: '1'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '0'}])},\n//             // {from: 9, to: 9, transitions: new Set([{title: '1'}])},\n//             //\n//             // {from: 6, to: 6, transitions: new Set([{title: '0'}])},\n//             // {from: 6, to: 6, transitions: new Set([{title: '1'}])},\n//         ]\n//     }, [{id: 1, isAdmit: false}], ['a', 'b'])\n// console.log(nfa.step())\n// console.log(nfa.step())\n"],"sourceRoot":""}